// fn3CEE_C583
// Return size: 4
define fn3CEE_C583
fn3CEE_C583_entry:
	sp = fp
	Top = 0<i8>
	// succ:  l3CEE_C583
l3CEE_C583:
	v4 = bp
	bp = ax
	ax = v4
	ST[Top:real64] = ST[Top:real64] / CONVERT(Mem0[ds:bx + di:real32], real32, real64)
	v12 = Mem0[ds:di + 0x32D8<16>:byte] + dl
	Mem0[ds:di + 0x32D8<16>:byte] = v12
	SCZO = cond(v12)
	v14 = Mem0[ds:di + 0x33D8<16>:byte] + dl
	Mem0[ds:di + 0x33D8<16>:byte] = v14
	SCZO = cond(v14)
	v15 = Mem0[ds:di + 0x34D8<16>:byte] + dl
	Mem0[ds:di + 0x34D8<16>:byte] = v15
	SCZO = cond(v15)
	v16 = Mem0[ds:di + 0x35D8<16>:byte] + dl
	Mem0[ds:di + 0x35D8<16>:byte] = v16
	SCZO = cond(v16)
	v17 = Mem0[ds:di + 0x36D8<16>:byte] + dl
	Mem0[ds:di + 0x36D8<16>:byte] = v17
	SCZO = cond(v17)
	v18 = Mem0[ds:di + 0x37D8<16>:byte] + dl
	Mem0[ds:di + 0x37D8<16>:byte] = v18
	SCZO = cond(v18)
	v19 = Mem0[ds:di + 0x38D8<16>:byte] + dl
	Mem0[ds:di + 0x38D8<16>:byte] = v19
	SCZO = cond(v19)
	v20 = Mem0[ds:di + 0x39D8<16>:byte] + dl
	Mem0[ds:di + 0x39D8<16>:byte] = v20
	SCZO = cond(v20)
	v21 = Mem0[ds:di + 0x3AD8<16>:byte] + dl
	Mem0[ds:di + 0x3AD8<16>:byte] = v21
	SCZO = cond(v21)
	v22 = Mem0[ds:di + 0x3BD8<16>:byte] + dl
	Mem0[ds:di + 0x3BD8<16>:byte] = v22
	SCZO = cond(v22)
	v23 = Mem0[ds:di + 0x3CD8<16>:byte] + dl
	Mem0[ds:di + 0x3CD8<16>:byte] = v23
	SCZO = cond(v23)
	v24 = Mem0[ds:di + 0x3DD8<16>:byte] + dl
	Mem0[ds:di + 0x3DD8<16>:byte] = v24
	SCZO = cond(v24)
	v25 = Mem0[ds:di + 0x3ED8<16>:byte] + dl
	Mem0[ds:di + 0x3ED8<16>:byte] = v25
	SCZO = cond(v25)
	v26 = Mem0[ds:di + 0x3FD8<16>:byte] + dl
	Mem0[ds:di + 0x3FD8<16>:byte] = v26
	SCZO = cond(v26)
	v27 = Mem0[ds:di + 0x40D8<16>:byte] + dl
	Mem0[ds:di + 0x40D8<16>:byte] = v27
	SCZO = cond(v27)
	v28 = Mem0[ds:di + 0x41D8<16>:byte] + dl
	Mem0[ds:di + 0x41D8<16>:byte] = v28
	SCZO = cond(v28)
	v29 = Mem0[ds:di + 0x1597<16>:byte] + dl
	Mem0[ds:di + 0x1597<16>:byte] = v29
	SCZO = cond(v29)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp + 1<16>
	SZO = cond(sp)
	di = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	di = di - 1<16>
	SZO = cond(di)
	si = si + 1<16>
	SZO = cond(si)
	v35 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v35
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx - 1<16>
	SZO = cond(bx)
	bx = bx + 1<16>
	SZO = cond(bx)
	si = si + 1<16>
	SZO = cond(si)
	di = di + 1<16>
	SZO = cond(di)
	bh = bh + ah
	SCZO = cond(bh)
	branch Test(UGE,C) l3CEE_C5FF
	goto l3CEE_C5E3
	// succ:  l3CEE_C5E3 l3CEE_C5FF
l3CEE_C583:
l3CEE_C5E3:
	v39 = di
	di = ax
	ax = v39
	dh = dh - Mem0[ds:bx + 47<i16>:byte] - C
	SCZO = cond(dh)
	__out<byte>(dx, al)
	si = si + 1<i16>
	v42 = Mem0[ds:bx + si:byte] & ah
	Mem0[ds:bx + si:byte] = v42
	SZ = cond(Mem0[ds:bx + si:byte])
	O = false
	C = false
	v45 = Mem0[ds:bx + si:byte] & ah
	Mem0[ds:bx + si:byte] = v45
	SZ = cond(Mem0[ds:bx + si:byte])
	O = false
	C = false
	v46 = Mem0[ds:bx + si:byte] & ah
	Mem0[ds:bx + si:byte] = v46
	SZ = cond(Mem0[ds:bx + si:byte])
	O = false
	C = false
	v47 = Mem0[ds:bx + si:byte] & ah
	Mem0[ds:bx + si:byte] = v47
	SZ = cond(Mem0[ds:bx + si:byte])
	O = false
	C = false
	v48 = Mem0[ds:bx + si:byte] & ah
	Mem0[ds:bx + si:byte] = v48
	SZ = cond(Mem0[ds:bx + si:byte])
	O = false
	C = false
	v49 = Mem0[ds:bx + si:byte] & ah
	Mem0[ds:bx + si:byte] = v49
	SZ = cond(Mem0[ds:bx + si:byte])
	O = false
	C = false
	v50 = Mem0[ds:bx + si:byte] & ah
	Mem0[ds:bx + si:byte] = v50
	SZ = cond(Mem0[ds:bx + si:byte])
	O = false
	C = false
	v51 = Mem0[ds:bx + si:byte] & ah
	Mem0[ds:bx + si:byte] = v51
	SZ = cond(Mem0[ds:bx + si:byte])
	O = false
	C = false
	v52 = Mem0[ds:bx + si:byte] & ah
	Mem0[ds:bx + si:byte] = v52
	SZ = cond(Mem0[ds:bx + si:byte])
	O = false
	C = false
	v53 = Mem0[ds:bx + si:byte] & ah
	Mem0[ds:bx + si:byte] = v53
	SZ = cond(Mem0[ds:bx + si:byte])
	O = false
	C = false
	v54 = Mem0[ds:bx + si:byte] & ah
	Mem0[ds:bx + si:byte] = v54
	SZ = cond(Mem0[ds:bx + si:byte])
	O = false
	C = false
	v55 = Mem0[ds:bx + si:byte] & al
	Mem0[ds:bx + si:byte] = v55
	SZ = cond(Mem0[ds:bx + si:byte])
	O = false
	C = false
	goto l3CEE_C600
	// succ:  l3CEE_C600
l3CEE_C5FF:
	v56 = Mem0[ss:bp + 0xEF80<16> + si:byte] + bh
	Mem0[ss:bp + 0xEF80<16> + si:byte] = v56
	SCZO = cond(v56)
	goto l3CEE_C603
	// succ:  l3CEE_C603
l3CEE_C600:
	dx = 0xEF80<16>
	// succ:  l3CEE_C603
l3CEE_C603:
	dx_ax = CONVERT(ax, int16, int32)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ss
	v59 = Mem0[ds:bx + 0x4F<16> + di:byte] + bl
	Mem0[ds:bx + 0x4F<16> + di:byte] = v59
	SCZO = cond(v59)
	al = al | Mem0[ss:bx + si:byte]
	SZ = cond(al)
	O = false
	C = false
	dx_ax = CONVERT(ax, int16, int32)
	ss = Mem0[ss:sp:selector]
	sp = sp + 2<i16>
	bh = bh + ch
	SCZO = cond(bh)
	dx_ax = CONVERT(ax, int16, int32)
	v61 = Mem0[ds:bx + si:byte] - al - C
	Mem0[ds:bx + si:byte] = v61
	SCZO = cond(v61)
	dx_ax = CONVERT(ax, int16, int32)
	di = di - 1<16>
	SZO = cond(di)
	v62 = Mem0[ss:bp + 0x2D<16>:byte] + bl
	Mem0[ss:bp + 0x2D<16>:byte] = v62
	SCZO = cond(v62)
	sp = bp
	bp = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	ax = ax + 0xD800<16>
	SCZO = cond(ax)
	ds = Mem0[ss:sp:selector]
	sp = sp + 2<i16>
	v63 = Mem0[ss:bp - 121<i16>:byte] + al
	Mem0[ss:bp - 121<i16>:byte] = v63
	SCZO = cond(v63)
	v64 = di
	di = ax
	ax = v64
	dh = dh - Mem0[ds:bx + 47<i16>:byte] - C
	SCZO = cond(dh)
	__out<byte>(dx, al)
	si = si + 1<i16>
	v65 = Mem0[ds:bx + si:byte] & ah
	Mem0[ds:bx + si:byte] = v65
	SZ = cond(Mem0[ds:bx + si:byte])
	O = false
	C = false
	v66 = Mem0[ds:bx + si:byte] & ah
	Mem0[ds:bx + si:byte] = v66
	SZ = cond(Mem0[ds:bx + si:byte])
	O = false
	C = false
	v67 = Mem0[ds:bx + si:byte] & ah
	Mem0[ds:bx + si:byte] = v67
	SZ = cond(Mem0[ds:bx + si:byte])
	O = false
	C = false
	v68 = Mem0[ds:bx + si:byte] & ah
	Mem0[ds:bx + si:byte] = v68
	SZ = cond(Mem0[ds:bx + si:byte])
	O = false
	C = false
	v69 = Mem0[ds:bx + si:byte] & ah
	Mem0[ds:bx + si:byte] = v69
	SZ = cond(Mem0[ds:bx + si:byte])
	O = false
	C = false
	v70 = Mem0[ds:bx + si:byte] & ah
	Mem0[ds:bx + si:byte] = v70
	SZ = cond(Mem0[ds:bx + si:byte])
	O = false
	C = false
	v71 = Mem0[ds:bx + si:byte] & ah
	Mem0[ds:bx + si:byte] = v71
	SZ = cond(Mem0[ds:bx + si:byte])
	O = false
	C = false
	v72 = Mem0[ds:bx + si:byte] & ah
	Mem0[ds:bx + si:byte] = v72
	SZ = cond(Mem0[ds:bx + si:byte])
	O = false
	C = false
	v73 = Mem0[ds:bx + si:byte] & ah
	Mem0[ds:bx + si:byte] = v73
	SZ = cond(Mem0[ds:bx + si:byte])
	O = false
	C = false
	v74 = Mem0[ds:bx + si:byte] & ah
	Mem0[ds:bx + si:byte] = v74
	SZ = cond(Mem0[ds:bx + si:byte])
	O = false
	C = false
	v75 = Mem0[ds:bx + si:byte] & ah
	Mem0[ds:bx + si:byte] = v75
	SZ = cond(Mem0[ds:bx + si:byte])
	O = false
	C = false
	v76 = Mem0[ds:bx + si:byte] & al
	Mem0[ds:bx + si:byte] = v76
	SZ = cond(Mem0[ds:bx + si:byte])
	O = false
	C = false
	dx = 0x59<16>
	v77 = Mem0[ds:si:byte] + dh
	Mem0[ds:si:byte] = v77
	SCZO = cond(v77)
	v78 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v78
	SCZO = cond(v78)
	v79 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v79
	SCZO = cond(v79)
	v80 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v80
	SCZO = cond(v80)
	v81 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v81
	SCZO = cond(v81)
	v82 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v82
	SCZO = cond(v82)
	v83 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v83
	SCZO = cond(v83)
	v84 = Mem0[ds:di - 117<i16>:byte] + dl
	Mem0[ds:di - 117<i16>:byte] = v84
	SCZO = cond(v84)
	al = __in<byte>(dx)
	bx = bx ^ bx
	SZ = cond(bx)
	O = false
	C = false
	ax = 0<16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	ax = 0x4CF0<16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	ax = 0x1D<16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = cs
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	call fn3BC2_0000 (retsize: 4;)
	sp = bp
	bp = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	return
	// succ:  fn3CEE_C583_exit
fn3CEE_C583_exit:


