// fn3CEE_DE1E
// Return size: 2
define fn3CEE_DE1E
fn3CEE_DE1E_entry:
	sp = fp
	Top = 0<i8>
	// succ:  l3CEE_DE1E
l3CEE_DE1E:
	v8 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v8
	SCZO = cond(v8)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v12 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v12
	si = si - 1<16>
	SZO = cond(si)
	di = di - 1<16>
	SZO = cond(di)
	v15 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v15
	SCZO = cond(v15)
	v16 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v16
	SCZO = cond(v16)
	v17 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v17
	SCZO = cond(v17)
	v18 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v18
	SCZO = cond(v18)
	v19 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v19
	SCZO = cond(v19)
	v20 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v20
	SCZO = cond(v20)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	dx = dx + 1<16>
	SZO = cond(dx)
	si = si - 1<16>
	SZO = cond(si)
	di = di - 1<16>
	SZO = cond(di)
	v21 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v21
	SCZO = cond(v21)
	v22 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v22
	SCZO = cond(v22)
	v23 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v23
	SCZO = cond(v23)
	v24 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v24
	SCZO = cond(v24)
	v25 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v25
	SCZO = cond(v25)
	v26 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v26
	SCZO = cond(v26)
	si = si - 1<16>
	SZO = cond(si)
	cx = cx + 1<16>
	SZO = cond(cx)
	bp = bp - 1<16>
	SZO = cond(bp)
	bp = bp + 1<16>
	SZO = cond(bp)
	v29 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v29
	SCZO = cond(v29)
	v30 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v30
	SCZO = cond(v30)
	v31 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v31
	SCZO = cond(v31)
	v32 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v32
	SCZO = cond(v32)
	v33 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v33
	SCZO = cond(v33)
	v34 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v34
	SCZO = cond(v34)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bx = bx + 1<16>
	SZO = cond(bx)
	bx = bx - 1<16>
	SZO = cond(bx)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v35 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v35
	SCZO = cond(v35)
	v36 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v36
	SCZO = cond(v36)
	v37 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v37
	SCZO = cond(v37)
	v38 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v38
	SCZO = cond(v38)
	v39 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v39
	SCZO = cond(v39)
	v40 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v40
	SCZO = cond(v40)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp + 1<16>
	SZO = cond(sp)
	v41 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v41
	v42 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v42
	SCZO = cond(v42)
	v43 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v43
	SCZO = cond(v43)
	v44 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v44
	SCZO = cond(v44)
	v45 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v45
	SCZO = cond(v45)
	v46 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v46
	SCZO = cond(v46)
	v47 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v47
	SCZO = cond(v47)
	si = si + 1<16>
	SZO = cond(si)
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si - 1<16>
	SZO = cond(si)
	v49 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v49
	SCZO = cond(v49)
	v50 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v50
	SCZO = cond(v50)
	v51 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v51
	SCZO = cond(v51)
	__sti()
	v52 = Mem0[ds:bx + 76<i16> + di:byte] | al
	Mem0[ds:bx + 76<i16> + di:byte] = v52
	SZ = cond(Mem0[ds:bx + 76<i16> + di:byte])
	O = false
	C = false
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v56 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v56
	// succ:  l3CEE_DE86_thunk_fn3CEE_DE87
l3CEE_DE86_thunk_fn3CEE_DE87:
	call fn3CEE_DE87 (retsize: 0;)
	return
	// succ:  fn3CEE_DE1E_exit
fn3CEE_DE1E_exit:


// fn3CEE_DE87
// Return size: 2
define fn3CEE_DE87
fn3CEE_DE87_entry:
	sp = fp
	Top = 0<i8>
	// succ:  l3CEE_DE87
l3CEE_DE87:
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v12 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v12
	SCZO = cond(v12)
	v14 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v14
	SCZO = cond(v14)
	v15 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v15
	SCZO = cond(v15)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v18 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v18
	SCZO = cond(v18)
	v19 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v19
	SCZO = cond(v19)
	v20 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v20
	SCZO = cond(v20)
	v21 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v21
	SCZO = cond(v21)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v22 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v22
	SCZO = cond(v22)
	v23 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v23
	SCZO = cond(v23)
	v24 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v24
	SCZO = cond(v24)
	v25 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v25
	SCZO = cond(v25)
	v26 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v26
	SCZO = cond(v26)
	v27 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v27
	SCZO = cond(v27)
	v29 = Mem0[ds:si + 79<i16>:byte] + cl
	Mem0[ds:si + 79<i16>:byte] = v29
	SCZO = cond(v29)
	si = si - 1<16>
	SZO = cond(si)
	v30 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v30
	SCZO = cond(v30)
	v31 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v31
	SCZO = cond(v31)
	v32 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v32
	SCZO = cond(v32)
	v33 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v33
	SCZO = cond(v33)
	v34 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v34
	SCZO = cond(v34)
	v35 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v35
	SCZO = cond(v35)
	v37 = Mem0[ds:bx + 65<i16> + si:byte] + dl
	Mem0[ds:bx + 65<i16> + si:byte] = v37
	SCZO = cond(v37)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v38 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v38
	SCZO = cond(v38)
	v39 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v39
	SCZO = cond(v39)
	v40 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v40
	SCZO = cond(v40)
	v41 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v41
	SCZO = cond(v41)
	v42 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v42
	SCZO = cond(v42)
	v43 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v43
	SCZO = cond(v43)
	v44 = Mem0[ss:bp + 87<i16> + si:byte] + al
	Mem0[ss:bp + 87<i16> + si:byte] = v44
	SCZO = cond(v44)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v45 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v45
	SCZO = cond(v45)
	v46 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v46
	SCZO = cond(v46)
	v47 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v47
	SCZO = cond(v47)
	v48 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v48
	SCZO = cond(v48)
	v49 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v49
	SCZO = cond(v49)
	v50 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v50
	SCZO = cond(v50)
	v51 = Mem0[ds:si + 83<i16>:byte] + cl
	Mem0[ds:si + 83<i16>:byte] = v51
	SCZO = cond(v51)
	v52 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v52
	v53 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v53
	SCZO = cond(v53)
	v54 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v54
	SCZO = cond(v54)
	v55 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v55
	SCZO = cond(v55)
	v56 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v56
	SCZO = cond(v56)
	v57 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v57
	SCZO = cond(v57)
	v58 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v58
	SCZO = cond(v58)
	v60 = Mem0[ss:bp + 85<i16> + di:byte] + dl
	Mem0[ss:bp + 85<i16> + di:byte] = v60
	SCZO = cond(v60)
	dx = dx + 1<16>
	SZO = cond(dx)
	v61 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v61
	SCZO = cond(v61)
	v62 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v62
	SCZO = cond(v62)
	v63 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v63
	SCZO = cond(v63)
	v64 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v64
	SCZO = cond(v64)
	v65 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v65
	SCZO = cond(v65)
	v66 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v66
	SCZO = cond(v66)
	v67 = Mem0[ds:si + 67<i16>:byte] + al
	Mem0[ds:si + 67<i16>:byte] = v67
	SCZO = cond(v67)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v68 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v68
	SCZO = cond(v68)
	v69 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v69
	SCZO = cond(v69)
	v70 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v70
	SCZO = cond(v70)
	v71 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v71
	SCZO = cond(v71)
	v72 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v72
	SCZO = cond(v72)
	v73 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v73
	SCZO = cond(v73)
	v74 = Mem0[ss:bp + 67<i16> + si:byte] + dl
	Mem0[ss:bp + 67<i16> + si:byte] = v74
	SCZO = cond(v74)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v75 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v75
	SCZO = cond(v75)
	v76 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v76
	SCZO = cond(v76)
	v77 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v77
	SCZO = cond(v77)
	v78 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v78
	SCZO = cond(v78)
	v79 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v79
	SCZO = cond(v79)
	v80 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v80
	SCZO = cond(v80)
	v81 = Mem0[ds:bx + 78<i16> + di:byte] + cl
	Mem0[ds:bx + 78<i16> + di:byte] = v81
	SCZO = cond(v81)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	v82 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v82
	SCZO = cond(v82)
	v83 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v83
	SCZO = cond(v83)
	v84 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v84
	SCZO = cond(v84)
	v85 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v85
	SCZO = cond(v85)
	v86 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v86
	SCZO = cond(v86)
	v87 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v87
	SCZO = cond(v87)
	v88 = Mem0[ds:bx + 78<i16> + di:byte] + cl
	Mem0[ds:bx + 78<i16> + di:byte] = v88
	SCZO = cond(v88)
	bx = bx + 1<16>
	SZO = cond(bx)
	v89 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v89
	SCZO = cond(v89)
	v90 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v90
	SCZO = cond(v90)
	v91 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v91
	SCZO = cond(v91)
	v92 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v92
	SCZO = cond(v92)
	v93 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v93
	SCZO = cond(v93)
	v94 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v94
	SCZO = cond(v94)
	v95 = Mem0[ss:bp + 73<i16>:byte] + al
	Mem0[ss:bp + 73<i16>:byte] = v95
	SCZO = cond(v95)
	sp = sp - 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 1<16>
	SZO = cond(sp)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bp = bp + 1<16>
	SZO = cond(bp)
	v96 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v96
	SCZO = cond(v96)
	v97 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v97
	SCZO = cond(v97)
	v99 = Mem0[ds:bx + si:byte] + ch
	Mem0[ds:bx + si:byte] = v99
	SCZO = cond(v99)
	v100 = Mem0[ds:bx + 76<i16> + di:word16] | ax
	Mem0[ds:bx + 76<i16> + di:word16] = v100
	SZ = cond(Mem0[ds:bx + 76<i16> + di:word16])
	O = false
	C = false
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v104 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v104
	SCZO = cond(v104)
	v105 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v105
	SCZO = cond(v105)
	v106 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v106
	SCZO = cond(v106)
	v107 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v107
	SCZO = cond(v107)
	v108 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v108
	SCZO = cond(v108)
	v109 = Mem0[ss:bp + 84<i16> + di:byte] + dl
	Mem0[ss:bp + 84<i16> + di:byte] = v109
	SCZO = cond(v109)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v110 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v110
	SCZO = cond(v110)
	v111 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v111
	SCZO = cond(v111)
	v112 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v112
	SCZO = cond(v112)
	v113 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v113
	SCZO = cond(v113)
	v114 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v114
	SCZO = cond(v114)
	v115 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v115
	SCZO = cond(v115)
	v116 = Mem0[ds:si + 69<i16>:byte] + cl
	Mem0[ds:si + 69<i16>:byte] = v116
	SCZO = cond(v116)
	v117 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v117
	SCZO = cond(v117)
	v118 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v118
	SCZO = cond(v118)
	v119 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v119
	SCZO = cond(v119)
	v120 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v120
	SCZO = cond(v120)
	v121 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v121
	SCZO = cond(v121)
	v122 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v122
	SCZO = cond(v122)
	v123 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v123
	SCZO = cond(v123)
	sp = sp - 1<16>
	SZO = cond(sp)
	si = si - 1<16>
	SZO = cond(si)
	v124 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v124
	SCZO = cond(v124)
	v125 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v125
	SCZO = cond(v125)
	v126 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v126
	SCZO = cond(v126)
	v127 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v127
	SCZO = cond(v127)
	v128 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v128
	SCZO = cond(v128)
	v129 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v129
	SCZO = cond(v129)
	v130 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v130
	SCZO = cond(v130)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	v131 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v131
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	cx = cx - 1<16>
	SZO = cond(cx)
	bp = bp - 1<16>
	SZO = cond(bp)
	v132 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v132
	SCZO = cond(v132)
	v133 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v133
	SCZO = cond(v133)
	v134 = Mem0[ds:si:byte] + cl
	Mem0[ds:si:byte] = v134
	SCZO = cond(v134)
	v136 = Mem0[ds:bx + 70<i16> + si:byte] + ah
	Mem0[ds:bx + 70<i16> + si:byte] = v136
	SCZO = cond(v136)
	bp = bp - 1<16>
	SZO = cond(bp)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp + 1<16>
	SZO = cond(sp)
	v137 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v137
	SCZO = cond(v137)
	v138 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v138
	SCZO = cond(v138)
	v139 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v139
	SCZO = cond(v139)
	v140 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v140
	SCZO = cond(v140)
	v141 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v141
	SCZO = cond(v141)
	v142 = Mem0[ss:bp + 72<i16>:byte] + ch
	Mem0[ss:bp + 72<i16>:byte] = v142
	SCZO = cond(v142)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	di = di - 1<16>
	SZO = cond(di)
	v143 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v143
	SCZO = cond(v143)
	v144 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v144
	SCZO = cond(v144)
	v145 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v145
	SCZO = cond(v145)
	v146 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v146
	SCZO = cond(v146)
	v147 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v147
	SCZO = cond(v147)
	C = __aaa(al, ah, &al, &ah)
	v148 = Mem0[ds:bx + 86<i16> + si:word16] | dx
	Mem0[ds:bx + 86<i16> + si:word16] = v148
	SZ = cond(Mem0[ds:bx + 86<i16> + si:word16])
	O = false
	C = false
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	v149 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v149
	SCZO = cond(v149)
	v150 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v150
	SCZO = cond(v150)
	v151 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v151
	SCZO = cond(v151)
	v152 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v152
	SCZO = cond(v152)
	v153 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v153
	SCZO = cond(v153)
	v154 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v154
	SCZO = cond(v154)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	si = si + 1<16>
	SZO = cond(si)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp - 1<16>
	SZO = cond(bp)
	v155 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v155
	SCZO = cond(v155)
	v156 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v156
	SCZO = cond(v156)
	v157 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v157
	SCZO = cond(v157)
	v158 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v158
	SCZO = cond(v158)
	v159 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v159
	SCZO = cond(v159)
	v160 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v160
	SCZO = cond(v160)
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v161 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v161
	SCZO = cond(v161)
	v162 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v162
	SCZO = cond(v162)
	v163 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v163
	SCZO = cond(v163)
	v164 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v164
	SCZO = cond(v164)
	v165 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v165
	SCZO = cond(v165)
	cx = cx + 1<16>
	SZO = cond(cx)
	v166 = Mem0[ds:bx + 69<i16>:word16] | ax
	Mem0[ds:bx + 69<i16>:word16] = v166
	SZ = cond(Mem0[ds:bx + 69<i16>:word16])
	O = false
	C = false
	v167 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v167
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v168 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v168
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v169 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v169
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v170 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v170
	SCZO = cond(v170)
	v171 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v171
	SCZO = cond(v171)
	si = si - 1<16>
	SZO = cond(si)
	v172 = Mem0[ds:si + 84<i16>:word16] | ax
	Mem0[ds:si + 84<i16>:word16] = v172
	SZ = cond(Mem0[ds:si + 84<i16>:word16])
	O = false
	C = false
	v173 = Mem0[ds:bx + si:word16] ^ ax
	Mem0[ds:bx + si:word16] = v173
	SZ = cond(Mem0[ds:bx + si:word16])
	O = false
	C = false
	v174 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v174
	SCZO = cond(v174)
	v175 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v175
	SCZO = cond(v175)
	v176 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v176
	SCZO = cond(v176)
	v177 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v177
	SCZO = cond(v177)
	v178 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v178
	SCZO = cond(v178)
	v179 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v179
	SCZO = cond(v179)
	sp = sp + 1<16>
	SZO = cond(sp)
	v180 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v180
	al = al ^ Mem0[ds:bx + si:byte]
	SZ = cond(al)
	O = false
	C = false
	v181 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v181
	SCZO = cond(v181)
	v182 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v182
	SCZO = cond(v182)
	v183 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v183
	SCZO = cond(v183)
	v184 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v184
	SCZO = cond(v184)
	v185 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v185
	SCZO = cond(v185)
	goto l3CEE_E01C_thunk_fn3CEE_E01E
	// succ:  l3CEE_E01C_thunk_fn3CEE_E01E
l3CEE_DE87:
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v187 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v187
	SCZO = cond(v187)
	v188 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v188
	SCZO = cond(v188)
	v189 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v189
	SCZO = cond(v189)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v190 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v190
	SCZO = cond(v190)
	v191 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v191
	SCZO = cond(v191)
	v192 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v192
	SCZO = cond(v192)
	v193 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v193
	SCZO = cond(v193)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v194 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v194
	SCZO = cond(v194)
	v195 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v195
	SCZO = cond(v195)
	v196 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v196
	SCZO = cond(v196)
	v197 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v197
	SCZO = cond(v197)
	v198 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v198
	SCZO = cond(v198)
	v199 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v199
	SCZO = cond(v199)
	v200 = Mem0[ds:si + 79<i16>:byte] + cl
	Mem0[ds:si + 79<i16>:byte] = v200
	SCZO = cond(v200)
	si = si - 1<16>
	SZO = cond(si)
	v201 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v201
	SCZO = cond(v201)
	v202 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v202
	SCZO = cond(v202)
	v203 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v203
	SCZO = cond(v203)
	v204 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v204
	SCZO = cond(v204)
	v205 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v205
	SCZO = cond(v205)
	v206 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v206
	SCZO = cond(v206)
	v207 = Mem0[ds:bx + 65<i16> + si:byte] + dl
	Mem0[ds:bx + 65<i16> + si:byte] = v207
	SCZO = cond(v207)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v208 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v208
	SCZO = cond(v208)
	v209 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v209
	SCZO = cond(v209)
	v210 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v210
	SCZO = cond(v210)
	v211 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v211
	SCZO = cond(v211)
	v212 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v212
	SCZO = cond(v212)
	v213 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v213
	SCZO = cond(v213)
	v214 = Mem0[ss:bp + 87<i16> + si:byte] + al
	Mem0[ss:bp + 87<i16> + si:byte] = v214
	SCZO = cond(v214)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v215 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v215
	SCZO = cond(v215)
	v216 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v216
	SCZO = cond(v216)
	v217 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v217
	SCZO = cond(v217)
	v218 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v218
	SCZO = cond(v218)
	v219 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v219
	SCZO = cond(v219)
	v220 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v220
	SCZO = cond(v220)
	v221 = Mem0[ds:si + 83<i16>:byte] + cl
	Mem0[ds:si + 83<i16>:byte] = v221
	SCZO = cond(v221)
	v222 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v222
	v223 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v223
	SCZO = cond(v223)
	v224 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v224
	SCZO = cond(v224)
	v225 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v225
	SCZO = cond(v225)
	v226 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v226
	SCZO = cond(v226)
	v227 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v227
	SCZO = cond(v227)
	v228 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v228
	SCZO = cond(v228)
	v229 = Mem0[ss:bp + 85<i16> + di:byte] + dl
	Mem0[ss:bp + 85<i16> + di:byte] = v229
	SCZO = cond(v229)
	dx = dx + 1<16>
	SZO = cond(dx)
	v230 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v230
	SCZO = cond(v230)
	v231 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v231
	SCZO = cond(v231)
	v232 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v232
	SCZO = cond(v232)
	v233 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v233
	SCZO = cond(v233)
	v234 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v234
	SCZO = cond(v234)
	v235 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v235
	SCZO = cond(v235)
	v236 = Mem0[ds:si + 67<i16>:byte] + al
	Mem0[ds:si + 67<i16>:byte] = v236
	SCZO = cond(v236)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v237 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v237
	SCZO = cond(v237)
	v238 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v238
	SCZO = cond(v238)
	v239 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v239
	SCZO = cond(v239)
	v240 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v240
	SCZO = cond(v240)
	v241 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v241
	SCZO = cond(v241)
	v242 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v242
	SCZO = cond(v242)
	v243 = Mem0[ss:bp + 67<i16> + si:byte] + dl
	Mem0[ss:bp + 67<i16> + si:byte] = v243
	SCZO = cond(v243)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v244 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v244
	SCZO = cond(v244)
	v245 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v245
	SCZO = cond(v245)
	v246 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v246
	SCZO = cond(v246)
	v247 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v247
	SCZO = cond(v247)
	v248 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v248
	SCZO = cond(v248)
	v249 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v249
	SCZO = cond(v249)
	v250 = Mem0[ds:bx + 78<i16> + di:byte] + cl
	Mem0[ds:bx + 78<i16> + di:byte] = v250
	SCZO = cond(v250)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	v251 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v251
	SCZO = cond(v251)
	v252 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v252
	SCZO = cond(v252)
	v253 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v253
	SCZO = cond(v253)
	v254 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v254
	SCZO = cond(v254)
	v255 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v255
	SCZO = cond(v255)
	v256 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v256
	SCZO = cond(v256)
	v257 = Mem0[ds:bx + 78<i16> + di:byte] + cl
	Mem0[ds:bx + 78<i16> + di:byte] = v257
	SCZO = cond(v257)
	bx = bx + 1<16>
	SZO = cond(bx)
	v258 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v258
	SCZO = cond(v258)
	v259 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v259
	SCZO = cond(v259)
	v260 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v260
	SCZO = cond(v260)
	v261 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v261
	SCZO = cond(v261)
	v262 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v262
	SCZO = cond(v262)
	v263 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v263
	SCZO = cond(v263)
	v264 = Mem0[ss:bp + 73<i16>:byte] + al
	Mem0[ss:bp + 73<i16>:byte] = v264
	SCZO = cond(v264)
	sp = sp - 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 1<16>
	SZO = cond(sp)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bp = bp + 1<16>
	SZO = cond(bp)
	v265 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v265
	SCZO = cond(v265)
	v266 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v266
	SCZO = cond(v266)
	v267 = Mem0[ds:bx + si:byte] + ch
	Mem0[ds:bx + si:byte] = v267
	SCZO = cond(v267)
	v268 = Mem0[ds:bx + 76<i16> + di:word16] | ax
	Mem0[ds:bx + 76<i16> + di:word16] = v268
	SZ = cond(Mem0[ds:bx + 76<i16> + di:word16])
	O = false
	C = false
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v269 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v269
	SCZO = cond(v269)
	v270 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v270
	SCZO = cond(v270)
	v271 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v271
	SCZO = cond(v271)
	v272 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v272
	SCZO = cond(v272)
	v273 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v273
	SCZO = cond(v273)
	v274 = Mem0[ss:bp + 84<i16> + di:byte] + dl
	Mem0[ss:bp + 84<i16> + di:byte] = v274
	SCZO = cond(v274)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v275 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v275
	SCZO = cond(v275)
	v276 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v276
	SCZO = cond(v276)
	v277 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v277
	SCZO = cond(v277)
	v278 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v278
	SCZO = cond(v278)
	v279 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v279
	SCZO = cond(v279)
	v280 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v280
	SCZO = cond(v280)
	v281 = Mem0[ds:si + 69<i16>:byte] + cl
	Mem0[ds:si + 69<i16>:byte] = v281
	SCZO = cond(v281)
	v282 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v282
	SCZO = cond(v282)
	v283 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v283
	SCZO = cond(v283)
	v284 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v284
	SCZO = cond(v284)
	v285 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v285
	SCZO = cond(v285)
	v286 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v286
	SCZO = cond(v286)
	v287 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v287
	SCZO = cond(v287)
	v288 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v288
	SCZO = cond(v288)
	sp = sp - 1<16>
	SZO = cond(sp)
	si = si - 1<16>
	SZO = cond(si)
	v289 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v289
	SCZO = cond(v289)
	v290 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v290
	SCZO = cond(v290)
	v291 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v291
	SCZO = cond(v291)
	v292 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v292
	SCZO = cond(v292)
	v293 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v293
	SCZO = cond(v293)
	v294 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v294
	SCZO = cond(v294)
	v295 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v295
	SCZO = cond(v295)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	v296 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v296
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	cx = cx - 1<16>
	SZO = cond(cx)
	bp = bp - 1<16>
	SZO = cond(bp)
	v297 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v297
	SCZO = cond(v297)
	v298 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v298
	SCZO = cond(v298)
	v299 = Mem0[ds:si:byte] + cl
	Mem0[ds:si:byte] = v299
	SCZO = cond(v299)
	v300 = Mem0[ds:bx + 70<i16> + si:byte] + ah
	Mem0[ds:bx + 70<i16> + si:byte] = v300
	SCZO = cond(v300)
	bp = bp - 1<16>
	SZO = cond(bp)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp + 1<16>
	SZO = cond(sp)
	v301 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v301
	SCZO = cond(v301)
	v302 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v302
	SCZO = cond(v302)
	v303 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v303
	SCZO = cond(v303)
	v304 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v304
	SCZO = cond(v304)
	v305 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v305
	SCZO = cond(v305)
	v306 = Mem0[ss:bp + 72<i16>:byte] + ch
	Mem0[ss:bp + 72<i16>:byte] = v306
	SCZO = cond(v306)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	di = di - 1<16>
	SZO = cond(di)
	v307 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v307
	SCZO = cond(v307)
	v308 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v308
	SCZO = cond(v308)
	v309 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v309
	SCZO = cond(v309)
	v310 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v310
	SCZO = cond(v310)
	v311 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v311
	SCZO = cond(v311)
	C = __aaa(al, ah, &al, &ah)
	v312 = Mem0[ds:bx + 86<i16> + si:word16] | dx
	Mem0[ds:bx + 86<i16> + si:word16] = v312
	SZ = cond(Mem0[ds:bx + 86<i16> + si:word16])
	O = false
	C = false
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	v313 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v313
	SCZO = cond(v313)
	v314 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v314
	SCZO = cond(v314)
	v315 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v315
	SCZO = cond(v315)
	v316 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v316
	SCZO = cond(v316)
	v317 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v317
	SCZO = cond(v317)
	v318 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v318
	SCZO = cond(v318)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	si = si + 1<16>
	SZO = cond(si)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp - 1<16>
	SZO = cond(bp)
	v319 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v319
	SCZO = cond(v319)
	v320 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v320
	SCZO = cond(v320)
	v321 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v321
	SCZO = cond(v321)
	v322 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v322
	SCZO = cond(v322)
	v323 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v323
	SCZO = cond(v323)
	v324 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v324
	SCZO = cond(v324)
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v325 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v325
	SCZO = cond(v325)
	v326 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v326
	SCZO = cond(v326)
	v327 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v327
	SCZO = cond(v327)
	v328 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v328
	SCZO = cond(v328)
	v329 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v329
	SCZO = cond(v329)
	cx = cx + 1<16>
	SZO = cond(cx)
	v330 = Mem0[ds:bx + 69<i16>:word16] | ax
	Mem0[ds:bx + 69<i16>:word16] = v330
	SZ = cond(Mem0[ds:bx + 69<i16>:word16])
	O = false
	C = false
	v331 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v331
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v332 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v332
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v333 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v333
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v334 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v334
	SCZO = cond(v334)
	v335 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v335
	SCZO = cond(v335)
	si = si - 1<16>
	SZO = cond(si)
	v336 = Mem0[ds:si + 84<i16>:word16] | ax
	Mem0[ds:si + 84<i16>:word16] = v336
	SZ = cond(Mem0[ds:si + 84<i16>:word16])
	O = false
	C = false
	v337 = Mem0[ds:bx + si:word16] ^ ax
	Mem0[ds:bx + si:word16] = v337
	SZ = cond(Mem0[ds:bx + si:word16])
	O = false
	C = false
	v338 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v338
	SCZO = cond(v338)
	v339 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v339
	SCZO = cond(v339)
	v340 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v340
	SCZO = cond(v340)
	v341 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v341
	SCZO = cond(v341)
	v342 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v342
	SCZO = cond(v342)
	v343 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v343
	SCZO = cond(v343)
	sp = sp + 1<16>
	SZO = cond(sp)
	v344 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v344
	al = al ^ Mem0[ds:bx + si:byte]
	SZ = cond(al)
	O = false
	C = false
	v345 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v345
	SCZO = cond(v345)
	v346 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v346
	SCZO = cond(v346)
	v347 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v347
	SCZO = cond(v347)
	v348 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v348
	SCZO = cond(v348)
	v349 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v349
	SCZO = cond(v349)
	goto l3CEE_E01C_thunk_fn3CEE_E01E
	// succ:  l3CEE_E01C_thunk_fn3CEE_E01E
l3CEE_E01C_thunk_fn3CEE_E01E:
	call fn3CEE_E01E (retsize: 0;)
	return
	// succ:  fn3CEE_DE87_exit
l3CEE_E01C_thunk_fn3CEE_E01E:
	call fn3CEE_E01E (retsize: 0;)
	return
	// succ:  fn3CEE_DE87_exit
fn3CEE_DE87_exit:


// fn3CEE_E01E
// Return size: 2
define fn3CEE_E01E
fn3CEE_E01E_entry:
	sp = fp
	Top = 0<i8>
	// succ:  l3CEE_E01E
l3CEE_E01E:
	v8 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v8
	SCZO = cond(v8)
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v12 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v12
	v13 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v13
	SCZO = cond(v13)
	v14 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v14
	SCZO = cond(v14)
	v15 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v15
	SCZO = cond(v15)
	v16 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v16
	SCZO = cond(v16)
	v17 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v17
	SCZO = cond(v17)
	v18 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v18
	SCZO = cond(v18)
	v19 = Mem0[ds:bx + 69<i16>:byte] + al
	Mem0[ds:bx + 69<i16>:byte] = v19
	SCZO = cond(v19)
	v20 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v20
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v22 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v22
	bp = bp + 1<16>
	SZO = cond(bp)
	v24 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v24
	SCZO = cond(v24)
	v25 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v25
	SCZO = cond(v25)
	v26 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v26
	SCZO = cond(v26)
	v29 = Mem0[ds:bx + 9<i16> + di:byte] + ch
	Mem0[ds:bx + 9<i16> + di:byte] = v29
	SCZO = cond(v29)
	sp = sp + 1<16>
	SZO = cond(sp)
	v30 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v30
	si = si - 1<16>
	SZO = cond(si)
	v31 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v31
	SCZO = cond(v31)
	v32 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v32
	SCZO = cond(v32)
	v33 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v33
	SCZO = cond(v33)
	v34 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v34
	SCZO = cond(v34)
	v35 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v35
	SCZO = cond(v35)
	v36 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v36
	SCZO = cond(v36)
	v37 = Mem0[ds:bx + 68<i16>:byte] + al
	Mem0[ds:bx + 68<i16>:byte] = v37
	SCZO = cond(v37)
	cx = cx + 1<16>
	SZO = cond(cx)
	v38 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v38
	bp = bp + 1<16>
	SZO = cond(bp)
	v39 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v39
	SCZO = cond(v39)
	v40 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v40
	SCZO = cond(v40)
	v41 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v41
	SCZO = cond(v41)
	v42 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v42
	SCZO = cond(v42)
	v43 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v43
	SCZO = cond(v43)
	v44 = Mem0[ds:bx + 69<i16>:byte] + al
	Mem0[ds:bx + 69<i16>:byte] = v44
	SCZO = cond(v44)
	v45 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v45
	sp = sp + 1<16>
	SZO = cond(sp)
	v46 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v46
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp + 1<16>
	SZO = cond(sp)
	v47 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v47
	SCZO = cond(v47)
	v48 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v48
	SCZO = cond(v48)
	v49 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v49
	SCZO = cond(v49)
	v50 = Mem0[ds:bx + 9<i16>:byte] + ch
	Mem0[ds:bx + 9<i16>:byte] = v50
	SCZO = cond(v50)
	sp = sp + 1<16>
	SZO = cond(sp)
	v51 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v51
	v52 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v52
	SCZO = cond(v52)
	v53 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v53
	SCZO = cond(v53)
	v54 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v54
	SCZO = cond(v54)
	v55 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v55
	SCZO = cond(v55)
	v56 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v56
	SCZO = cond(v56)
	v57 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v57
	SCZO = cond(v57)
	v58 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v58
	SCZO = cond(v58)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	cl = cl ^ Mem0[ss:bp + di:byte]
	SZ = cond(cl)
	O = false
	C = false
	v63 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v63
	SCZO = cond(v63)
	v64 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v64
	SCZO = cond(v64)
	v65 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v65
	SCZO = cond(v65)
	v66 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v66
	SCZO = cond(v66)
	v67 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v67
	SCZO = cond(v67)
	branch Test(UGE,C) l3CEE_E099
	// succ:  l3CEE_E090 l3CEE_E099
l3CEE_E090:
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v69 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v69
	bp = bp + 1<16>
	SZO = cond(bp)
	v70 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v70
	SCZO = cond(v70)
	goto l3CEE_E09A
	// succ:  l3CEE_E09A
l3CEE_E099:
	v71 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v71
	SCZO = cond(v71)
	goto l3CEE_E09B
	// succ:  l3CEE_E09B
l3CEE_E09A:
	v72 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v72
	SCZO = cond(v72)
	goto l3CEE_E09C
	// succ:  l3CEE_E09C
l3CEE_E09B:
	v73 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v73
	SCZO = cond(v73)
	goto l3CEE_E09D
	// succ:  l3CEE_E09D
l3CEE_E09C:
	v74 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v74
	SCZO = cond(v74)
	goto l3CEE_E09E
	// succ:  l3CEE_E09E
l3CEE_E09D:
	v75 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v75
	SCZO = cond(v75)
	goto l3CEE_E09F
	// succ:  l3CEE_E09F
l3CEE_E09E:
	v76 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v76
	SCZO = cond(v76)
	goto l3CEE_E0A0
	// succ:  l3CEE_E0A0
l3CEE_E09F:
	v77 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v77
	SCZO = cond(v77)
	goto l3CEE_E0A2
	// succ:  l3CEE_E0A2
l3CEE_E0A0:
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	// succ:  l3CEE_E0A2
l3CEE_E0A2:
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v78 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v78
	SCZO = cond(v78)
	v79 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v79
	SCZO = cond(v79)
	v80 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v80
	SCZO = cond(v80)
	v81 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v81
	SCZO = cond(v81)
	v82 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v82
	SCZO = cond(v82)
	v83 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v83
	SCZO = cond(v83)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp + 1<16>
	SZO = cond(sp)
	v84 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v84
	SCZO = cond(v84)
	v85 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v85
	SCZO = cond(v85)
	v86 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v86
	SCZO = cond(v86)
	v87 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v87
	SCZO = cond(v87)
	v88 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v88
	SCZO = cond(v88)
	v89 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v89
	SCZO = cond(v89)
	di = di - 1<16>
	SZO = cond(di)
	bx = bx - 1<16>
	SZO = cond(bx)
	v90 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v90
	SCZO = cond(v90)
	v91 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v91
	SCZO = cond(v91)
	v92 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v92
	SCZO = cond(v92)
	v93 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v93
	SCZO = cond(v93)
	v94 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v94
	SCZO = cond(v94)
	v95 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v95
	SCZO = cond(v95)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v96 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v96
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v97 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v97
	SCZO = cond(v97)
	v98 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v98
	SCZO = cond(v98)
	v99 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v99
	SCZO = cond(v99)
	v100 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v100
	SCZO = cond(v100)
	v102 = Mem0[ss:bp + 89<i16> + di:byte] + dl
	Mem0[ss:bp + 89<i16> + di:byte] = v102
	SCZO = cond(v102)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v103 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v103
	SCZO = cond(v103)
	v104 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v104
	SCZO = cond(v104)
	v105 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v105
	SCZO = cond(v105)
	v106 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v106
	SCZO = cond(v106)
	v107 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v107
	SCZO = cond(v107)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v108 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v108
	SCZO = cond(v108)
	v109 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v109
	SCZO = cond(v109)
	v110 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v110
	SCZO = cond(v110)
	v111 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v111
	SCZO = cond(v111)
	// succ:  l3CEE_E0FC_thunk_fn3CEE_E0FD
l3CEE_E0FC_thunk_fn3CEE_E0FD:
	call fn3CEE_E0FD (retsize: 0;)
	return
	// succ:  fn3CEE_E01E_exit
fn3CEE_E01E_exit:


// fn3CEE_E0FD
// Return size: 0
define fn3CEE_E0FD
fn3CEE_E0FD_entry:
	sp = fp
	Top = 0<i8>
	// succ:  l3CEE_E0FD
l3CEE_E0FD:
	v8 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v8
	SCZO = cond(v8)
	v12 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v12
	SCZO = cond(v12)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si + 1<16>
	SZO = cond(si)
	si = si + 1<16>
	SZO = cond(si)
	v15 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v15
	SCZO = cond(v15)
	v16 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v16
	SCZO = cond(v16)
	v17 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v17
	SCZO = cond(v17)
	v18 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v18
	SCZO = cond(v18)
	v19 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v19
	SCZO = cond(v19)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v20 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v20
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	dx = dx + 1<16>
	SZO = cond(dx)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 1<16>
	SZO = cond(sp)
	v24 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v24
	SCZO = cond(v24)
	v25 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v25
	SCZO = cond(v25)
	v27 = Mem0[ds:bx + 0x4909<16> + di:byte] + dl
	Mem0[ds:bx + 0x4909<16> + di:byte] = v27
	SCZO = cond(v27)
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v28 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v28
	SCZO = cond(v28)
	v29 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v29
	SCZO = cond(v29)
	v30 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v30
	SCZO = cond(v30)
	v31 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v31
	SCZO = cond(v31)
	v32 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v32
	SCZO = cond(v32)
	dx_ax = CONVERT(ax, int16, int32)
	v35 = Mem0[ss:bp + 79<i16> + si:word16] | dx
	Mem0[ss:bp + 79<i16> + si:word16] = v35
	SZ = cond(Mem0[ss:bp + 79<i16> + si:word16])
	O = false
	C = false
	dx = dx + 1<16>
	SZO = cond(dx)
	bp = bp + 1<16>
	SZO = cond(bp)
	v39 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v39
	SCZO = cond(v39)
	v40 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v40
	SCZO = cond(v40)
	v41 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v41
	SCZO = cond(v41)
	v42 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v42
	SCZO = cond(v42)
	v43 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v43
	SCZO = cond(v43)
	v44 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v44
	SCZO = cond(v44)
	si = si - 1<16>
	SZO = cond(si)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	v45 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v45
	SCZO = cond(v45)
	v46 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v46
	SCZO = cond(v46)
	v47 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v47
	SCZO = cond(v47)
	v48 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v48
	SCZO = cond(v48)
	v49 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v49
	SCZO = cond(v49)
	v50 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v50
	SCZO = cond(v50)
	v51 = Mem0[ds:bx + 69<i16> + si:byte] + dl
	Mem0[ds:bx + 69<i16> + si:byte] = v51
	SCZO = cond(v51)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	ax = ax - 1<16>
	SZO = cond(ax)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	bp = bp + 1<16>
	SZO = cond(bp)
	v52 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v52
	SCZO = cond(v52)
	v53 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v53
	SCZO = cond(v53)
	v55 = Mem0[ds:bx + 0x5309<16>:byte] + bl
	Mem0[ds:bx + 0x5309<16>:byte] = v55
	SCZO = cond(v55)
	ax = ax - 1<16>
	SZO = cond(ax)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v56 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v56
	SCZO = cond(v56)
	v57 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v57
	SCZO = cond(v57)
	v58 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v58
	SCZO = cond(v58)
	v59 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v59
	SCZO = cond(v59)
	v60 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v60
	SCZO = cond(v60)
	v61 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v61
	SCZO = cond(v61)
	di = di - 1<16>
	SZO = cond(di)
	bx = bx - 1<16>
	SZO = cond(bx)
	v62 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v62
	SCZO = cond(v62)
	v63 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v63
	SCZO = cond(v63)
	v64 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v64
	SCZO = cond(v64)
	v65 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v65
	SCZO = cond(v65)
	v66 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v66
	SCZO = cond(v66)
	v67 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v67
	SCZO = cond(v67)
	v68 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v68
	SCZO = cond(v68)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si - 1<16>
	SZO = cond(si)
	v69 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v69
	SCZO = cond(v69)
	v70 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v70
	SCZO = cond(v70)
	v71 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v71
	SCZO = cond(v71)
	v72 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v72
	SCZO = cond(v72)
	v73 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v73
	SCZO = cond(v73)
	di = di + 1<16>
	SZO = cond(di)
	bp = bp + 1<16>
	SZO = cond(bp)
	v74 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v74
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	cx = cx + 1<16>
	SZO = cond(cx)
	v75 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v75
	SCZO = cond(v75)
	v76 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v76
	SCZO = cond(v76)
	v77 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v77
	SCZO = cond(v77)
	v79 = Mem0[ds:bx + 0x5809<16> + si:byte] + dh
	Mem0[ds:bx + 0x5809<16> + si:byte] = v79
	SCZO = cond(v79)
	v80 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v80
	SCZO = cond(v80)
	v81 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v81
	SCZO = cond(v81)
	v82 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v82
	SCZO = cond(v82)
	v83 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v83
	SCZO = cond(v83)
	v84 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v84
	SCZO = cond(v84)
	v85 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v85
	SCZO = cond(v85)
	v86 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v86
	SCZO = cond(v86)
	v87 = Mem0[ds:bx + di:byte] + bl
	Mem0[ds:bx + di:byte] = v87
	SCZO = cond(v87)
	v88 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v88
	SCZO = cond(v88)
	v89 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v89
	SCZO = cond(v89)
	v90 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v90
	SCZO = cond(v90)
	v91 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v91
	SCZO = cond(v91)
	v92 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v92
	SCZO = cond(v92)
	v93 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v93
	SCZO = cond(v93)
	v94 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v94
	SCZO = cond(v94)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v95 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v95
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v96 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v96
	SCZO = cond(v96)
	v97 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v97
	SCZO = cond(v97)
	v98 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v98
	SCZO = cond(v98)
	v99 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v99
	SCZO = cond(v99)
	v100 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v100
	SCZO = cond(v100)
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v101 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v101
	SCZO = cond(v101)
	v102 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v102
	SCZO = cond(v102)
	v103 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v103
	SCZO = cond(v103)
	v104 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v104
	SCZO = cond(v104)
	v105 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v105
	SCZO = cond(v105)
	v106 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v106
	SCZO = cond(v106)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx - 1<16>
	SZO = cond(bx)
	v107 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v107
	SCZO = cond(v107)
	v108 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v108
	SCZO = cond(v108)
	v109 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v109
	SCZO = cond(v109)
	v110 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v110
	SCZO = cond(v110)
	v111 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v111
	SCZO = cond(v111)
	v112 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v112
	SCZO = cond(v112)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v113 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v113
	SCZO = cond(v113)
	v114 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v114
	SCZO = cond(v114)
	v115 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v115
	SCZO = cond(v115)
	v116 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v116
	SCZO = cond(v116)
	v117 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v117
	SCZO = cond(v117)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx - 1<16>
	SZO = cond(bx)
	v118 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v118
	SCZO = cond(v118)
	v119 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v119
	SCZO = cond(v119)
	v120 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v120
	SCZO = cond(v120)
	v121 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v121
	SCZO = cond(v121)
	v122 = Mem0[ds:bx + 69<i16>:byte] + al
	Mem0[ds:bx + 69<i16>:byte] = v122
	SCZO = cond(v122)
	v123 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v123
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bx = bx + 1<16>
	SZO = cond(bx)
	v124 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v124
	SCZO = cond(v124)
	v125 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v125
	SCZO = cond(v125)
	v126 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v126
	SCZO = cond(v126)
	v128 = Mem0[ss:bp + 0x5509<16>:byte] + bh
	Mem0[ss:bp + 0x5509<16>:byte] = v128
	SCZO = cond(v128)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v129 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v129
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	bp = bp + 1<16>
	SZO = cond(bp)
	v130 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v130
	SCZO = cond(v130)
	v131 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v131
	SCZO = cond(v131)
	v132 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v132
	SCZO = cond(v132)
	v133 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v133
	SCZO = cond(v133)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v134 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v134
	cx = cx + 1<16>
	SZO = cond(cx)
	v135 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v135
	SCZO = cond(v135)
	v136 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v136
	SCZO = cond(v136)
	v137 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v137
	SCZO = cond(v137)
	v138 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v138
	SCZO = cond(v138)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si - 1<16>
	SZO = cond(si)
	v139 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v139
	SCZO = cond(v139)
	v140 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v140
	SCZO = cond(v140)
	v141 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v141
	SCZO = cond(v141)
	v142 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v142
	SCZO = cond(v142)
	v143 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v143
	SCZO = cond(v143)
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bx = bx + 1<16>
	SZO = cond(bx)
	v144 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v144
	SCZO = cond(v144)
	v145 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v145
	SCZO = cond(v145)
	v146 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v146
	SCZO = cond(v146)
	v147 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v147
	SCZO = cond(v147)
	v148 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v148
	SCZO = cond(v148)
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bx = bx + 1<16>
	SZO = cond(bx)
	v149 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v149
	SCZO = cond(v149)
	v150 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v150
	SCZO = cond(v150)
	v151 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v151
	SCZO = cond(v151)
	v152 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v152
	SCZO = cond(v152)
	v153 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v153
	SCZO = cond(v153)
	v154 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v154
	SCZO = cond(v154)
	cx = cx + 1<16>
	SZO = cond(cx)
	bx = bx - 1<16>
	SZO = cond(bx)
	cx = cx + 1<16>
	SZO = cond(cx)
	v155 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v155
	SCZO = cond(v155)
	v156 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v156
	SCZO = cond(v156)
	v157 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v157
	SCZO = cond(v157)
	v158 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v158
	SCZO = cond(v158)
	v159 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v159
	SCZO = cond(v159)
	v160 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v160
	SCZO = cond(v160)
	v161 = Mem0[ss:bp + 67<i16> + di:byte] + dl
	Mem0[ss:bp + 67<i16> + di:byte] = v161
	SCZO = cond(v161)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 1<16>
	SZO = cond(sp)
	di = di - 1<16>
	SZO = cond(di)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v162 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v162
	SCZO = cond(v162)
	v163 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v163
	SCZO = cond(v163)
	v164 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v164
	SCZO = cond(v164)
	v165 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v165
	SCZO = cond(v165)
	v166 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v166
	SCZO = cond(v166)
	si = si + 1<16>
	SZO = cond(si)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	si = si - 1<16>
	SZO = cond(si)
	bx = bx + 1<16>
	SZO = cond(bx)
	v167 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v167
	SCZO = cond(v167)
	v168 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v168
	SCZO = cond(v168)
	v169 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v169
	SCZO = cond(v169)
	v170 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v170
	SCZO = cond(v170)
	v171 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v171
	SCZO = cond(v171)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	si = si + 1<16>
	SZO = cond(si)
	cx = cx - 1<16>
	SZO = cond(cx)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp + 1<16>
	SZO = cond(sp)
	v172 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v172
	SCZO = cond(v172)
	v173 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v173
	SCZO = cond(v173)
	v174 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v174
	SCZO = cond(v174)
	v175 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v175
	SCZO = cond(v175)
	v176 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v176
	SCZO = cond(v176)
	v177 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v177
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	bp = bp + 1<16>
	SZO = cond(bp)
	v178 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v178
	SCZO = cond(v178)
	v179 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v179
	SCZO = cond(v179)
	v180 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v180
	SCZO = cond(v180)
	v181 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v181
	SCZO = cond(v181)
	v182 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v182
	SCZO = cond(v182)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v183 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v183
	cx = cx + 1<16>
	SZO = cond(cx)
	v184 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v184
	v185 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v185
	SCZO = cond(v185)
	v186 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v186
	SCZO = cond(v186)
	v187 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v187
	SCZO = cond(v187)
	v188 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v188
	SCZO = cond(v188)
	v189 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v189
	SCZO = cond(v189)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	cx = cx + 1<16>
	SZO = cond(cx)
	bx = bx + 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	v190 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v190
	SCZO = cond(v190)
	v191 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v191
	SCZO = cond(v191)
	v192 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v192
	SCZO = cond(v192)
	v193 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v193
	SCZO = cond(v193)
	v194 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v194
	SCZO = cond(v194)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v195 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v195
	SCZO = cond(v195)
	v196 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v196
	SCZO = cond(v196)
	v197 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v197
	SCZO = cond(v197)
	v198 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v198
	SCZO = cond(v198)
	v199 = Mem0[ss:bp + 82<i16> + si:byte] + al
	Mem0[ss:bp + 82<i16> + si:byte] = v199
	SCZO = cond(v199)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = di
	v200 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v200
	SCZO = cond(v200)
	v201 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v201
	SCZO = cond(v201)
	v202 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v202
	SCZO = cond(v202)
	v203 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v203
	SCZO = cond(v203)
	v204 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v204
	SCZO = cond(v204)
	cl = Mem0[ss:bp + si:byte]
	sp = sp - 1<16>
	SZO = cond(sp)
	di = di - 1<16>
	SZO = cond(di)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v205 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v205
	cx = cx + 1<16>
	SZO = cond(cx)
	v206 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v206
	SCZO = cond(v206)
	v207 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v207
	SCZO = cond(v207)
	v208 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v208
	SCZO = cond(v208)
	ax = __in<word16>(9<8>)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v209 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v209
	SCZO = cond(v209)
	v210 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v210
	SCZO = cond(v210)
	v211 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v211
	SCZO = cond(v211)
	v212 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v212
	SCZO = cond(v212)
	v213 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v213
	SCZO = cond(v213)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx - 1<16>
	SZO = cond(bx)
	v214 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v214
	SCZO = cond(v214)
	v215 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v215
	SCZO = cond(v215)
	v216 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v216
	SCZO = cond(v216)
	v217 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v217
	SCZO = cond(v217)
	v218 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v218
	SCZO = cond(v218)
	v219 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v219
	SCZO = cond(v219)
	v220 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v220
	SCZO = cond(v220)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v221 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v221
	cx = cx + 1<16>
	SZO = cond(cx)
	v222 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v222
	SCZO = cond(v222)
	v223 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v223
	SCZO = cond(v223)
	v224 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v224
	SCZO = cond(v224)
	v225 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v225
	SCZO = cond(v225)
	v226 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v226
	SCZO = cond(v226)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v227 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v227
	SCZO = cond(v227)
	v228 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v228
	SCZO = cond(v228)
	v229 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v229
	SCZO = cond(v229)
	v230 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v230
	SCZO = cond(v230)
	v231 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v231
	SCZO = cond(v231)
	v232 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v232
	SCZO = cond(v232)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v233 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v233
	v234 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v234
	SCZO = cond(v234)
	v235 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v235
	SCZO = cond(v235)
	v236 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v236
	SCZO = cond(v236)
	v237 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v237
	SCZO = cond(v237)
	v238 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v238
	SCZO = cond(v238)
	v239 = Mem0[ds:si + 65<i16>:byte] + al
	Mem0[ds:si + 65<i16>:byte] = v239
	SCZO = cond(v239)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v240 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v240
	SCZO = cond(v240)
	v241 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v241
	SCZO = cond(v241)
	v242 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v242
	SCZO = cond(v242)
	v243 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v243
	SCZO = cond(v243)
	v244 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v244
	SCZO = cond(v244)
	v245 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v245
	SCZO = cond(v245)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v246 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v246
	SCZO = cond(v246)
	v247 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v247
	SCZO = cond(v247)
	v248 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v248
	SCZO = cond(v248)
	v249 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v249
	SCZO = cond(v249)
	v250 = Mem0[ss:bp + 68<i16> + si:byte] + dl
	Mem0[ss:bp + 68<i16> + si:byte] = v250
	SCZO = cond(v250)
	dx = dx + 1<16>
	SZO = cond(dx)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	v251 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v251
	SCZO = cond(v251)
	v252 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v252
	SCZO = cond(v252)
	v253 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v253
	SCZO = cond(v253)
	v254 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v254
	SCZO = cond(v254)
	v255 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v255
	SCZO = cond(v255)
	v256 = Mem0[ds:si + 79<i16>:byte] + cl
	Mem0[ds:si + 79<i16>:byte] = v256
	SCZO = cond(v256)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v257 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v257
	cx = cx + 1<16>
	SZO = cond(cx)
	v258 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v258
	v259 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v259
	SCZO = cond(v259)
	v260 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v260
	SCZO = cond(v260)
	v261 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v261
	SCZO = cond(v261)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = es
	al = al | Mem0[ss:(bp + 79<i16>) + di:byte]
	SZ = cond(al)
	O = false
	C = false
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	bx = bx - 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v263 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v263
	SCZO = cond(v263)
	v264 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v264
	SCZO = cond(v264)
	v265 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v265
	SCZO = cond(v265)
	v266 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v266
	SCZO = cond(v266)
	v267 = Mem0[ss:bp + 65<i16> + si:byte] + dl
	Mem0[ss:bp + 65<i16> + si:byte] = v267
	SCZO = cond(v267)
	v268 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v268
	bp = bp + 1<16>
	SZO = cond(bp)
	v269 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v269
	SCZO = cond(v269)
	v270 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v270
	SCZO = cond(v270)
	v271 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v271
	SCZO = cond(v271)
	v272 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v272
	SCZO = cond(v272)
	v273 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v273
	SCZO = cond(v273)
	v274 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v274
	SCZO = cond(v274)
	sp = sp - 1<16>
	SZO = cond(sp)
	di = di - 1<16>
	SZO = cond(di)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	si = si - 1<16>
	SZO = cond(si)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	cx = cx - 1<16>
	SZO = cond(cx)
	di = di + 1<16>
	SZO = cond(di)
	cx = cx + 1<16>
	SZO = cond(cx)
	v275 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v275
	SCZO = cond(v275)
	v276 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v276
	SCZO = cond(v276)
	al = al + 0xA<8> + C
	SCZO = cond(al)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	cx = cx - 1<16>
	SZO = cond(cx)
	v277 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v277
	di = di - 1<16>
	SZO = cond(di)
	v278 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v278
	SCZO = cond(v278)
	v279 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v279
	SCZO = cond(v279)
	v280 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v280
	SCZO = cond(v280)
	v281 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v281
	SCZO = cond(v281)
	v282 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v282
	SCZO = cond(v282)
	v283 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v283
	SCZO = cond(v283)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	v284 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v284
	SCZO = cond(v284)
	v285 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v285
	SCZO = cond(v285)
	v286 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v286
	SCZO = cond(v286)
	v287 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v287
	SCZO = cond(v287)
	v288 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v288
	SCZO = cond(v288)
	v289 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v289
	SCZO = cond(v289)
	v290 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v290
	SCZO = cond(v290)
	sp = sp - 1<16>
	SZO = cond(sp)
	bx = bx - 1<16>
	SZO = cond(bx)
	v291 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v291
	SCZO = cond(v291)
	v292 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v292
	SCZO = cond(v292)
	v293 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v293
	SCZO = cond(v293)
	v294 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v294
	SCZO = cond(v294)
	v295 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v295
	SCZO = cond(v295)
	v296 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v296
	SCZO = cond(v296)
	v297 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v297
	SCZO = cond(v297)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	dx = dx + 1<16>
	SZO = cond(dx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v298 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v298
	SCZO = cond(v298)
	v299 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v299
	SCZO = cond(v299)
	v300 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v300
	SCZO = cond(v300)
	v301 = Mem0[ds:si:byte] + dh
	Mem0[ds:si:byte] = v301
	SCZO = cond(v301)
	al = al | 0x4C<8>
	SZ = cond(al)
	O = false
	C = false
	di = di - 1<16>
	SZO = cond(di)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v302 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v302
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v303 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v303
	SCZO = cond(v303)
	v304 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v304
	SCZO = cond(v304)
	v306 = Mem0[ds:0x520B<16>:byte] + ah
	Mem0[ds:0x520B<16>:byte] = v306
	SCZO = cond(v306)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bp = bp + 1<16>
	SZO = cond(bp)
	v307 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v307
	SCZO = cond(v307)
	v308 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v308
	SCZO = cond(v308)
	FPUF = cond(ST[Top:real64] - CONVERT(Mem0[ds:bx + di:word32], int32, real64))
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	goto l3CEE_E431_thunk_fn3CEE_E432
	// succ:  l3CEE_E431_thunk_fn3CEE_E432
l3CEE_E0FD:
	v366 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v366
	SCZO = cond(v366)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si + 1<16>
	SZO = cond(si)
	si = si + 1<16>
	SZO = cond(si)
	v367 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v367
	SCZO = cond(v367)
	v368 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v368
	SCZO = cond(v368)
	v369 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v369
	SCZO = cond(v369)
	v370 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v370
	SCZO = cond(v370)
	v371 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v371
	SCZO = cond(v371)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v372 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v372
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	dx = dx + 1<16>
	SZO = cond(dx)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 1<16>
	SZO = cond(sp)
	v373 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v373
	SCZO = cond(v373)
	v374 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v374
	SCZO = cond(v374)
	v375 = Mem0[ds:bx + 0x4909<16> + di:byte] + dl
	Mem0[ds:bx + 0x4909<16> + di:byte] = v375
	SCZO = cond(v375)
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v376 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v376
	SCZO = cond(v376)
	v377 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v377
	SCZO = cond(v377)
	v378 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v378
	SCZO = cond(v378)
	v379 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v379
	SCZO = cond(v379)
	v380 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v380
	SCZO = cond(v380)
	dx_ax = CONVERT(ax, int16, int32)
	v381 = Mem0[ss:bp + 79<i16> + si:word16] | dx
	Mem0[ss:bp + 79<i16> + si:word16] = v381
	SZ = cond(Mem0[ss:bp + 79<i16> + si:word16])
	O = false
	C = false
	dx = dx + 1<16>
	SZO = cond(dx)
	bp = bp + 1<16>
	SZO = cond(bp)
	v382 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v382
	SCZO = cond(v382)
	v383 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v383
	SCZO = cond(v383)
	v384 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v384
	SCZO = cond(v384)
	v385 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v385
	SCZO = cond(v385)
	v386 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v386
	SCZO = cond(v386)
	v387 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v387
	SCZO = cond(v387)
	si = si - 1<16>
	SZO = cond(si)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	v388 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v388
	SCZO = cond(v388)
	v389 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v389
	SCZO = cond(v389)
	v390 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v390
	SCZO = cond(v390)
	v391 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v391
	SCZO = cond(v391)
	v392 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v392
	SCZO = cond(v392)
	v393 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v393
	SCZO = cond(v393)
	v394 = Mem0[ds:bx + 69<i16> + si:byte] + dl
	Mem0[ds:bx + 69<i16> + si:byte] = v394
	SCZO = cond(v394)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	ax = ax - 1<16>
	SZO = cond(ax)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	bp = bp + 1<16>
	SZO = cond(bp)
	v395 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v395
	SCZO = cond(v395)
	v396 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v396
	SCZO = cond(v396)
	v397 = Mem0[ds:bx + 0x5309<16>:byte] + bl
	Mem0[ds:bx + 0x5309<16>:byte] = v397
	SCZO = cond(v397)
	ax = ax - 1<16>
	SZO = cond(ax)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v398 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v398
	SCZO = cond(v398)
	v399 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v399
	SCZO = cond(v399)
	v400 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v400
	SCZO = cond(v400)
	v401 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v401
	SCZO = cond(v401)
	v402 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v402
	SCZO = cond(v402)
	v403 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v403
	SCZO = cond(v403)
	di = di - 1<16>
	SZO = cond(di)
	bx = bx - 1<16>
	SZO = cond(bx)
	v404 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v404
	SCZO = cond(v404)
	v405 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v405
	SCZO = cond(v405)
	v406 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v406
	SCZO = cond(v406)
	v407 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v407
	SCZO = cond(v407)
	v408 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v408
	SCZO = cond(v408)
	v409 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v409
	SCZO = cond(v409)
	v410 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v410
	SCZO = cond(v410)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si - 1<16>
	SZO = cond(si)
	v411 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v411
	SCZO = cond(v411)
	v412 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v412
	SCZO = cond(v412)
	v413 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v413
	SCZO = cond(v413)
	v414 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v414
	SCZO = cond(v414)
	v415 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v415
	SCZO = cond(v415)
	di = di + 1<16>
	SZO = cond(di)
	bp = bp + 1<16>
	SZO = cond(bp)
	v416 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v416
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	cx = cx + 1<16>
	SZO = cond(cx)
	v417 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v417
	SCZO = cond(v417)
	v418 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v418
	SCZO = cond(v418)
	v419 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v419
	SCZO = cond(v419)
	v420 = Mem0[ds:bx + 0x5809<16> + si:byte] + dh
	Mem0[ds:bx + 0x5809<16> + si:byte] = v420
	SCZO = cond(v420)
	v421 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v421
	SCZO = cond(v421)
	v422 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v422
	SCZO = cond(v422)
	v423 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v423
	SCZO = cond(v423)
	v424 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v424
	SCZO = cond(v424)
	v425 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v425
	SCZO = cond(v425)
	v426 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v426
	SCZO = cond(v426)
	v427 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v427
	SCZO = cond(v427)
	v428 = Mem0[ds:bx + di:byte] + bl
	Mem0[ds:bx + di:byte] = v428
	SCZO = cond(v428)
	v429 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v429
	SCZO = cond(v429)
	v430 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v430
	SCZO = cond(v430)
	v431 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v431
	SCZO = cond(v431)
	v432 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v432
	SCZO = cond(v432)
	v433 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v433
	SCZO = cond(v433)
	v434 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v434
	SCZO = cond(v434)
	v435 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v435
	SCZO = cond(v435)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v436 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v436
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v437 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v437
	SCZO = cond(v437)
	v438 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v438
	SCZO = cond(v438)
	v439 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v439
	SCZO = cond(v439)
	v440 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v440
	SCZO = cond(v440)
	v441 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v441
	SCZO = cond(v441)
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v442 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v442
	SCZO = cond(v442)
	v443 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v443
	SCZO = cond(v443)
	v444 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v444
	SCZO = cond(v444)
	v445 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v445
	SCZO = cond(v445)
	v446 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v446
	SCZO = cond(v446)
	v447 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v447
	SCZO = cond(v447)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx - 1<16>
	SZO = cond(bx)
	v448 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v448
	SCZO = cond(v448)
	v449 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v449
	SCZO = cond(v449)
	v450 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v450
	SCZO = cond(v450)
	v451 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v451
	SCZO = cond(v451)
	v452 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v452
	SCZO = cond(v452)
	v453 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v453
	SCZO = cond(v453)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v454 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v454
	SCZO = cond(v454)
	v455 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v455
	SCZO = cond(v455)
	v456 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v456
	SCZO = cond(v456)
	v457 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v457
	SCZO = cond(v457)
	v458 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v458
	SCZO = cond(v458)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx - 1<16>
	SZO = cond(bx)
	v459 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v459
	SCZO = cond(v459)
	v460 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v460
	SCZO = cond(v460)
	v461 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v461
	SCZO = cond(v461)
	v462 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v462
	SCZO = cond(v462)
	v463 = Mem0[ds:bx + 69<i16>:byte] + al
	Mem0[ds:bx + 69<i16>:byte] = v463
	SCZO = cond(v463)
	v464 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v464
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bx = bx + 1<16>
	SZO = cond(bx)
	v465 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v465
	SCZO = cond(v465)
	v466 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v466
	SCZO = cond(v466)
	v467 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v467
	SCZO = cond(v467)
	v468 = Mem0[ss:bp + 0x5509<16>:byte] + bh
	Mem0[ss:bp + 0x5509<16>:byte] = v468
	SCZO = cond(v468)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v469 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v469
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	bp = bp + 1<16>
	SZO = cond(bp)
	v470 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v470
	SCZO = cond(v470)
	v471 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v471
	SCZO = cond(v471)
	v472 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v472
	SCZO = cond(v472)
	v473 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v473
	SCZO = cond(v473)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v474 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v474
	cx = cx + 1<16>
	SZO = cond(cx)
	v475 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v475
	SCZO = cond(v475)
	v476 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v476
	SCZO = cond(v476)
	v477 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v477
	SCZO = cond(v477)
	v478 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v478
	SCZO = cond(v478)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si - 1<16>
	SZO = cond(si)
	v479 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v479
	SCZO = cond(v479)
	v480 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v480
	SCZO = cond(v480)
	v481 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v481
	SCZO = cond(v481)
	v482 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v482
	SCZO = cond(v482)
	v483 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v483
	SCZO = cond(v483)
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bx = bx + 1<16>
	SZO = cond(bx)
	v484 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v484
	SCZO = cond(v484)
	v485 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v485
	SCZO = cond(v485)
	v486 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v486
	SCZO = cond(v486)
	v487 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v487
	SCZO = cond(v487)
	v488 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v488
	SCZO = cond(v488)
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bx = bx + 1<16>
	SZO = cond(bx)
	v489 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v489
	SCZO = cond(v489)
	v490 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v490
	SCZO = cond(v490)
	v491 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v491
	SCZO = cond(v491)
	v492 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v492
	SCZO = cond(v492)
	v493 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v493
	SCZO = cond(v493)
	v494 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v494
	SCZO = cond(v494)
	cx = cx + 1<16>
	SZO = cond(cx)
	bx = bx - 1<16>
	SZO = cond(bx)
	cx = cx + 1<16>
	SZO = cond(cx)
	v495 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v495
	SCZO = cond(v495)
	v496 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v496
	SCZO = cond(v496)
	v497 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v497
	SCZO = cond(v497)
	v498 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v498
	SCZO = cond(v498)
	v499 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v499
	SCZO = cond(v499)
	v500 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v500
	SCZO = cond(v500)
	v501 = Mem0[ss:bp + 67<i16> + di:byte] + dl
	Mem0[ss:bp + 67<i16> + di:byte] = v501
	SCZO = cond(v501)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 1<16>
	SZO = cond(sp)
	di = di - 1<16>
	SZO = cond(di)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v502 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v502
	SCZO = cond(v502)
	v503 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v503
	SCZO = cond(v503)
	v504 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v504
	SCZO = cond(v504)
	v505 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v505
	SCZO = cond(v505)
	v506 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v506
	SCZO = cond(v506)
	si = si + 1<16>
	SZO = cond(si)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	si = si - 1<16>
	SZO = cond(si)
	bx = bx + 1<16>
	SZO = cond(bx)
	v507 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v507
	SCZO = cond(v507)
	v508 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v508
	SCZO = cond(v508)
	v509 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v509
	SCZO = cond(v509)
	v510 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v510
	SCZO = cond(v510)
	v511 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v511
	SCZO = cond(v511)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	si = si + 1<16>
	SZO = cond(si)
	cx = cx - 1<16>
	SZO = cond(cx)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp + 1<16>
	SZO = cond(sp)
	v512 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v512
	SCZO = cond(v512)
	v513 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v513
	SCZO = cond(v513)
	v514 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v514
	SCZO = cond(v514)
	v515 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v515
	SCZO = cond(v515)
	v516 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v516
	SCZO = cond(v516)
	v517 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v517
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	bp = bp + 1<16>
	SZO = cond(bp)
	v518 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v518
	SCZO = cond(v518)
	v519 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v519
	SCZO = cond(v519)
	v520 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v520
	SCZO = cond(v520)
	v521 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v521
	SCZO = cond(v521)
	v522 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v522
	SCZO = cond(v522)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v523 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v523
	cx = cx + 1<16>
	SZO = cond(cx)
	v524 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v524
	v525 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v525
	SCZO = cond(v525)
	v526 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v526
	SCZO = cond(v526)
	v527 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v527
	SCZO = cond(v527)
	v528 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v528
	SCZO = cond(v528)
	v529 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v529
	SCZO = cond(v529)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	cx = cx + 1<16>
	SZO = cond(cx)
	bx = bx + 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	v530 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v530
	SCZO = cond(v530)
	v531 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v531
	SCZO = cond(v531)
	v532 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v532
	SCZO = cond(v532)
	v533 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v533
	SCZO = cond(v533)
	v534 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v534
	SCZO = cond(v534)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v535 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v535
	SCZO = cond(v535)
	v536 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v536
	SCZO = cond(v536)
	v537 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v537
	SCZO = cond(v537)
	v538 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v538
	SCZO = cond(v538)
	v539 = Mem0[ss:bp + 82<i16> + si:byte] + al
	Mem0[ss:bp + 82<i16> + si:byte] = v539
	SCZO = cond(v539)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = di
	v540 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v540
	SCZO = cond(v540)
	v541 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v541
	SCZO = cond(v541)
	v542 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v542
	SCZO = cond(v542)
	v543 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v543
	SCZO = cond(v543)
	v544 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v544
	SCZO = cond(v544)
	cl = Mem0[ss:bp + si:byte]
	sp = sp - 1<16>
	SZO = cond(sp)
	di = di - 1<16>
	SZO = cond(di)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v545 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v545
	cx = cx + 1<16>
	SZO = cond(cx)
	v546 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v546
	SCZO = cond(v546)
	v547 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v547
	SCZO = cond(v547)
	v548 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v548
	SCZO = cond(v548)
	ax = __in<word16>(9<8>)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v549 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v549
	SCZO = cond(v549)
	v550 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v550
	SCZO = cond(v550)
	v551 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v551
	SCZO = cond(v551)
	v552 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v552
	SCZO = cond(v552)
	v553 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v553
	SCZO = cond(v553)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx - 1<16>
	SZO = cond(bx)
	v554 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v554
	SCZO = cond(v554)
	v555 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v555
	SCZO = cond(v555)
	v556 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v556
	SCZO = cond(v556)
	v557 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v557
	SCZO = cond(v557)
	v558 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v558
	SCZO = cond(v558)
	v559 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v559
	SCZO = cond(v559)
	v560 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v560
	SCZO = cond(v560)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v561 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v561
	cx = cx + 1<16>
	SZO = cond(cx)
	v562 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v562
	SCZO = cond(v562)
	v563 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v563
	SCZO = cond(v563)
	v564 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v564
	SCZO = cond(v564)
	v565 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v565
	SCZO = cond(v565)
	v566 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v566
	SCZO = cond(v566)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v567 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v567
	SCZO = cond(v567)
	v568 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v568
	SCZO = cond(v568)
	v569 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v569
	SCZO = cond(v569)
	v570 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v570
	SCZO = cond(v570)
	v571 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v571
	SCZO = cond(v571)
	v572 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v572
	SCZO = cond(v572)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v573 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v573
	v574 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v574
	SCZO = cond(v574)
	v575 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v575
	SCZO = cond(v575)
	v576 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v576
	SCZO = cond(v576)
	v577 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v577
	SCZO = cond(v577)
	v578 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v578
	SCZO = cond(v578)
	v579 = Mem0[ds:si + 65<i16>:byte] + al
	Mem0[ds:si + 65<i16>:byte] = v579
	SCZO = cond(v579)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v580 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v580
	SCZO = cond(v580)
	v581 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v581
	SCZO = cond(v581)
	v582 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v582
	SCZO = cond(v582)
	v583 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v583
	SCZO = cond(v583)
	v584 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v584
	SCZO = cond(v584)
	v585 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v585
	SCZO = cond(v585)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v586 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v586
	SCZO = cond(v586)
	v587 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v587
	SCZO = cond(v587)
	v588 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v588
	SCZO = cond(v588)
	v589 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v589
	SCZO = cond(v589)
	v590 = Mem0[ss:bp + 68<i16> + si:byte] + dl
	Mem0[ss:bp + 68<i16> + si:byte] = v590
	SCZO = cond(v590)
	dx = dx + 1<16>
	SZO = cond(dx)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	v591 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v591
	SCZO = cond(v591)
	v592 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v592
	SCZO = cond(v592)
	v593 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v593
	SCZO = cond(v593)
	v594 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v594
	SCZO = cond(v594)
	v595 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v595
	SCZO = cond(v595)
	v596 = Mem0[ds:si + 79<i16>:byte] + cl
	Mem0[ds:si + 79<i16>:byte] = v596
	SCZO = cond(v596)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v597 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v597
	cx = cx + 1<16>
	SZO = cond(cx)
	v598 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v598
	v599 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v599
	SCZO = cond(v599)
	v600 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v600
	SCZO = cond(v600)
	v601 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v601
	SCZO = cond(v601)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = es
	al = al | Mem0[ss:(bp + 79<i16>) + di:byte]
	SZ = cond(al)
	O = false
	C = false
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	bx = bx - 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v602 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v602
	SCZO = cond(v602)
	v603 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v603
	SCZO = cond(v603)
	v604 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v604
	SCZO = cond(v604)
	v605 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v605
	SCZO = cond(v605)
	v606 = Mem0[ss:bp + 65<i16> + si:byte] + dl
	Mem0[ss:bp + 65<i16> + si:byte] = v606
	SCZO = cond(v606)
	v607 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v607
	bp = bp + 1<16>
	SZO = cond(bp)
	v608 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v608
	SCZO = cond(v608)
	v609 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v609
	SCZO = cond(v609)
	v610 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v610
	SCZO = cond(v610)
	v611 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v611
	SCZO = cond(v611)
	v612 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v612
	SCZO = cond(v612)
	v613 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v613
	SCZO = cond(v613)
	sp = sp - 1<16>
	SZO = cond(sp)
	di = di - 1<16>
	SZO = cond(di)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	si = si - 1<16>
	SZO = cond(si)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	cx = cx - 1<16>
	SZO = cond(cx)
	di = di + 1<16>
	SZO = cond(di)
	cx = cx + 1<16>
	SZO = cond(cx)
	v614 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v614
	SCZO = cond(v614)
	v615 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v615
	SCZO = cond(v615)
	al = al + 0xA<8> + C
	SCZO = cond(al)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	cx = cx - 1<16>
	SZO = cond(cx)
	v616 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v616
	di = di - 1<16>
	SZO = cond(di)
	v617 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v617
	SCZO = cond(v617)
	v618 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v618
	SCZO = cond(v618)
	v619 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v619
	SCZO = cond(v619)
	v620 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v620
	SCZO = cond(v620)
	v621 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v621
	SCZO = cond(v621)
	v622 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v622
	SCZO = cond(v622)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	v623 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v623
	SCZO = cond(v623)
	v624 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v624
	SCZO = cond(v624)
	v625 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v625
	SCZO = cond(v625)
	v626 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v626
	SCZO = cond(v626)
	v627 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v627
	SCZO = cond(v627)
	v628 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v628
	SCZO = cond(v628)
	v629 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v629
	SCZO = cond(v629)
	sp = sp - 1<16>
	SZO = cond(sp)
	bx = bx - 1<16>
	SZO = cond(bx)
	v630 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v630
	SCZO = cond(v630)
	v631 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v631
	SCZO = cond(v631)
	v632 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v632
	SCZO = cond(v632)
	v633 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v633
	SCZO = cond(v633)
	v634 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v634
	SCZO = cond(v634)
	v635 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v635
	SCZO = cond(v635)
	v636 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v636
	SCZO = cond(v636)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	dx = dx + 1<16>
	SZO = cond(dx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v637 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v637
	SCZO = cond(v637)
	v638 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v638
	SCZO = cond(v638)
	v639 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v639
	SCZO = cond(v639)
	v640 = Mem0[ds:si:byte] + dh
	Mem0[ds:si:byte] = v640
	SCZO = cond(v640)
	al = al | 0x4C<8>
	SZ = cond(al)
	O = false
	C = false
	di = di - 1<16>
	SZO = cond(di)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v641 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v641
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v642 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v642
	SCZO = cond(v642)
	v643 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v643
	SCZO = cond(v643)
	v644 = Mem0[ds:0x520B<16>:byte] + ah
	Mem0[ds:0x520B<16>:byte] = v644
	SCZO = cond(v644)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bp = bp + 1<16>
	SZO = cond(bp)
	v645 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v645
	SCZO = cond(v645)
	v646 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v646
	SCZO = cond(v646)
	FPUF = cond(ST[Top:real64] - CONVERT(Mem0[ds:bx + di:word32], int32, real64))
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 1<16>
	SZO = cond(sp)
	si = si - 1<16>
	SZO = cond(si)
	di = di - 1<16>
	SZO = cond(di)
	v647 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v647
	SCZO = cond(v647)
	v648 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v648
	SCZO = cond(v648)
	v649 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v649
	SCZO = cond(v649)
	v650 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v650
	SCZO = cond(v650)
	v651 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v651
	SCZO = cond(v651)
	v652 = Mem0[ds:si + 79<i16>:byte] + cl
	Mem0[ds:si + 79<i16>:byte] = v652
	SCZO = cond(v652)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 1<16>
	SZO = cond(sp)
	v653 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v653
	SCZO = cond(v653)
	v654 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v654
	SCZO = cond(v654)
	v655 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v655
	SCZO = cond(v655)
	ch = ch + bl
	SCZO = cond(ch)
	ax = ax | 0x5449<16>
	SZ = cond(ax)
	O = false
	C = false
	bp = bp + 1<16>
	SZO = cond(bp)
	bp = bp - 1<16>
	SZO = cond(bp)
	dx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v656 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v656
	SCZO = cond(v656)
	v657 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v657
	SCZO = cond(v657)
	v658 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v658
	SCZO = cond(v658)
	ch = ch + ch
	SCZO = cond(ch)
	ax = ax | 0x4B43<16>
	SZ = cond(ax)
	O = false
	C = false
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v659 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v659
	SCZO = cond(v659)
	v660 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v660
	SCZO = cond(v660)
	v661 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v661
	SCZO = cond(v661)
	v662 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v662
	SCZO = cond(v662)
	v663 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v663
	SCZO = cond(v663)
	v664 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v664
	SCZO = cond(v664)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bx = bx + 1<16>
	SZO = cond(bx)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	v665 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v665
	SCZO = cond(v665)
	v666 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v666
	SCZO = cond(v666)
	v667 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v667
	SCZO = cond(v667)
	v668 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v668
	SCZO = cond(v668)
	v669 = Mem0[ss:bp + 79<i16> + di:byte] + al
	Mem0[ss:bp + 79<i16> + di:byte] = v669
	SCZO = cond(v669)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v670 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v670
	cx = cx + 1<16>
	SZO = cond(cx)
	v671 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v671
	SCZO = cond(v671)
	v672 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v672
	SCZO = cond(v672)
	v673 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v673
	SCZO = cond(v673)
	bx = bx - 1<16>
	SZO = cond(bx)
	dl = dl | Mem0[ss:(bp + 67<i16>) + si:byte]
	SZ = cond(dl)
	O = false
	C = false
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v674 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v674
	SCZO = cond(v674)
	v675 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v675
	SCZO = cond(v675)
	v676 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v676
	SCZO = cond(v676)
	v677 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v677
	SCZO = cond(v677)
	v678 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v678
	SCZO = cond(v678)
	v679 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v679
	SCZO = cond(v679)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bx = bx + 1<16>
	SZO = cond(bx)
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v680 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v680
	v681 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v681
	SCZO = cond(v681)
	v682 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v682
	SCZO = cond(v682)
	v683 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v683
	SCZO = cond(v683)
	v684 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v684
	SCZO = cond(v684)
	v685 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v685
	SCZO = cond(v685)
	v686 = Mem0[ss:bp + 67<i16> + si:byte] + dl
	Mem0[ss:bp + 67<i16> + si:byte] = v686
	SCZO = cond(v686)
	dx = dx + 1<16>
	SZO = cond(dx)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	v687 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v687
	SCZO = cond(v687)
	v688 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v688
	SCZO = cond(v688)
	v689 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v689
	SCZO = cond(v689)
	v690 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v690
	SCZO = cond(v690)
	v691 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v691
	SCZO = cond(v691)
	v692 = Mem0[ss:bp + 79<i16> + di:byte] + al
	Mem0[ss:bp + 79<i16> + di:byte] = v692
	SCZO = cond(v692)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v693 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v693
	cx = cx + 1<16>
	SZO = cond(cx)
	v694 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v694
	v695 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v695
	SCZO = cond(v695)
	v696 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v696
	SCZO = cond(v696)
	v697 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v697
	SCZO = cond(v697)
	al = al | Mem0[fs:(bp + 79<i16>) + di:byte]
	SZ = cond(al)
	O = false
	C = false
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	si = si - 1<16>
	SZO = cond(si)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	cx = cx - 1<16>
	SZO = cond(cx)
	di = di + 1<16>
	SZO = cond(di)
	cx = cx + 1<16>
	SZO = cond(cx)
	v698 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v698
	SCZO = cond(v698)
	v699 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v699
	SCZO = cond(v699)
	branch Test(UGE,C) l3CEE_E4EA
	goto l3CEE_E4DD_thunk_fn3CEE_E4E0
	// succ:  l3CEE_E4DD_thunk_fn3CEE_E4E0 l3CEE_E4DD_thunk_fn3CEE_E4EA
l3CEE_E431_thunk_fn3CEE_E432:
	call fn3CEE_E432 (retsize: 0;)
	return
	// succ:  fn3CEE_E0FD_exit
l3CEE_E4DD_thunk_fn3CEE_E4E0:
	call fn3CEE_E4E0 (retsize: 0;)
	return
	// succ:  fn3CEE_E0FD_exit
l3CEE_E4DD_thunk_fn3CEE_E4EA:
	call fn3CEE_E4EA (retsize: 0;)
	return
	// succ:  fn3CEE_E0FD_exit
fn3CEE_E0FD_exit:


// fn3CEE_E432
// Return size: 0
define fn3CEE_E432
fn3CEE_E432_entry:
	sp = fp
	Top = 0<i8>
	// succ:  l3CEE_E432
l3CEE_E432:
	sp = sp - 1<16>
	SZO = cond(sp)
	si = si - 1<16>
	SZO = cond(si)
	di = di - 1<16>
	SZO = cond(di)
	v10 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v10
	SCZO = cond(v10)
	v12 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v12
	SCZO = cond(v12)
	v13 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v13
	SCZO = cond(v13)
	v14 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v14
	SCZO = cond(v14)
	v15 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v15
	SCZO = cond(v15)
	v17 = Mem0[ds:si + 79<i16>:byte] + cl
	Mem0[ds:si + 79<i16>:byte] = v17
	SCZO = cond(v17)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 1<16>
	SZO = cond(sp)
	v20 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v20
	SCZO = cond(v20)
	v21 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v21
	SCZO = cond(v21)
	v22 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v22
	SCZO = cond(v22)
	ch = ch + bl
	SCZO = cond(ch)
	ax = ax | 0x5449<16>
	SZ = cond(ax)
	O = false
	C = false
	bp = bp + 1<16>
	SZO = cond(bp)
	bp = bp - 1<16>
	SZO = cond(bp)
	dx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v31 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v31
	SCZO = cond(v31)
	v32 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v32
	SCZO = cond(v32)
	v33 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v33
	SCZO = cond(v33)
	ch = ch + ch
	SCZO = cond(ch)
	ax = ax | 0x4B43<16>
	SZ = cond(ax)
	O = false
	C = false
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v34 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v34
	SCZO = cond(v34)
	v35 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v35
	SCZO = cond(v35)
	v36 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v36
	SCZO = cond(v36)
	v37 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v37
	SCZO = cond(v37)
	v38 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v38
	SCZO = cond(v38)
	v39 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v39
	SCZO = cond(v39)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bx = bx + 1<16>
	SZO = cond(bx)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	v40 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v40
	SCZO = cond(v40)
	v41 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v41
	SCZO = cond(v41)
	v42 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v42
	SCZO = cond(v42)
	v43 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v43
	SCZO = cond(v43)
	v44 = Mem0[ss:bp + 79<i16> + di:byte] + al
	Mem0[ss:bp + 79<i16> + di:byte] = v44
	SCZO = cond(v44)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v45 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v45
	cx = cx + 1<16>
	SZO = cond(cx)
	v46 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v46
	SCZO = cond(v46)
	v47 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v47
	SCZO = cond(v47)
	v48 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v48
	SCZO = cond(v48)
	bx = bx - 1<16>
	SZO = cond(bx)
	dl = dl | Mem0[ss:(bp + 67<i16>) + si:byte]
	SZ = cond(dl)
	O = false
	C = false
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v50 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v50
	SCZO = cond(v50)
	v51 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v51
	SCZO = cond(v51)
	v52 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v52
	SCZO = cond(v52)
	v53 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v53
	SCZO = cond(v53)
	v54 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v54
	SCZO = cond(v54)
	v55 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v55
	SCZO = cond(v55)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bx = bx + 1<16>
	SZO = cond(bx)
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v56 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v56
	v57 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v57
	SCZO = cond(v57)
	v58 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v58
	SCZO = cond(v58)
	v59 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v59
	SCZO = cond(v59)
	v60 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v60
	SCZO = cond(v60)
	v61 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v61
	SCZO = cond(v61)
	v62 = Mem0[ss:bp + 67<i16> + si:byte] + dl
	Mem0[ss:bp + 67<i16> + si:byte] = v62
	SCZO = cond(v62)
	dx = dx + 1<16>
	SZO = cond(dx)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	v63 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v63
	SCZO = cond(v63)
	v64 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v64
	SCZO = cond(v64)
	v65 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v65
	SCZO = cond(v65)
	v66 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v66
	SCZO = cond(v66)
	v67 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v67
	SCZO = cond(v67)
	v68 = Mem0[ss:bp + 79<i16> + di:byte] + al
	Mem0[ss:bp + 79<i16> + di:byte] = v68
	SCZO = cond(v68)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v69 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v69
	cx = cx + 1<16>
	SZO = cond(cx)
	v70 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v70
	v71 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v71
	SCZO = cond(v71)
	v72 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v72
	SCZO = cond(v72)
	v73 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v73
	SCZO = cond(v73)
	al = al | Mem0[fs:(bp + 79<i16>) + di:byte]
	SZ = cond(al)
	O = false
	C = false
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	si = si - 1<16>
	SZO = cond(si)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	cx = cx - 1<16>
	SZO = cond(cx)
	di = di + 1<16>
	SZO = cond(di)
	cx = cx + 1<16>
	SZO = cond(cx)
	v75 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v75
	SCZO = cond(v75)
	v76 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v76
	SCZO = cond(v76)
	branch Test(UGE,C) l3CEE_E4DE_thunk_fn3CEE_E4EA
	goto l3CEE_E4DE_thunk_fn3CEE_E4E0
	// succ:  l3CEE_E4DE_thunk_fn3CEE_E4E0 l3CEE_E4DE_thunk_fn3CEE_E4EA
l3CEE_E432:
	sp = sp - 1<16>
	SZO = cond(sp)
	si = si - 1<16>
	SZO = cond(si)
	di = di - 1<16>
	SZO = cond(di)
	v78 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v78
	SCZO = cond(v78)
	v79 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v79
	SCZO = cond(v79)
	v80 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v80
	SCZO = cond(v80)
	v81 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v81
	SCZO = cond(v81)
	v82 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v82
	SCZO = cond(v82)
	v83 = Mem0[ds:si + 79<i16>:byte] + cl
	Mem0[ds:si + 79<i16>:byte] = v83
	SCZO = cond(v83)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 1<16>
	SZO = cond(sp)
	v84 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v84
	SCZO = cond(v84)
	v85 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v85
	SCZO = cond(v85)
	v86 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v86
	SCZO = cond(v86)
	ch = ch + bl
	SCZO = cond(ch)
	ax = ax | 0x5449<16>
	SZ = cond(ax)
	O = false
	C = false
	bp = bp + 1<16>
	SZO = cond(bp)
	bp = bp - 1<16>
	SZO = cond(bp)
	dx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v87 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v87
	SCZO = cond(v87)
	v88 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v88
	SCZO = cond(v88)
	v89 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v89
	SCZO = cond(v89)
	ch = ch + ch
	SCZO = cond(ch)
	ax = ax | 0x4B43<16>
	SZ = cond(ax)
	O = false
	C = false
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v90 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v90
	SCZO = cond(v90)
	v91 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v91
	SCZO = cond(v91)
	v92 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v92
	SCZO = cond(v92)
	v93 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v93
	SCZO = cond(v93)
	v94 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v94
	SCZO = cond(v94)
	v95 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v95
	SCZO = cond(v95)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bx = bx + 1<16>
	SZO = cond(bx)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	v96 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v96
	SCZO = cond(v96)
	v97 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v97
	SCZO = cond(v97)
	v98 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v98
	SCZO = cond(v98)
	v99 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v99
	SCZO = cond(v99)
	v100 = Mem0[ss:bp + 79<i16> + di:byte] + al
	Mem0[ss:bp + 79<i16> + di:byte] = v100
	SCZO = cond(v100)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v101 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v101
	cx = cx + 1<16>
	SZO = cond(cx)
	v102 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v102
	SCZO = cond(v102)
	v103 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v103
	SCZO = cond(v103)
	v104 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v104
	SCZO = cond(v104)
	bx = bx - 1<16>
	SZO = cond(bx)
	dl = dl | Mem0[ss:(bp + 67<i16>) + si:byte]
	SZ = cond(dl)
	O = false
	C = false
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v105 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v105
	SCZO = cond(v105)
	v106 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v106
	SCZO = cond(v106)
	v107 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v107
	SCZO = cond(v107)
	v108 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v108
	SCZO = cond(v108)
	v109 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v109
	SCZO = cond(v109)
	v110 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v110
	SCZO = cond(v110)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bx = bx + 1<16>
	SZO = cond(bx)
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v111 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v111
	v112 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v112
	SCZO = cond(v112)
	v113 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v113
	SCZO = cond(v113)
	v114 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v114
	SCZO = cond(v114)
	v115 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v115
	SCZO = cond(v115)
	v116 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v116
	SCZO = cond(v116)
	v117 = Mem0[ss:bp + 67<i16> + si:byte] + dl
	Mem0[ss:bp + 67<i16> + si:byte] = v117
	SCZO = cond(v117)
	dx = dx + 1<16>
	SZO = cond(dx)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	v118 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v118
	SCZO = cond(v118)
	v119 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v119
	SCZO = cond(v119)
	v120 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v120
	SCZO = cond(v120)
	v121 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v121
	SCZO = cond(v121)
	v122 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v122
	SCZO = cond(v122)
	v123 = Mem0[ss:bp + 79<i16> + di:byte] + al
	Mem0[ss:bp + 79<i16> + di:byte] = v123
	SCZO = cond(v123)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v124 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v124
	cx = cx + 1<16>
	SZO = cond(cx)
	v125 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v125
	v126 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v126
	SCZO = cond(v126)
	v127 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v127
	SCZO = cond(v127)
	v128 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v128
	SCZO = cond(v128)
	al = al | Mem0[fs:(bp + 79<i16>) + di:byte]
	SZ = cond(al)
	O = false
	C = false
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	si = si - 1<16>
	SZO = cond(si)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	cx = cx - 1<16>
	SZO = cond(cx)
	di = di + 1<16>
	SZO = cond(di)
	cx = cx + 1<16>
	SZO = cond(cx)
	v129 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v129
	SCZO = cond(v129)
	v130 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v130
	SCZO = cond(v130)
	branch Test(UGE,C) l3CEE_E4DE_thunk_fn3CEE_E4EA
	goto l3CEE_E4DE_thunk_fn3CEE_E4E0
	// succ:  l3CEE_E4DE_thunk_fn3CEE_E4E0 l3CEE_E4DE_thunk_fn3CEE_E4EA
l3CEE_E4DE_thunk_fn3CEE_E4E0:
	call fn3CEE_E4E0 (retsize: 0;)
	return
	// succ:  fn3CEE_E432_exit
l3CEE_E4DE_thunk_fn3CEE_E4E0:
	call fn3CEE_E4E0 (retsize: 0;)
	return
	// succ:  fn3CEE_E432_exit
l3CEE_E4DE_thunk_fn3CEE_E4EA:
	call fn3CEE_E4EA (retsize: 0;)
	return
	// succ:  fn3CEE_E432_exit
l3CEE_E4DE_thunk_fn3CEE_E4EA:
	call fn3CEE_E4EA (retsize: 0;)
	return
	// succ:  fn3CEE_E432_exit
fn3CEE_E432_exit:


// fn3CEE_E4E0
// Return size: 0
define fn3CEE_E4E0
fn3CEE_E4E0_entry:
	sp = fp
	Top = 0<i8>
	// succ:  l3CEE_E4E0
l3CEE_E4E0:
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	bx = bx + 1<16>
	SZO = cond(bx)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx + 1<16>
	SZO = cond(bx)
	v12 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v12
	// succ:  l3CEE_E4E9_thunk_fn3CEE_E4EA
l3CEE_E4E9_thunk_fn3CEE_E4EA:
	call fn3CEE_E4EA (retsize: 0;)
	return
	// succ:  fn3CEE_E4E0_exit
fn3CEE_E4E0_exit:


// fn3CEE_E4EA
// Return size: 0
define fn3CEE_E4EA
fn3CEE_E4EA_entry:
	sp = fp
	Top = 0<i8>
	// succ:  l3CEE_E4EA
l3CEE_E4EA:
	v9 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v9
	SCZO = cond(v9)
	v11 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v11
	SCZO = cond(v11)
	__sti()
	v14 = Mem0[ds:si + 79<i16>:byte] + cl + C
	Mem0[ds:si + 79<i16>:byte] = v14
	SCZO = cond(v14)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	dx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v20 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v20
	SCZO = cond(v20)
	v21 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v21
	SCZO = cond(v21)
	v22 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v22
	SCZO = cond(v22)
	v23 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v23
	SCZO = cond(v23)
	v26 = Mem0[ss:bp + 79<i16> + di:byte] + al
	Mem0[ss:bp + 79<i16> + di:byte] = v26
	SCZO = cond(v26)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	dx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v27 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v27
	SCZO = cond(v27)
	v28 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v28
	SCZO = cond(v28)
	v29 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v29
	SCZO = cond(v29)
	v30 = Mem0[ds:bx + di:byte] + cl
	Mem0[ds:bx + di:byte] = v30
	SCZO = cond(v30)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = cs
	bx = bx + 1<16>
	SZO = cond(bx)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	v32 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v32
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v33 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v33
	SCZO = cond(v33)
	v34 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v34
	SCZO = cond(v34)
	v36 = Mem0[ds:bx + 0x580B<16>:byte] + ch
	Mem0[ds:bx + 0x580B<16>:byte] = v36
	SCZO = cond(v36)
	v37 = Mem0[ds:bx + si:word16] ^ ax
	Mem0[ds:bx + si:word16] = v37
	SZ = cond(Mem0[ds:bx + si:word16])
	O = false
	C = false
	v40 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v40
	SCZO = cond(v40)
	v41 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v41
	SCZO = cond(v41)
	v42 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v42
	SCZO = cond(v42)
	v43 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v43
	SCZO = cond(v43)
	v44 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v44
	SCZO = cond(v44)
	v45 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v45
	SCZO = cond(v45)
	v47 = Mem0[ds:bx + 49<i16> + di:byte] + bl
	Mem0[ds:bx + 49<i16> + di:byte] = v47
	SCZO = cond(v47)
	v48 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v48
	SCZO = cond(v48)
	v49 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v49
	SCZO = cond(v49)
	v50 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v50
	SCZO = cond(v50)
	v51 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v51
	SCZO = cond(v51)
	v52 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v52
	SCZO = cond(v52)
	v53 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v53
	SCZO = cond(v53)
	v54 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v54
	SCZO = cond(v54)
	ax = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	al = al ^ Mem0[ds:bx + si:byte]
	SZ = cond(al)
	O = false
	C = false
	v55 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v55
	SCZO = cond(v55)
	v56 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v56
	SCZO = cond(v56)
	v57 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v57
	SCZO = cond(v57)
	v58 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v58
	SCZO = cond(v58)
	v59 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v59
	SCZO = cond(v59)
	v60 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v60
	SCZO = cond(v60)
	v61 = Mem0[ds:bx + 50<i16> + di:byte] + bl
	Mem0[ds:bx + 50<i16> + di:byte] = v61
	SCZO = cond(v61)
	v62 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v62
	SCZO = cond(v62)
	v63 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v63
	SCZO = cond(v63)
	v64 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v64
	SCZO = cond(v64)
	v65 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v65
	SCZO = cond(v65)
	v66 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v66
	SCZO = cond(v66)
	v67 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v67
	SCZO = cond(v67)
	v68 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v68
	SCZO = cond(v68)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	si = si + 1<16>
	SZO = cond(si)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	si = si - 1<16>
	SZO = cond(si)
	bx = bx + 1<16>
	SZO = cond(bx)
	v69 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v69
	SCZO = cond(v69)
	v70 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v70
	SCZO = cond(v70)
	v71 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v71
	SCZO = cond(v71)
	v72 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v72
	SCZO = cond(v72)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v73 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v73
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	bp = bp + 1<16>
	SZO = cond(bp)
	v74 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v74
	SCZO = cond(v74)
	v75 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v75
	SCZO = cond(v75)
	v76 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v76
	SCZO = cond(v76)
	v77 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v77
	SCZO = cond(v77)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v78 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v78
	cx = cx + 1<16>
	SZO = cond(cx)
	v79 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v79
	v80 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v80
	SCZO = cond(v80)
	v81 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v81
	SCZO = cond(v81)
	v82 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v82
	SCZO = cond(v82)
	v83 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v83
	SCZO = cond(v83)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	cx = cx + 1<16>
	SZO = cond(cx)
	bx = bx + 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	v84 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v84
	SCZO = cond(v84)
	v85 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v85
	SCZO = cond(v85)
	v86 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v86
	SCZO = cond(v86)
	v87 = Mem0[ss:bp + 82<i16> + si:byte] + al
	Mem0[ss:bp + 82<i16> + si:byte] = v87
	SCZO = cond(v87)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = di
	v88 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v88
	SCZO = cond(v88)
	v89 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v89
	SCZO = cond(v89)
	v90 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v90
	SCZO = cond(v90)
	v91 = Mem0[ds:di + 83<i16>:byte] + al
	Mem0[ds:di + 83<i16>:byte] = v91
	SCZO = cond(v91)
	bx = bx + 1<16>
	SZO = cond(bx)
	v92 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v92
	SCZO = cond(v92)
	v93 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v93
	SCZO = cond(v93)
	v94 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v94
	SCZO = cond(v94)
	v95 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v95
	SCZO = cond(v95)
	v96 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v96
	SCZO = cond(v96)
	v97 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v97
	SCZO = cond(v97)
	v98 = Mem0[ss:bp + 82<i16> + si:byte] + al
	Mem0[ss:bp + 82<i16> + si:byte] = v98
	SCZO = cond(v98)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v99 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v99
	cx = cx + 1<16>
	SZO = cond(cx)
	v100 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v100
	SCZO = cond(v100)
	v101 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v101
	SCZO = cond(v101)
	v102 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v102
	SCZO = cond(v102)
	dx = dx + 1<16>
	SZO = cond(dx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bx = bx - 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	bp = bp + 1<16>
	SZO = cond(bp)
	v103 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v103
	SCZO = cond(v103)
	v104 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v104
	SCZO = cond(v104)
	v105 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v105
	SCZO = cond(v105)
	dx = dx + 1<16>
	SZO = cond(dx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = di
	v106 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v106
	SCZO = cond(v106)
	v107 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v107
	SCZO = cond(v107)
	v108 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v108
	SCZO = cond(v108)
	v109 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v109
	SCZO = cond(v109)
	v110 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v110
	SCZO = cond(v110)
	v111 = Mem0[ss:bp + 82<i16> + si:byte] + al
	Mem0[ss:bp + 82<i16> + si:byte] = v111
	SCZO = cond(v111)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx + 1<16>
	SZO = cond(bx)
	v112 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v112
	SCZO = cond(v112)
	v113 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v113
	SCZO = cond(v113)
	v114 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v114
	SCZO = cond(v114)
	v115 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v115
	SCZO = cond(v115)
	v116 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v116
	SCZO = cond(v116)
	v118 = Mem0[ss:bp + 69<i16> + si:byte] + dl
	Mem0[ss:bp + 69<i16> + si:byte] = v118
	SCZO = cond(v118)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	cx = cx + 1<16>
	SZO = cond(cx)
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v119 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v119
	v120 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v120
	SCZO = cond(v120)
	v121 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v121
	SCZO = cond(v121)
	v122 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v122
	SCZO = cond(v122)
	v124 = Mem0[ss:bp + 0x500A<16>:byte] + bh
	Mem0[ss:bp + 0x500A<16>:byte] = v124
	SCZO = cond(v124)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si - 1<16>
	SZO = cond(si)
	v125 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v125
	v126 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v126
	SCZO = cond(v126)
	v127 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v127
	SCZO = cond(v127)
	v128 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v128
	SCZO = cond(v128)
	bh = bh + cl
	SCZO = cond(bh)
	al = al | Mem0[ss:(bp + 82<i16>) + si:byte]
	SZ = cond(al)
	O = false
	C = false
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = di
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp + 1<16>
	SZO = cond(sp)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = di
	si = si - 1<16>
	SZO = cond(si)
	v129 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v129
	SCZO = cond(v129)
	v130 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v130
	SCZO = cond(v130)
	cx = cx - 1<16>
	branch Test(NE,Z) && cx != 0<16> l3CEE_E63A
	// succ:  l3CEE_E630 l3CEE_E63A
l3CEE_E630:
	dx = dx + 1<16>
	SZO = cond(dx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = di
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	cx = cx + 1<16>
	SZO = cond(cx)
	di = di + 1<16>
	SZO = cond(di)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp + 1<16>
	SZO = cond(sp)
	di = di - 1<16>
	SZO = cond(di)
	// succ:  l3CEE_E63A
l3CEE_E63A:
	v132 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v132
	SCZO = cond(v132)
	v133 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v133
	SCZO = cond(v133)
	__out<word16>(dx, ax)
	al = al | Mem0[ss:(bp + 82<i16>) + si:byte]
	SZ = cond(al)
	O = false
	C = false
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = di
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	cx = cx + 1<16>
	SZO = cond(cx)
	di = di + 1<16>
	SZO = cond(di)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v134 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v134
	SCZO = cond(v134)
	v135 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v135
	SCZO = cond(v135)
	v136 = Mem0[ss:bp + si:word16] - 1<16>
	Mem0[ss:bp + si:word16] = v136
	SZO = cond(v136)
	dx = dx + 1<16>
	SZO = cond(dx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = di
	ax = ax - 1<16>
	SZO = cond(ax)
	di = di - 1<16>
	SZO = cond(di)
	bp = bp - 1<16>
	SZO = cond(bp)
	bp = bp + 1<16>
	SZO = cond(bp)
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si - 1<16>
	SZO = cond(si)
	v137 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v137
	SCZO = cond(v137)
	v138 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v138
	SCZO = cond(v138)
	cx = cx + Mem0[ss:bp + di:word16] + C
	SCZO = cond(cx)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = di
	v139 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v139
	SCZO = cond(v139)
	v140 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v140
	SCZO = cond(v140)
	v141 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v141
	SCZO = cond(v141)
	v142 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v142
	SCZO = cond(v142)
	v143 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v143
	SCZO = cond(v143)
	v144 = Mem0[ds:si + 76<i16>:byte] + cl
	Mem0[ds:si + 76<i16>:byte] = v144
	SCZO = cond(v144)
	v145 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v145
	SCZO = cond(v145)
	v146 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v146
	SCZO = cond(v146)
	v147 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v147
	SCZO = cond(v147)
	v148 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v148
	SCZO = cond(v148)
	v149 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v149
	SCZO = cond(v149)
	v150 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v150
	SCZO = cond(v150)
	v151 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v151
	SCZO = cond(v151)
	bx = bx - 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v152 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v152
	SCZO = cond(v152)
	v153 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v153
	SCZO = cond(v153)
	v154 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v154
	SCZO = cond(v154)
	v155 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v155
	SCZO = cond(v155)
	v156 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v156
	SCZO = cond(v156)
	v157 = Mem0[ss:bp + 67<i16> + di:byte] + dl
	Mem0[ss:bp + 67<i16> + di:byte] = v157
	SCZO = cond(v157)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	v158 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v158
	SCZO = cond(v158)
	v159 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v159
	SCZO = cond(v159)
	v160 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v160
	SCZO = cond(v160)
	al = al + 0<8>
	SCZO = cond(al)
	__out<word16>(dx, ax)
	si = si + 2<i16>
	bx = bx + 1<16>
	SZO = cond(bx)
	si = si - 1<16>
	SZO = cond(si)
	bp = bp + 1<16>
	SZO = cond(bp)
	di = di - 1<16>
	SZO = cond(di)
	v161 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v161
	SCZO = cond(v161)
	v162 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v162
	SCZO = cond(v162)
	v163 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v163
	SCZO = cond(v163)
	v164 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v164
	SCZO = cond(v164)
	v165 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v165
	SCZO = cond(v165)
	v166 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v166
	SCZO = cond(v166)
	v167 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v167
	SCZO = cond(v167)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v168 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v168
	SCZO = cond(v168)
	v169 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v169
	SCZO = cond(v169)
	v170 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v170
	SCZO = cond(v170)
	v171 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v171
	SCZO = cond(v171)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v172 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v172
	SCZO = cond(v172)
	v173 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v173
	SCZO = cond(v173)
	v174 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v174
	SCZO = cond(v174)
	v175 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v175
	SCZO = cond(v175)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx - 1<16>
	SZO = cond(bx)
	v176 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v176
	SCZO = cond(v176)
	v177 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v177
	SCZO = cond(v177)
	v178 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v178
	SCZO = cond(v178)
	v179 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v179
	SCZO = cond(v179)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	di = di - 1<16>
	SZO = cond(di)
	bx = bx + 1<16>
	SZO = cond(bx)
	v180 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v180
	SCZO = cond(v180)
	v181 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v181
	SCZO = cond(v181)
	v182 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v182
	SCZO = cond(v182)
	v183 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v183
	SCZO = cond(v183)
	v184 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v184
	SCZO = cond(v184)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	si = si - 1<16>
	SZO = cond(si)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	bp = bp - 1<16>
	SZO = cond(bp)
	v185 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v185
	SCZO = cond(v185)
	v186 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v186
	SCZO = cond(v186)
	v187 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v187
	SCZO = cond(v187)
	v188 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v188
	SCZO = cond(v188)
	v189 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v189
	SCZO = cond(v189)
	v190 = Mem0[ss:bp + 65<i16> + di:byte] + dl
	Mem0[ss:bp + 65<i16> + di:byte] = v190
	SCZO = cond(v190)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si - 1<16>
	SZO = cond(si)
	v191 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v191
	SCZO = cond(v191)
	al = al | 0<8>
	SZ = cond(al)
	O = false
	C = false
	cx = cx - 1<16>
	branch cx != 0<16> l3CEE_E756
	// succ:  l3CEE_E710 l3CEE_E756
l3CEE_E710:
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 1<16>
	SZO = cond(sp)
	v192 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v192
	SCZO = cond(v192)
	v193 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v193
	SCZO = cond(v193)
	v194 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v194
	SCZO = cond(v194)
	v195 = Mem0[ss:bp + 67<i16> + di:byte] + dl
	Mem0[ss:bp + 67<i16> + di:byte] = v195
	SCZO = cond(v195)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 1<16>
	SZO = cond(sp)
	v196 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v196
	SCZO = cond(v196)
	v197 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v197
	SCZO = cond(v197)
	v198 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v198
	SCZO = cond(v198)
	v199 = Mem0[ds:di + 68<i16>:byte] + al
	Mem0[ds:di + 68<i16>:byte] = v199
	SCZO = cond(v199)
	cx = cx + 1<16>
	SZO = cond(cx)
	v200 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v200
	bp = bp + 1<16>
	SZO = cond(bp)
	v201 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v201
	SCZO = cond(v201)
	v202 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v202
	SCZO = cond(v202)
	v203 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v203
	SCZO = cond(v203)
	v204 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v204
	SCZO = cond(v204)
	v205 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v205
	SCZO = cond(v205)
	v206 = Mem0[ds:di + 82<i16>:byte] + al
	Mem0[ds:di + 82<i16>:byte] = v206
	SCZO = cond(v206)
	v207 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v207
	bx = bx - 1<16>
	SZO = cond(bx)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v208 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v208
	SCZO = cond(v208)
	v209 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v209
	SCZO = cond(v209)
	v210 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v210
	SCZO = cond(v210)
	v211 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v211
	SCZO = cond(v211)
	v212 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v212
	SCZO = cond(v212)
	v213 = Mem0[ds:di + 82<i16>:byte] + al
	Mem0[ds:di + 82<i16>:byte] = v213
	SCZO = cond(v213)
	v214 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v214
	si = si - 1<16>
	SZO = cond(si)
	di = di - 1<16>
	SZO = cond(di)
	v215 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v215
	SCZO = cond(v215)
	goto l3CEE_E757
	// succ:  l3CEE_E757
l3CEE_E756:
	v288 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v288
	SCZO = cond(v288)
	goto l3CEE_E758
	// succ:  l3CEE_E758
l3CEE_E757:
	v216 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v216
	SCZO = cond(v216)
	goto l3CEE_E759
	// succ:  l3CEE_E759
l3CEE_E758:
	v289 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v289
	SCZO = cond(v289)
	goto l3CEE_E75A
	// succ:  l3CEE_E75A
l3CEE_E759:
	v217 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v217
	SCZO = cond(v217)
	goto l3CEE_E75B
	// succ:  l3CEE_E75B
l3CEE_E75A:
	v290 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v290
	SCZO = cond(v290)
	goto l3CEE_E75C
	// succ:  l3CEE_E75C
l3CEE_E75B:
	v218 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v218
	SCZO = cond(v218)
	goto l3CEE_E75D
	// succ:  l3CEE_E75D
l3CEE_E75C:
	v291 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v291
	SCZO = cond(v291)
	goto l3CEE_E75E
	// succ:  l3CEE_E75E
l3CEE_E75D:
	v219 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v219
	SCZO = cond(v219)
	goto l3CEE_E75F
	// succ:  l3CEE_E75F
l3CEE_E75E:
	v292 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v292
	SCZO = cond(v292)
	goto l3CEE_E760
	// succ:  l3CEE_E760
l3CEE_E75F:
	v220 = Mem0[ds:di + 68<i16>:byte] + al
	Mem0[ds:di + 68<i16>:byte] = v220
	SCZO = cond(v220)
	goto l3CEE_E762
	// succ:  l3CEE_E762
l3CEE_E760:
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp + 1<16>
	SZO = cond(sp)
	// succ:  l3CEE_E762
l3CEE_E762:
	cx = cx + 1<16>
	SZO = cond(cx)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v221 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v221
	SCZO = cond(v221)
	v222 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v222
	SCZO = cond(v222)
	v223 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v223
	SCZO = cond(v223)
	v224 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v224
	SCZO = cond(v224)
	v225 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v225
	SCZO = cond(v225)
	v226 = Mem0[ds:di + 82<i16>:byte] + al
	Mem0[ds:di + 82<i16>:byte] = v226
	SCZO = cond(v226)
	cx = cx + 1<16>
	SZO = cond(cx)
	v227 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v227
	bp = bp + 1<16>
	SZO = cond(bp)
	v228 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v228
	SCZO = cond(v228)
	v229 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v229
	SCZO = cond(v229)
	v230 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v230
	SCZO = cond(v230)
	v231 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v231
	SCZO = cond(v231)
	v232 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v232
	SCZO = cond(v232)
	v233 = Mem0[ds:di + 80<i16>:byte] + al
	Mem0[ds:di + 80<i16>:byte] = v233
	SCZO = cond(v233)
	// succ:  l3CEE_E77F_thunk_fn3CEE_E780
l3CEE_E77F_thunk_fn3CEE_E780:
	call fn3CEE_E780 (retsize: 0;)
	return
	// succ:  fn3CEE_E4EA_exit
fn3CEE_E4EA_exit:


// fn3CEE_E780
// Return size: 0
define fn3CEE_E780
fn3CEE_E780_entry:
	sp = fp
	Top = 0<i8>
	// succ:  l3CEE_E780
l3CEE_E780:
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v14 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v14
	SCZO = cond(v14)
	v16 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v16
	SCZO = cond(v16)
	v17 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v17
	SCZO = cond(v17)
	v18 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v18
	SCZO = cond(v18)
	v19 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v19
	SCZO = cond(v19)
	v21 = Mem0[ds:di + 73<i16>:byte] + al
	Mem0[ds:di + 73<i16>:byte] = v21
	SCZO = cond(v21)
	si = si - 1<16>
	SZO = cond(si)
	v22 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v22
	v23 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v23
	SCZO = cond(v23)
	v24 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v24
	SCZO = cond(v24)
	v25 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v25
	SCZO = cond(v25)
	v26 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v26
	SCZO = cond(v26)
	v27 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v27
	SCZO = cond(v27)
	v28 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v28
	SCZO = cond(v28)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	dx = dx + 1<16>
	SZO = cond(dx)
	si = si - 1<16>
	SZO = cond(si)
	di = di - 1<16>
	SZO = cond(di)
	v29 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v29
	SCZO = cond(v29)
	v30 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v30
	SCZO = cond(v30)
	v31 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v31
	SCZO = cond(v31)
	v32 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v32
	SCZO = cond(v32)
	v33 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v33
	SCZO = cond(v33)
	v34 = Mem0[ds:di + 80<i16>:byte] + al
	Mem0[ds:di + 80<i16>:byte] = v34
	SCZO = cond(v34)
	cx = cx + 1<16>
	SZO = cond(cx)
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp + 1<16>
	SZO = cond(sp)
	v35 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v35
	SCZO = cond(v35)
	v36 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v36
	SCZO = cond(v36)
	v37 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v37
	SCZO = cond(v37)
	v38 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v38
	SCZO = cond(v38)
	v39 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v39
	SCZO = cond(v39)
	v40 = Mem0[ds:di + 67<i16>:byte] + al
	Mem0[ds:di + 67<i16>:byte] = v40
	SCZO = cond(v40)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v41 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v41
	SCZO = cond(v41)
	v42 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v42
	SCZO = cond(v42)
	v43 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v43
	SCZO = cond(v43)
	v44 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v44
	SCZO = cond(v44)
	v45 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v45
	SCZO = cond(v45)
	v46 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v46
	SCZO = cond(v46)
	v48 = Mem0[ss:bp + 66<i16> + si:byte] + dl
	Mem0[ss:bp + 66<i16> + si:byte] = v48
	SCZO = cond(v48)
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v49 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v49
	SCZO = cond(v49)
	v50 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v50
	SCZO = cond(v50)
	v51 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v51
	SCZO = cond(v51)
	v52 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v52
	SCZO = cond(v52)
	v53 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v53
	SCZO = cond(v53)
	v54 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v54
	SCZO = cond(v54)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v55 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v55
	SCZO = cond(v55)
	v56 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v56
	SCZO = cond(v56)
	v57 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v57
	SCZO = cond(v57)
	v58 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v58
	SCZO = cond(v58)
	v59 = Mem0[ss:bp + 69<i16> + si:byte] + dl
	Mem0[ss:bp + 69<i16> + si:byte] = v59
	SCZO = cond(v59)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bx = bx - 1<16>
	SZO = cond(bx)
	v60 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v60
	SCZO = cond(v60)
	v61 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v61
	SCZO = cond(v61)
	v62 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v62
	SCZO = cond(v62)
	v63 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v63
	SCZO = cond(v63)
	v64 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v64
	SCZO = cond(v64)
	di = di - 1<16>
	SZO = cond(di)
	bx = bx - 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v65 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v65
	bx = bx - 1<16>
	SZO = cond(bx)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v66 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v66
	SCZO = cond(v66)
	v67 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v67
	SCZO = cond(v67)
	v68 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v68
	SCZO = cond(v68)
	v69 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v69
	SCZO = cond(v69)
	branch Test(SG,S) l3CEE_E80E_thunk_fn3CEE_E81B
	goto l3CEE_E80E_thunk_fn3CEE_E810
	// succ:  l3CEE_E80E_thunk_fn3CEE_E810 l3CEE_E80E_thunk_fn3CEE_E81B
l3CEE_E780:
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v72 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v72
	SCZO = cond(v72)
	v73 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v73
	SCZO = cond(v73)
	v74 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v74
	SCZO = cond(v74)
	v75 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v75
	SCZO = cond(v75)
	v76 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v76
	SCZO = cond(v76)
	v77 = Mem0[ds:di + 73<i16>:byte] + al
	Mem0[ds:di + 73<i16>:byte] = v77
	SCZO = cond(v77)
	si = si - 1<16>
	SZO = cond(si)
	v78 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v78
	v79 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v79
	SCZO = cond(v79)
	v80 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v80
	SCZO = cond(v80)
	v81 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v81
	SCZO = cond(v81)
	v82 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v82
	SCZO = cond(v82)
	v83 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v83
	SCZO = cond(v83)
	v84 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v84
	SCZO = cond(v84)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	dx = dx + 1<16>
	SZO = cond(dx)
	si = si - 1<16>
	SZO = cond(si)
	di = di - 1<16>
	SZO = cond(di)
	v85 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v85
	SCZO = cond(v85)
	v86 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v86
	SCZO = cond(v86)
	v87 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v87
	SCZO = cond(v87)
	v88 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v88
	SCZO = cond(v88)
	v89 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v89
	SCZO = cond(v89)
	v90 = Mem0[ds:di + 80<i16>:byte] + al
	Mem0[ds:di + 80<i16>:byte] = v90
	SCZO = cond(v90)
	cx = cx + 1<16>
	SZO = cond(cx)
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp + 1<16>
	SZO = cond(sp)
	v91 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v91
	SCZO = cond(v91)
	v92 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v92
	SCZO = cond(v92)
	v93 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v93
	SCZO = cond(v93)
	v94 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v94
	SCZO = cond(v94)
	v95 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v95
	SCZO = cond(v95)
	v96 = Mem0[ds:di + 67<i16>:byte] + al
	Mem0[ds:di + 67<i16>:byte] = v96
	SCZO = cond(v96)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v97 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v97
	SCZO = cond(v97)
	v98 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v98
	SCZO = cond(v98)
	v99 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v99
	SCZO = cond(v99)
	v100 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v100
	SCZO = cond(v100)
	v101 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v101
	SCZO = cond(v101)
	v102 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v102
	SCZO = cond(v102)
	v103 = Mem0[ss:bp + 66<i16> + si:byte] + dl
	Mem0[ss:bp + 66<i16> + si:byte] = v103
	SCZO = cond(v103)
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v104 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v104
	SCZO = cond(v104)
	v105 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v105
	SCZO = cond(v105)
	v106 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v106
	SCZO = cond(v106)
	v107 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v107
	SCZO = cond(v107)
	v108 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v108
	SCZO = cond(v108)
	v109 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v109
	SCZO = cond(v109)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v110 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v110
	SCZO = cond(v110)
	v111 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v111
	SCZO = cond(v111)
	v112 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v112
	SCZO = cond(v112)
	v113 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v113
	SCZO = cond(v113)
	v114 = Mem0[ss:bp + 69<i16> + si:byte] + dl
	Mem0[ss:bp + 69<i16> + si:byte] = v114
	SCZO = cond(v114)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bx = bx - 1<16>
	SZO = cond(bx)
	v115 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v115
	SCZO = cond(v115)
	v116 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v116
	SCZO = cond(v116)
	v117 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v117
	SCZO = cond(v117)
	v118 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v118
	SCZO = cond(v118)
	v119 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v119
	SCZO = cond(v119)
	di = di - 1<16>
	SZO = cond(di)
	bx = bx - 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v120 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v120
	bx = bx - 1<16>
	SZO = cond(bx)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v121 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v121
	SCZO = cond(v121)
	v122 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v122
	SCZO = cond(v122)
	v123 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v123
	SCZO = cond(v123)
	v124 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v124
	SCZO = cond(v124)
	branch Test(SG,S) l3CEE_E81B
	// succ:  l3CEE_E80C_thunk_fn3CEE_E810 l3CEE_E80C_thunk_fn3CEE_E81B
l3CEE_E80C_thunk_fn3CEE_E810:
	call fn3CEE_E810 (retsize: 0;)
	return
	// succ:  fn3CEE_E780_exit
l3CEE_E80C_thunk_fn3CEE_E81B:
	call fn3CEE_E81B (retsize: 0;)
	return
	// succ:  fn3CEE_E780_exit
l3CEE_E80E_thunk_fn3CEE_E810:
	call fn3CEE_E810 (retsize: 0;)
	return
	// succ:  fn3CEE_E780_exit
l3CEE_E80E_thunk_fn3CEE_E81B:
	call fn3CEE_E81B (retsize: 0;)
	return
	// succ:  fn3CEE_E780_exit
fn3CEE_E780_exit:


// fn3CEE_E810
// Return size: 0
define fn3CEE_E810
fn3CEE_E810_entry:
	sp = fp
	Top = 0<i8>
	// succ:  l3CEE_E810
l3CEE_E810:
	di = di - 1<16>
	SZO = cond(di)
	bx = bx - 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v15 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v15
	SCZO = cond(v15)
	v17 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v17
	SCZO = cond(v17)
	v18 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v18
	SCZO = cond(v18)
	// succ:  l3CEE_E81C
l3CEE_E81C:
	v19 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v19
	SCZO = cond(v19)
	// succ:  l3CEE_E81E
l3CEE_E81E:
	branch Test(GT,SZO) l3CEE_E82B
	// succ:  l3CEE_E81E_thunk_fn3CEE_E81B l3CEE_E81E_thunk_fn3CEE_E81B
l3CEE_E81E_thunk_fn3CEE_E81B:
	call fn3CEE_E81B (retsize: 0;)
	return
	// succ:  fn3CEE_E810_exit
l3CEE_E81E_thunk_fn3CEE_E81B:
	call fn3CEE_E81B (retsize: 0;)
	return
	// succ:  fn3CEE_E810_exit
fn3CEE_E810_exit:


// fn3CEE_E81B
// Return size: 0
define fn3CEE_E81B
fn3CEE_E81B_entry:
	sp = fp
	Top = 0<i8>
	// succ:  l3CEE_E81B
l3CEE_E81B:
	v9 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v9
	SCZO = cond(v9)
	// succ:  l3CEE_E81D
l3CEE_E81D:
	v12 = Mem0[ds:bx + 11<i16>:byte] + bh
	Mem0[ds:bx + 11<i16>:byte] = v12
	SCZO = cond(v12)
	// succ:  l3CEE_E820
l3CEE_E820:
	di = di + 1<16>
	SZO = cond(di)
	bp = bp + 1<16>
	SZO = cond(bp)
	v16 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v16
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v18 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v18
	si = si - 1<16>
	SZO = cond(si)
	di = di - 1<16>
	SZO = cond(di)
	v19 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v19
	SCZO = cond(v19)
	// succ:  l3CEE_E82B
l3CEE_E82B:
	v20 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v20
	SCZO = cond(v20)
	v22 = Mem0[ds:di + 0x450B<16>:byte] + cl
	Mem0[ds:di + 0x450B<16>:byte] = v22
	SCZO = cond(v22)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	dx = dx + 1<16>
	SZO = cond(dx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx - 1<16>
	SZO = cond(bx)
	v24 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v24
	SCZO = cond(v24)
	v25 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v25
	SCZO = cond(v25)
	v26 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v26
	SCZO = cond(v26)
	v27 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v27
	SCZO = cond(v27)
	v28 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v28
	SCZO = cond(v28)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp + 1<16>
	SZO = cond(sp)
	v29 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v29
	v30 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v30
	SCZO = cond(v30)
	v31 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v31
	SCZO = cond(v31)
	v32 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v32
	SCZO = cond(v32)
	v33 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v33
	SCZO = cond(v33)
	v34 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v34
	SCZO = cond(v34)
	v35 = Mem0[ds:bx + 83<i16> + di:byte] + al
	Mem0[ds:bx + 83<i16> + di:byte] = v35
	SCZO = cond(v35)
	di = di - 1<16>
	SZO = cond(di)
	si = si + 1<16>
	SZO = cond(si)
	v36 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v36
	SCZO = cond(v36)
	v37 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v37
	SCZO = cond(v37)
	v38 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v38
	SCZO = cond(v38)
	v39 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v39
	SCZO = cond(v39)
	v40 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v40
	SCZO = cond(v40)
	v41 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v41
	SCZO = cond(v41)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v42 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v42
	SCZO = cond(v42)
	v43 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v43
	SCZO = cond(v43)
	v44 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v44
	SCZO = cond(v44)
	v45 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v45
	SCZO = cond(v45)
	v46 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v46
	SCZO = cond(v46)
	v47 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v47
	SCZO = cond(v47)
	v48 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v48
	SCZO = cond(v48)
	bx = bx + 1<16>
	SZO = cond(bx)
	bx = bx + 1<16>
	SZO = cond(bx)
	v49 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v49
	SCZO = cond(v49)
	v50 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v50
	SCZO = cond(v50)
	v51 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v51
	SCZO = cond(v51)
	v52 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v52
	SCZO = cond(v52)
	v53 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v53
	SCZO = cond(v53)
	v54 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v54
	SCZO = cond(v54)
	v55 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v55
	SCZO = cond(v55)
	bp = bp - 1<16>
	SZO = cond(bp)
	bp = bp - 1<16>
	SZO = cond(bp)
	v56 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v56
	SCZO = cond(v56)
	v57 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v57
	SCZO = cond(v57)
	v58 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v58
	SCZO = cond(v58)
	v59 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v59
	SCZO = cond(v59)
	v60 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v60
	SCZO = cond(v60)
	v61 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v61
	SCZO = cond(v61)
	v62 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v62
	SCZO = cond(v62)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v64 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v64
	si = si - 1<16>
	SZO = cond(si)
	di = di - 1<16>
	SZO = cond(di)
	v65 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v65
	SCZO = cond(v65)
	v66 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v66
	SCZO = cond(v66)
	v67 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v67
	SCZO = cond(v67)
	v68 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v68
	SCZO = cond(v68)
	bp = bp - 1<16>
	SZO = cond(bp)
	sp = sp + 1<16>
	SZO = cond(sp)
	v69 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v69
	SCZO = cond(v69)
	v70 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v70
	SCZO = cond(v70)
	v71 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v71
	SCZO = cond(v71)
	v72 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v72
	SCZO = cond(v72)
	v73 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v73
	SCZO = cond(v73)
	v74 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v74
	SCZO = cond(v74)
	v75 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v75
	SCZO = cond(v75)
	di = di + 1<16>
	SZO = cond(di)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v76 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v76
	cx = cx + 1<16>
	SZO = cond(cx)
	v77 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v77
	SCZO = cond(v77)
	v78 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v78
	SCZO = cond(v78)
	v79 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v79
	SCZO = cond(v79)
	v80 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v80
	SCZO = cond(v80)
	v81 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v81
	SCZO = cond(v81)
	v82 = Mem0[ds:bx + 75<i16>:byte] + al
	Mem0[ds:bx + 75<i16>:byte] = v82
	SCZO = cond(v82)
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v83 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v83
	SCZO = cond(v83)
	v84 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v84
	SCZO = cond(v84)
	v85 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v85
	SCZO = cond(v85)
	v86 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v86
	SCZO = cond(v86)
	v87 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v87
	SCZO = cond(v87)
	v88 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v88
	SCZO = cond(v88)
	di = di + 1<16>
	SZO = cond(di)
	bp = bp + 1<16>
	SZO = cond(bp)
	v89 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v89
	di = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx + 1<16>
	SZO = cond(bx)
	si = si - 1<16>
	SZO = cond(si)
	v90 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v90
	SCZO = cond(v90)
	v91 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v91
	SCZO = cond(v91)
	v92 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v92
	SCZO = cond(v92)
	branch cx == 0<16> l3CEE_E8EE
	// succ:  l3CEE_E8E0 l3CEE_E8EE
l3CEE_E8E0:
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 1<16>
	SZO = cond(sp)
	v94 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v94
	SCZO = cond(v94)
	v95 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v95
	SCZO = cond(v95)
	v96 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v96
	SCZO = cond(v96)
	goto l3CEE_E8EF
	// succ:  l3CEE_E8EF
l3CEE_E8EE:
	v1687 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1687
	SCZO = cond(v1687)
	goto l3CEE_E8F0
	// succ:  l3CEE_E8F0
l3CEE_E8EF:
	v97 = Mem0[ds:di + 65<i16>:byte] + al
	Mem0[ds:di + 65<i16>:byte] = v97
	SCZO = cond(v97)
	goto l3CEE_E8F2
	// succ:  l3CEE_E8F2
l3CEE_E8F0:
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	// succ:  l3CEE_E8F2
l3CEE_E8F2:
	bp = bp - 1<16>
	SZO = cond(bp)
	v98 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v98
	v99 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v99
	SCZO = cond(v99)
	v100 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v100
	SCZO = cond(v100)
	v101 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v101
	SCZO = cond(v101)
	v102 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v102
	SCZO = cond(v102)
	v103 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v103
	SCZO = cond(v103)
	v104 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v104
	SCZO = cond(v104)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	cx = cx + 1<16>
	SZO = cond(cx)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v105 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v105
	SCZO = cond(v105)
	v106 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v106
	SCZO = cond(v106)
	v107 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v107
	SCZO = cond(v107)
	v108 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v108
	SCZO = cond(v108)
	v109 = Mem0[ds:di + 80<i16>:byte] + al
	Mem0[ds:di + 80<i16>:byte] = v109
	SCZO = cond(v109)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v110 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v110
	SCZO = cond(v110)
	v111 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v111
	SCZO = cond(v111)
	v112 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v112
	SCZO = cond(v112)
	v113 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v113
	SCZO = cond(v113)
	v114 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v114
	SCZO = cond(v114)
	di = di - 1<16>
	SZO = cond(di)
	bx = bx - 1<16>
	SZO = cond(bx)
	bx = bx + 1<16>
	SZO = cond(bx)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	v115 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v115
	SCZO = cond(v115)
	v116 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v116
	SCZO = cond(v116)
	v117 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v117
	SCZO = cond(v117)
	v118 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v118
	SCZO = cond(v118)
	cl = cl & Mem0[ds:si:byte]
	SZ = cond(cl)
	O = false
	C = false
	di = di - 1<16>
	SZO = cond(di)
	bx = bx - 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v122 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v122
	si = si - 1<16>
	SZO = cond(si)
	di = di - 1<16>
	SZO = cond(di)
	v123 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v123
	SCZO = cond(v123)
	v124 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v124
	SCZO = cond(v124)
	v125 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v125
	SCZO = cond(v125)
	v126 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v126
	SCZO = cond(v126)
	cl = cl + Mem0[ds:si:byte]
	SCZO = cond(cl)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp + 1<16>
	SZO = cond(sp)
	v127 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v127
	v128 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v128
	SCZO = cond(v128)
	v129 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v129
	SCZO = cond(v129)
	v130 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v130
	SCZO = cond(v130)
	v131 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v131
	SCZO = cond(v131)
	v132 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v132
	SCZO = cond(v132)
	v134 = Mem0[ds:bx + 82<i16> + si:byte] + dl
	Mem0[ds:bx + 82<i16> + si:byte] = v134
	SCZO = cond(v134)
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx - 1<16>
	SZO = cond(bx)
	v135 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v135
	SCZO = cond(v135)
	v136 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v136
	SCZO = cond(v136)
	v137 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v137
	SCZO = cond(v137)
	v138 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v138
	SCZO = cond(v138)
	v139 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v139
	SCZO = cond(v139)
	v140 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v140
	SCZO = cond(v140)
	bp = bp + 1<16>
	SZO = cond(bp)
	dx = dx + 1<16>
	SZO = cond(dx)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	v141 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v141
	SCZO = cond(v141)
	v142 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v142
	SCZO = cond(v142)
	v143 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v143
	SCZO = cond(v143)
	v144 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v144
	SCZO = cond(v144)
	v145 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v145
	SCZO = cond(v145)
	v146 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v146
	SCZO = cond(v146)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx - 1<16>
	SZO = cond(bx)
	v147 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v147
	SCZO = cond(v147)
	v148 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v148
	SCZO = cond(v148)
	v149 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v149
	SCZO = cond(v149)
	v150 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v150
	SCZO = cond(v150)
	v151 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v151
	SCZO = cond(v151)
	v152 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v152
	SCZO = cond(v152)
	sp = sp - 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp - 1<16>
	SZO = cond(bp)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	v153 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v153
	SCZO = cond(v153)
	v154 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v154
	SCZO = cond(v154)
	v155 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v155
	SCZO = cond(v155)
	v156 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v156
	SCZO = cond(v156)
	v157 = Mem0[ss:bp + 67<i16> + di:byte] + dl
	Mem0[ss:bp + 67<i16> + di:byte] = v157
	SCZO = cond(v157)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	dx = dx + 1<16>
	SZO = cond(dx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v158 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v158
	SCZO = cond(v158)
	v159 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v159
	SCZO = cond(v159)
	v160 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v160
	SCZO = cond(v160)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	si = si - 1<16>
	SZO = cond(si)
	cx = cx + 1<16>
	SZO = cond(cx)
	bp = bp - 1<16>
	SZO = cond(bp)
	bp = bp + 1<16>
	SZO = cond(bp)
	v161 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v161
	SCZO = cond(v161)
	v162 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v162
	SCZO = cond(v162)
	v163 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v163
	SCZO = cond(v163)
	ax = ax - 0x450D<16> - C
	SCZO = cond(ax)
	cx = cx - 1<16>
	SZO = cond(cx)
	v164 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v164
	bp = bp + 1<16>
	SZO = cond(bp)
	bp = bp - 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v165 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v165
	SCZO = cond(v165)
	v166 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v166
	SCZO = cond(v166)
	v167 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v167
	SCZO = cond(v167)
	v168 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v168
	SCZO = cond(v168)
	v169 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v169
	SCZO = cond(v169)
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	cx = cx - 1<16>
	SZO = cond(cx)
	v170 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v170
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	dx = dx + 1<16>
	SZO = cond(dx)
	v171 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v171
	SCZO = cond(v171)
	v172 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v172
	SCZO = cond(v172)
	v173 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v173
	SCZO = cond(v173)
	v174 = Mem0[ds:bx + 12<i16>:byte] + dl
	Mem0[ds:bx + 12<i16>:byte] = v174
	SCZO = cond(v174)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	dx = dx + 1<16>
	SZO = cond(dx)
	v175 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v175
	di = di - 1<16>
	SZO = cond(di)
	v176 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v176
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v177 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v177
	SCZO = cond(v177)
	v178 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v178
	SCZO = cond(v178)
	v179 = Mem0[ds:bx + 13<i16> + di:byte] + al
	Mem0[ds:bx + 13<i16> + di:byte] = v179
	SCZO = cond(v179)
	ax = ax - 1<16>
	SZO = cond(ax)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	v180 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v180
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp + 1<16>
	SZO = cond(sp)
	v181 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v181
	SCZO = cond(v181)
	v182 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v182
	SCZO = cond(v182)
	v183 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v183
	SCZO = cond(v183)
	sp = sp + 1<16>
	SZO = cond(sp)
	dx = dx + 1<16>
	SZO = cond(dx)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx - 1<16>
	SZO = cond(cx)
	v184 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v184
	v185 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v185
	SCZO = cond(v185)
	v186 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v186
	SCZO = cond(v186)
	v187 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v187
	SCZO = cond(v187)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	ds = Mem0[ss:sp:selector]
	sp = sp + 2<i16>
	dx_ax = CONVERT(ax, int16, int32)
	ax = ax + 1<16>
	SZO = cond(ax)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = cx - 1<16>
	SZO = cond(cx)
	v189 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v189
	SCZO = cond(v189)
	v190 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v190
	SCZO = cond(v190)
	v191 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v191
	SCZO = cond(v191)
	v192 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v192
	SCZO = cond(v192)
	v193 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v193
	SCZO = cond(v193)
	v194 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v194
	SCZO = cond(v194)
	v195 = Mem0[ds:bx + 75<i16> + di:byte] + cl
	Mem0[ds:bx + 75<i16> + di:byte] = v195
	SCZO = cond(v195)
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v196 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v196
	SCZO = cond(v196)
	v197 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v197
	SCZO = cond(v197)
	v198 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v198
	SCZO = cond(v198)
	v199 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v199
	SCZO = cond(v199)
	v200 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v200
	SCZO = cond(v200)
	v201 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v201
	SCZO = cond(v201)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	si = si - 1<16>
	SZO = cond(si)
	dx = dx + 1<16>
	SZO = cond(dx)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bx = bx + 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	v202 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v202
	SCZO = cond(v202)
	v203 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v203
	SCZO = cond(v203)
	Mem0[ds:di:byte] = 0x53<8>
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp + 1<16>
	SZO = cond(sp)
	di = di + 1<16>
	SZO = cond(di)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v204 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v204
	SCZO = cond(v204)
	v205 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v205
	SCZO = cond(v205)
	v206 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v206
	SCZO = cond(v206)
	v207 = Mem0[ds:si + 69<i16>:byte] + cl
	Mem0[ds:si + 69<i16>:byte] = v207
	SCZO = cond(v207)
	sp = sp + 1<16>
	SZO = cond(sp)
	di = di + 1<16>
	SZO = cond(di)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 1<16>
	SZO = cond(sp)
	di = di - 1<16>
	SZO = cond(di)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v208 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v208
	SCZO = cond(v208)
	v209 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v209
	SCZO = cond(v209)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = SCZDOP
	al = al | 0x4C<8>
	SZ = cond(al)
	O = false
	C = false
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp + 1<16>
	SZO = cond(sp)
	bx = bx - 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v211 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v211
	SCZO = cond(v211)
	v212 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v212
	SCZO = cond(v212)
	v213 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v213
	SCZO = cond(v213)
	v214 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v214
	SCZO = cond(v214)
	v215 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v215
	SCZO = cond(v215)
	sp = sp - 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v216 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v216
	cx = cx + 1<16>
	SZO = cond(cx)
	v217 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v217
	SCZO = cond(v217)
	v218 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v218
	SCZO = cond(v218)
	v219 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v219
	SCZO = cond(v219)
	v220 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v220
	SCZO = cond(v220)
	v221 = Mem0[ds:si + 70<i16>:byte] + cl
	Mem0[ds:si + 70<i16>:byte] = v221
	SCZO = cond(v221)
	cx = cx - 1<16>
	SZO = cond(cx)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp + 1<16>
	SZO = cond(sp)
	v222 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v222
	SCZO = cond(v222)
	v223 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v223
	SCZO = cond(v223)
	v224 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v224
	SCZO = cond(v224)
	v225 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v225
	SCZO = cond(v225)
	v226 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v226
	SCZO = cond(v226)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	di = di - 1<16>
	SZO = cond(di)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v227 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v227
	cx = cx + 1<16>
	SZO = cond(cx)
	v228 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v228
	SCZO = cond(v228)
	v229 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v229
	SCZO = cond(v229)
	v230 = Mem0[ds:bx + 0x4C0C<16> + di:byte] + bh
	Mem0[ds:bx + 0x4C0C<16> + di:byte] = v230
	SCZO = cond(v230)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp + 1<16>
	SZO = cond(sp)
	di = di + 1<16>
	SZO = cond(di)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v231 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v231
	di = di - 1<16>
	SZO = cond(di)
	v232 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v232
	cx = cx + 1<16>
	SZO = cond(cx)
	v233 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v233
	SCZO = cond(v233)
	v234 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v234
	SCZO = cond(v234)
	ax = ax | 0x4C4C<16>
	SZ = cond(ax)
	O = false
	C = false
	di = di - 1<16>
	SZO = cond(di)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	si = si + 1<16>
	SZO = cond(si)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	si = si - 1<16>
	SZO = cond(si)
	bx = bx + 1<16>
	SZO = cond(bx)
	v235 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v235
	SCZO = cond(v235)
	v236 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v236
	SCZO = cond(v236)
	dl = dl + cl
	SCZO = cond(dl)
	al = al | 0x4C<8>
	SZ = cond(al)
	O = false
	C = false
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = di
	v237 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v237
	SCZO = cond(v237)
	v238 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v238
	SCZO = cond(v238)
	v239 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v239
	SCZO = cond(v239)
	v240 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v240
	SCZO = cond(v240)
	v241 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v241
	SCZO = cond(v241)
	v242 = Mem0[ds:si + 69<i16>:byte] + cl
	Mem0[ds:si + 69<i16>:byte] = v242
	SCZO = cond(v242)
	sp = sp + 1<16>
	SZO = cond(sp)
	di = di + 1<16>
	SZO = cond(di)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	cx = cx + 1<16>
	SZO = cond(cx)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	bp = bp - 1<16>
	SZO = cond(bp)
	v243 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v243
	SCZO = cond(v243)
	v244 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v244
	SCZO = cond(v244)
	Mem0[ds:si:int64] = CONVERT(trunc(ST[Top:real64]), real64, int64)
	Top = Top + 1<i8>
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	cx = cx - 1<16>
	SZO = cond(cx)
	v245 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v245
	sp = sp - 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp + 1<16>
	SZO = cond(sp)
	di = di + 1<16>
	SZO = cond(di)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v246 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v246
	SCZO = cond(v246)
	v247 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v247
	SCZO = cond(v247)
	v248 = Mem0[ds:di:word16] | cx
	Mem0[ds:di:word16] = v248
	SZ = cond(Mem0[ds:di:word16])
	O = false
	C = false
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	cx = cx + 1<16>
	SZO = cond(cx)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v249 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v249
	cx = cx + 1<16>
	SZO = cond(cx)
	v250 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v250
	SCZO = cond(v250)
	v251 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v251
	SCZO = cond(v251)
	v252 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v252
	SCZO = cond(v252)
	bh = bh + ah
	SCZO = cond(bh)
	al = al | 0x4D<8>
	SZ = cond(al)
	O = false
	C = false
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v254 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v254
	SCZO = cond(v254)
	v255 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v255
	SCZO = cond(v255)
	v256 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v256
	SCZO = cond(v256)
	v257 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v257
	SCZO = cond(v257)
	v258 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v258
	SCZO = cond(v258)
	v259 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v259
	SCZO = cond(v259)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v260 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v260
	SCZO = cond(v260)
	v261 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v261
	SCZO = cond(v261)
	v262 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v262
	SCZO = cond(v262)
	v263 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v263
	SCZO = cond(v263)
	v264 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v264
	SCZO = cond(v264)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	dx = dx + 1<16>
	SZO = cond(dx)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v265 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v265
	cx = cx + 1<16>
	SZO = cond(cx)
	v266 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v266
	SCZO = cond(v266)
	v267 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v267
	SCZO = cond(v267)
	v268 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v268
	SCZO = cond(v268)
	v269 = Mem0[ss:bp + 13<i16>:byte] + dl
	Mem0[ss:bp + 13<i16>:byte] = v269
	SCZO = cond(v269)
	sp = sp - 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp + 1<16>
	SZO = cond(sp)
	di = di + 1<16>
	SZO = cond(di)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	si = si + 1<16>
	SZO = cond(si)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	si = si - 1<16>
	SZO = cond(si)
	bx = bx + 1<16>
	SZO = cond(bx)
	v270 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v270
	SCZO = cond(v270)
	v271 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v271
	SCZO = cond(v271)
	v272 = di
	di = ax
	ax = v272
	ax = ax | 0x524C<16>
	SZ = cond(ax)
	O = false
	C = false
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = di
	v273 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v273
	SCZO = cond(v273)
	v274 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v274
	SCZO = cond(v274)
	v275 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v275
	SCZO = cond(v275)
	v276 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v276
	SCZO = cond(v276)
	v277 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v277
	SCZO = cond(v277)
	v278 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v278
	SCZO = cond(v278)
	sp = sp - 1<16>
	SZO = cond(sp)
	bx = bx - 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v279 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v279
	SCZO = cond(v279)
	v280 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v280
	SCZO = cond(v280)
	v281 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v281
	SCZO = cond(v281)
	v282 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v282
	SCZO = cond(v282)
	v283 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v283
	SCZO = cond(v283)
	v284 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v284
	SCZO = cond(v284)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v285 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v285
	SCZO = cond(v285)
	v286 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v286
	SCZO = cond(v286)
	v287 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v287
	SCZO = cond(v287)
	v288 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v288
	SCZO = cond(v288)
	v289 = Mem0[ds:bx + 82<i16> + si:byte] + dl
	Mem0[ds:bx + 82<i16> + si:byte] = v289
	SCZO = cond(v289)
	si = si - 1<16>
	SZO = cond(si)
	di = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	di = di - 1<16>
	SZO = cond(di)
	si = si - 1<16>
	SZO = cond(si)
	v290 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v290
	SCZO = cond(v290)
	v291 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v291
	SCZO = cond(v291)
	v292 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v292
	SCZO = cond(v292)
	v293 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v293
	SCZO = cond(v293)
	di = di - 1<16>
	SZO = cond(di)
	branch Test(GE,SO) l3CEE_EB73
	// succ:  l3CEE_EB6F_1 l3CEE_EB73
l3CEE_EB6F_1:
	ax = Mem0[ds:di + 68<i16>:word16]
	// succ:  l3CEE_EB73
l3CEE_EB73:
	di = di + 1<16>
	SZO = cond(di)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	si = si - 1<16>
	SZO = cond(si)
	v295 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v295
	SCZO = cond(v295)
	v296 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v296
	SCZO = cond(v296)
	v297 = Mem0[ds:si:byte] + bh
	Mem0[ds:si:byte] = v297
	SCZO = cond(v297)
	al = al + 0x50<8> + C
	SCZO = cond(al)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	si = si - 1<16>
	SZO = cond(si)
	di = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	di = di - 1<16>
	SZO = cond(di)
	si = si + 1<16>
	SZO = cond(si)
	si = si + 1<16>
	SZO = cond(si)
	v298 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v298
	SCZO = cond(v298)
	v299 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v299
	SCZO = cond(v299)
	v300 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v300
	SCZO = cond(v300)
	v301 = Mem0[ss:bp + 15<i16> + di:byte] + dl
	Mem0[ss:bp + 15<i16> + di:byte] = v301
	SCZO = cond(v301)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	cx = cx + 1<16>
	SZO = cond(cx)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v302 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v302
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v303 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v303
	SCZO = cond(v303)
	v304 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v304
	SCZO = cond(v304)
	v305 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v305
	SCZO = cond(v305)
	cx = cx + Mem0[ds:0x5045<16>:word16] + C
	SCZO = cond(cx)
	cx = cx + 1<16>
	SZO = cond(cx)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v306 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v306
	SCZO = cond(v306)
	v307 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v307
	SCZO = cond(v307)
	v308 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v308
	SCZO = cond(v308)
	v309 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v309
	SCZO = cond(v309)
	v310 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v310
	SCZO = cond(v310)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v311 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v311
	SCZO = cond(v311)
	v312 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v312
	SCZO = cond(v312)
	v313 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v313
	SCZO = cond(v313)
	v314 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v314
	SCZO = cond(v314)
	v315 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v315
	SCZO = cond(v315)
	v316 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v316
	SCZO = cond(v316)
	v317 = Mem0[ds:di + 82<i16>:byte] + al
	Mem0[ds:di + 82<i16>:byte] = v317
	SCZO = cond(v317)
	bp = bp + 1<16>
	SZO = cond(bp)
	// succ:  l3CEE_EBC2_thunk_fn3CEE_EBC3
l3CEE_EBC2_thunk_fn3CEE_EBC3:
	call fn3CEE_EBC3 (retsize: 0;)
	return
	// succ:  fn3CEE_E81B_exit
fn3CEE_E81B_exit:


// fn3CEE_EBC3
// Return size: 0
define fn3CEE_EBC3
fn3CEE_EBC3_entry:
	sp = fp
	Top = 0<i8>
	// succ:  l3CEE_EBC3
l3CEE_EBC3:
	bx = bx - 1<16>
	SZO = cond(bx)
	v9 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v9
	SCZO = cond(v9)
	v11 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v11
	SCZO = cond(v11)
	v12 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v12
	SCZO = cond(v12)
	v13 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v13
	SCZO = cond(v13)
	v14 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v14
	SCZO = cond(v14)
	v15 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v15
	SCZO = cond(v15)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx - 1<16>
	SZO = cond(bx)
	v20 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v20
	SCZO = cond(v20)
	v21 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v21
	SCZO = cond(v21)
	v22 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v22
	SCZO = cond(v22)
	v23 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v23
	SCZO = cond(v23)
	v24 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v24
	SCZO = cond(v24)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bx = bx - 1<16>
	SZO = cond(bx)
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 1<16>
	SZO = cond(sp)
	v26 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v26
	SCZO = cond(v26)
	v27 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v27
	SCZO = cond(v27)
	v28 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v28
	SCZO = cond(v28)
	v29 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v29
	SCZO = cond(v29)
	v31 = Mem0[ds:si + 79<i16>:byte] + cl
	Mem0[ds:si + 79<i16>:byte] = v31
	SCZO = cond(v31)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	goto l3CEE_EBF4_thunk_fn3CEE_EBF5
	// succ:  l3CEE_EBF4_thunk_fn3CEE_EBF5
l3CEE_EBC3:
	bx = bx - 1<16>
	SZO = cond(bx)
	v33 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v33
	SCZO = cond(v33)
	v34 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v34
	SCZO = cond(v34)
	v35 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v35
	SCZO = cond(v35)
	v36 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v36
	SCZO = cond(v36)
	v37 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v37
	SCZO = cond(v37)
	v38 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v38
	SCZO = cond(v38)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx - 1<16>
	SZO = cond(bx)
	v39 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v39
	SCZO = cond(v39)
	v40 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v40
	SCZO = cond(v40)
	v41 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v41
	SCZO = cond(v41)
	v42 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v42
	SCZO = cond(v42)
	v43 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v43
	SCZO = cond(v43)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bx = bx - 1<16>
	SZO = cond(bx)
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 1<16>
	SZO = cond(sp)
	v44 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v44
	SCZO = cond(v44)
	v45 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v45
	SCZO = cond(v45)
	v46 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v46
	SCZO = cond(v46)
	v47 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v47
	SCZO = cond(v47)
	v48 = Mem0[ds:si + 79<i16>:byte] + cl
	Mem0[ds:si + 79<i16>:byte] = v48
	SCZO = cond(v48)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx - 1<16>
	SZO = cond(bx)
	v49 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v49
	SCZO = cond(v49)
	v50 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v50
	SCZO = cond(v50)
	v51 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v51
	SCZO = cond(v51)
	v52 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v52
	SCZO = cond(v52)
	v53 = Mem0[ds:bx + 75<i16>:byte] + cl
	Mem0[ds:bx + 75<i16>:byte] = v53
	SCZO = cond(v53)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bx = bx + 1<16>
	SZO = cond(bx)
	bx = bx - 1<16>
	SZO = cond(bx)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v54 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v54
	SCZO = cond(v54)
	v55 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v55
	SCZO = cond(v55)
	v56 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v56
	SCZO = cond(v56)
	v57 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v57
	SCZO = cond(v57)
	__out<word16>(dx, ax)
	si = si + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = cs
	di = di - 1<16>
	SZO = cond(di)
	bx = bx - 1<16>
	SZO = cond(bx)
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v60 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v60
	v61 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v61
	SCZO = cond(v61)
	v62 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v62
	SCZO = cond(v62)
	v63 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v63
	SCZO = cond(v63)
	v65 = Mem0[ds:bx + 14<i16> + di:byte] + ch
	Mem0[ds:bx + 14<i16> + di:byte] = v65
	SCZO = cond(v65)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	si = si - 1<16>
	SZO = cond(si)
	dx = dx + 1<16>
	SZO = cond(dx)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v66 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v66
	SCZO = cond(v66)
	v67 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v67
	SCZO = cond(v67)
	branch Test(PO,P) l3CEE_EC3E
	goto l3CEE_EC2E_thunk_fn3CEE_EC30
	// succ:  l3CEE_EC2E_thunk_fn3CEE_EC30 l3CEE_EC2E_thunk_fn3CEE_EC3E
l3CEE_EBF4_thunk_fn3CEE_EBF5:
	call fn3CEE_EBF5 (retsize: 0;)
	return
	// succ:  fn3CEE_EBC3_exit
l3CEE_EC2E_thunk_fn3CEE_EC30:
	call fn3CEE_EC30 (retsize: 0;)
	return
	// succ:  fn3CEE_EBC3_exit
l3CEE_EC2E_thunk_fn3CEE_EC3E:
	call fn3CEE_EC3E (retsize: 0;)
	return
	// succ:  fn3CEE_EBC3_exit
fn3CEE_EBC3_exit:


// fn3CEE_EBF5
// Return size: 0
define fn3CEE_EBF5
fn3CEE_EBF5_entry:
	sp = fp
	Top = 0<i8>
	// succ:  l3CEE_EBF5
l3CEE_EBF5:
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx - 1<16>
	SZO = cond(bx)
	v11 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v11
	SCZO = cond(v11)
	v13 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v13
	SCZO = cond(v13)
	v14 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v14
	SCZO = cond(v14)
	v15 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v15
	SCZO = cond(v15)
	v17 = Mem0[ds:bx + 75<i16>:byte] + cl
	Mem0[ds:bx + 75<i16>:byte] = v17
	SCZO = cond(v17)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bx = bx + 1<16>
	SZO = cond(bx)
	bx = bx - 1<16>
	SZO = cond(bx)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v21 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v21
	SCZO = cond(v21)
	v22 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v22
	SCZO = cond(v22)
	v23 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v23
	SCZO = cond(v23)
	v24 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v24
	SCZO = cond(v24)
	__out<word16>(dx, ax)
	si = si + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = cs
	di = di - 1<16>
	SZO = cond(di)
	bx = bx - 1<16>
	SZO = cond(bx)
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v28 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v28
	v29 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v29
	SCZO = cond(v29)
	v30 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v30
	SCZO = cond(v30)
	v31 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v31
	SCZO = cond(v31)
	v33 = Mem0[ds:bx + 14<i16> + di:byte] + ch
	Mem0[ds:bx + 14<i16> + di:byte] = v33
	SCZO = cond(v33)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	si = si - 1<16>
	SZO = cond(si)
	dx = dx + 1<16>
	SZO = cond(dx)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v34 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v34
	SCZO = cond(v34)
	v35 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v35
	SCZO = cond(v35)
	branch Test(PO,P) l3CEE_EC2E_thunk_fn3CEE_EC3E
	// succ:  l3CEE_EC2E_thunk_fn3CEE_EC30 l3CEE_EC2E_thunk_fn3CEE_EC3E
l3CEE_EC2E_thunk_fn3CEE_EC30:
	call fn3CEE_EC30 (retsize: 0;)
	return
	// succ:  fn3CEE_EBF5_exit
l3CEE_EC2E_thunk_fn3CEE_EC3E:
	call fn3CEE_EC3E (retsize: 0;)
	return
	// succ:  fn3CEE_EBF5_exit
fn3CEE_EBF5_exit:


// fn3CEE_EC30
// Return size: 0
define fn3CEE_EC30
fn3CEE_EC30_entry:
	sp = fp
	Top = 0<i8>
	goto l3CEE_EC30_thunk_fn3CEE_EBC3
	// succ:  l3CEE_EC30_thunk_fn3CEE_EBC3
l3CEE_EC30:
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v10 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v10
	SCZO = cond(v10)
	v12 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v12
	SCZO = cond(v12)
	v13 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v13
	SCZO = cond(v13)
	v14 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v14
	SCZO = cond(v14)
	v15 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v15
	SCZO = cond(v15)
	v16 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v16
	SCZO = cond(v16)
	goto l3CEE_EC3C_thunk_fn3CEE_EC3E
	// succ:  l3CEE_EC3C_thunk_fn3CEE_EC3E
l3CEE_EC30_thunk_fn3CEE_EBC3:
	call fn3CEE_EBC3 (retsize: 0;)
	return
	// succ:  fn3CEE_EC30_exit
l3CEE_EC3C_thunk_fn3CEE_EC3E:
	call fn3CEE_EC3E (retsize: 0;)
	return
	// succ:  fn3CEE_EC30_exit
fn3CEE_EC30_exit:


// fn3CEE_EC3E
// Return size: 0
define fn3CEE_EC3E
fn3CEE_EC3E_entry:
	sp = fp
	Top = 0<i8>
	// succ:  l3CEE_EC3E
l3CEE_EC3E:
	v9 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v9
	SCZO = cond(v9)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	v13 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v13
	SCZO = cond(v13)
	v14 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v14
	SCZO = cond(v14)
	v15 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v15
	SCZO = cond(v15)
	v16 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v16
	SCZO = cond(v16)
	v17 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v17
	SCZO = cond(v17)
	v18 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v18
	SCZO = cond(v18)
	v19 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v19
	SCZO = cond(v19)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	di = di - 1<16>
	SZO = cond(di)
	v24 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v24
	SCZO = cond(v24)
	v25 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v25
	SCZO = cond(v25)
	v26 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v26
	SCZO = cond(v26)
	v27 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v27
	SCZO = cond(v27)
	v28 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v28
	SCZO = cond(v28)
	v29 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v29
	SCZO = cond(v29)
	v31 = Mem0[ss:bp + 85<i16> + si:byte] + bl
	Mem0[ss:bp + 85<i16> + si:byte] = v31
	SCZO = cond(v31)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	si = si - 1<16>
	SZO = cond(si)
	cx = cx + 1<16>
	SZO = cond(cx)
	bp = bp - 1<16>
	SZO = cond(bp)
	bp = bp + 1<16>
	SZO = cond(bp)
	v33 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v33
	SCZO = cond(v33)
	v34 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v34
	SCZO = cond(v34)
	v35 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v35
	SCZO = cond(v35)
	v36 = Mem0[ds:di + 78<i16>:byte] + al
	Mem0[ds:di + 78<i16>:byte] = v36
	SCZO = cond(v36)
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v37 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v37
	v38 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v38
	SCZO = cond(v38)
	v39 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v39
	SCZO = cond(v39)
	v40 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v40
	SCZO = cond(v40)
	al = al + bl
	SCZO = cond(al)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = cs
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v42 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v42
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v43 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v43
	SCZO = cond(v43)
	v44 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v44
	SCZO = cond(v44)
	v45 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v45
	SCZO = cond(v45)
	v46 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v46
	SCZO = cond(v46)
	v47 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v47
	SCZO = cond(v47)
	v49 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v49
	SCZO = cond(v49)
	sp = sp - 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si - 1<16>
	SZO = cond(si)
	v50 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v50
	SCZO = cond(v50)
	v51 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v51
	SCZO = cond(v51)
	v52 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v52
	SCZO = cond(v52)
	v53 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v53
	SCZO = cond(v53)
	v54 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v54
	SCZO = cond(v54)
	v55 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v55
	SCZO = cond(v55)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v56 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v56
	SCZO = cond(v56)
	v57 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v57
	SCZO = cond(v57)
	v58 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v58
	SCZO = cond(v58)
	v59 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v59
	SCZO = cond(v59)
	v60 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v60
	SCZO = cond(v60)
	v61 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v61
	SCZO = cond(v61)
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v62 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v62
	v63 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v63
	SCZO = cond(v63)
	v64 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v64
	SCZO = cond(v64)
	v65 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v65
	SCZO = cond(v65)
	v66 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v66
	SCZO = cond(v66)
	v67 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v67
	SCZO = cond(v67)
	bx = bx + 1<16>
	SZO = cond(bx)
	ax = ax - 1<16>
	SZO = cond(ax)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v68 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v68
	SCZO = cond(v68)
	v69 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v69
	SCZO = cond(v69)
	v70 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v70
	SCZO = cond(v70)
	v71 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v71
	SCZO = cond(v71)
	v72 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v72
	SCZO = cond(v72)
	di = di + 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp + 1<16>
	SZO = cond(sp)
	v73 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v73
	SCZO = cond(v73)
	v74 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v74
	SCZO = cond(v74)
	v75 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v75
	SCZO = cond(v75)
	v76 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v76
	SCZO = cond(v76)
	v77 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v77
	SCZO = cond(v77)
	di = di + 1<16>
	SZO = cond(di)
	ax = ax - 1<16>
	SZO = cond(ax)
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	di = di + 1<16>
	SZO = cond(di)
	v78 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v78
	SCZO = cond(v78)
	v79 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v79
	SCZO = cond(v79)
	v80 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v80
	SCZO = cond(v80)
	v81 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v81
	SCZO = cond(v81)
	di = di + 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bp = bp + 1<16>
	SZO = cond(bp)
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx - 1<16>
	SZO = cond(bx)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v82 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v82
	cx = cx + 1<16>
	SZO = cond(cx)
	v83 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v83
	SCZO = cond(v83)
	v84 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v84
	SCZO = cond(v84)
	v85 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v85
	SCZO = cond(v85)
	v86 = Mem0[ds:bx + 86<i16>:byte] + al
	Mem0[ds:bx + 86<i16>:byte] = v86
	SCZO = cond(v86)
	cx = cx - 1<16>
	SZO = cond(cx)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = di
	di = di - 1<16>
	SZO = cond(di)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v87 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v87
	SCZO = cond(v87)
	v88 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v88
	SCZO = cond(v88)
	v89 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v89
	SCZO = cond(v89)
	v90 = Mem0[ss:bp + 76<i16>:byte] + al
	Mem0[ss:bp + 76<i16>:byte] = v90
	SCZO = cond(v90)
	sp = sp + 1<16>
	SZO = cond(sp)
	v91 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v91
	SCZO = cond(v91)
	v92 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v92
	SCZO = cond(v92)
	v93 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v93
	SCZO = cond(v93)
	v94 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v94
	SCZO = cond(v94)
	v95 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v95
	SCZO = cond(v95)
	v96 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v96
	SCZO = cond(v96)
	v97 = Mem0[ss:bp + 95<i16> + si:byte] + al
	Mem0[ss:bp + 95<i16> + si:byte] = v97
	SCZO = cond(v97)
	di = di + 1<16>
	SZO = cond(di)
	v98 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v98
	SCZO = cond(v98)
	v99 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v99
	SCZO = cond(v99)
	v100 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v100
	SCZO = cond(v100)
	v101 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v101
	SCZO = cond(v101)
	v102 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v102
	SCZO = cond(v102)
	v103 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v103
	SCZO = cond(v103)
	v104 = Mem0[ss:bp + 95<i16> + si:byte] + al
	Mem0[ss:bp + 95<i16> + si:byte] = v104
	SCZO = cond(v104)
	sp = sp - 1<16>
	SZO = cond(sp)
	v105 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v105
	SCZO = cond(v105)
	v106 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v106
	SCZO = cond(v106)
	v107 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v107
	SCZO = cond(v107)
	v108 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v108
	SCZO = cond(v108)
	v109 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v109
	SCZO = cond(v109)
	v110 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v110
	SCZO = cond(v110)
	v111 = Mem0[ds:bx + 95<i16> + di:byte] + cl
	Mem0[ds:bx + 95<i16> + di:byte] = v111
	SCZO = cond(v111)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	v112 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v112
	SCZO = cond(v112)
	v113 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v113
	SCZO = cond(v113)
	v114 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v114
	SCZO = cond(v114)
	v115 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v115
	SCZO = cond(v115)
	v116 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v116
	SCZO = cond(v116)
	v117 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v117
	SCZO = cond(v117)
	v119 = Mem0[ss:bp + 78<i16> + si:byte] + dl
	Mem0[ss:bp + 78<i16> + si:byte] = v119
	SCZO = cond(v119)
	v120 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v120
	SCZO = cond(v120)
	v121 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v121
	SCZO = cond(v121)
	v122 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v122
	SCZO = cond(v122)
	v123 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v123
	SCZO = cond(v123)
	v124 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v124
	SCZO = cond(v124)
	v125 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v125
	SCZO = cond(v125)
	v126 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v126
	SCZO = cond(v126)
	sp = sp - 1<16>
	SZO = cond(sp)
	v127 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v127
	SCZO = cond(v127)
	v128 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v128
	SCZO = cond(v128)
	v129 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v129
	SCZO = cond(v129)
	v130 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v130
	SCZO = cond(v130)
	v131 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v131
	SCZO = cond(v131)
	v132 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v132
	SCZO = cond(v132)
	v133 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v133
	SCZO = cond(v133)
	v134 = Mem0[ss:bp + si:byte] + dl
	Mem0[ss:bp + si:byte] = v134
	SCZO = cond(v134)
	v135 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v135
	SCZO = cond(v135)
	v136 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v136
	SCZO = cond(v136)
	v137 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v137
	SCZO = cond(v137)
	v138 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v138
	SCZO = cond(v138)
	v139 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v139
	SCZO = cond(v139)
	v140 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v140
	SCZO = cond(v140)
	v141 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v141
	SCZO = cond(v141)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v142 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v142
	SCZO = cond(v142)
	v143 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v143
	SCZO = cond(v143)
	v144 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v144
	SCZO = cond(v144)
	v145 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v145
	SCZO = cond(v145)
	v146 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v146
	SCZO = cond(v146)
	v147 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v147
	SCZO = cond(v147)
	v148 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v148
	SCZO = cond(v148)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = di
	v149 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v149
	SCZO = cond(v149)
	v150 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v150
	SCZO = cond(v150)
	v151 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v151
	SCZO = cond(v151)
	v152 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v152
	SCZO = cond(v152)
	v153 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v153
	SCZO = cond(v153)
	v154 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v154
	SCZO = cond(v154)
	v155 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v155
	SCZO = cond(v155)
	sp = sp - 1<16>
	SZO = cond(sp)
	al = al ^ Mem0[ds:bx + si:byte]
	SZ = cond(al)
	O = false
	C = false
	v159 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v159
	SCZO = cond(v159)
	v160 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v160
	SCZO = cond(v160)
	v161 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v161
	SCZO = cond(v161)
	v162 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v162
	SCZO = cond(v162)
	v163 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v163
	SCZO = cond(v163)
	v164 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v164
	SCZO = cond(v164)
	v165 = Mem0[ds:bx + 87<i16> + di:byte] + dl
	Mem0[ds:bx + 87<i16> + di:byte] = v165
	SCZO = cond(v165)
	v166 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v166
	SCZO = cond(v166)
	v167 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v167
	SCZO = cond(v167)
	v168 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v168
	SCZO = cond(v168)
	v169 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v169
	SCZO = cond(v169)
	v170 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v170
	SCZO = cond(v170)
	v171 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v171
	SCZO = cond(v171)
	v172 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v172
	SCZO = cond(v172)
	dx = dx + 1<16>
	SZO = cond(dx)
	sp = sp - 1<16>
	SZO = cond(sp)
	v173 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v173
	SCZO = cond(v173)
	v174 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v174
	SCZO = cond(v174)
	v175 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v175
	SCZO = cond(v175)
	v176 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v176
	SCZO = cond(v176)
	v177 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v177
	SCZO = cond(v177)
	v178 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v178
	SCZO = cond(v178)
	v179 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v179
	SCZO = cond(v179)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = cx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = di
	al = al ^ Mem0[ds:bx + si:byte]
	SZ = cond(al)
	O = false
	C = false
	v180 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v180
	SCZO = cond(v180)
	v181 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v181
	SCZO = cond(v181)
	v182 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v182
	SCZO = cond(v182)
	v183 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v183
	SCZO = cond(v183)
	v184 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v184
	SCZO = cond(v184)
	v185 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v185
	SCZO = cond(v185)
	di = di + 1<16>
	SZO = cond(di)
	bp = bp + 1<16>
	SZO = cond(bp)
	v186 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v186
	di = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	si = si + 1<16>
	SZO = cond(si)
	si = si - 1<16>
	SZO = cond(si)
	bx = bx + 1<16>
	SZO = cond(bx)
	v187 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v187
	SCZO = cond(v187)
	v188 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v188
	SCZO = cond(v188)
	v189 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v189
	SCZO = cond(v189)
	v190 = Mem0[ds:0x500F<16>:byte] + bl
	Mem0[ds:0x500F<16>:byte] = v190
	SCZO = cond(v190)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	si = si - 1<16>
	SZO = cond(si)
	di = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	cx = cx - 1<16>
	SZO = cond(cx)
	v191 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v191
	v192 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v192
	SCZO = cond(v192)
	v193 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v193
	SCZO = cond(v193)
	v194 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v194
	SCZO = cond(v194)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = di
	v196 = __movmskps<word128>(xmm2)
	edx = SEQ(SLICE(edx, word24, 8), v196)
	sp = sp - 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si - 1<16>
	SZO = cond(si)
	di = di + 1<16>
	SZO = cond(di)
	v198 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v198
	ax = ax - 1<16>
	SZO = cond(ax)
	v199 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v199
	SCZO = cond(v199)
	v200 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v200
	SCZO = cond(v200)
	v201 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v201
	SCZO = cond(v201)
	v202 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v202
	SCZO = cond(v202)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	cx = cx + 1<16>
	SZO = cond(cx)
	di = di + 1<16>
	SZO = cond(di)
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si - 1<16>
	SZO = cond(si)
	di = di - 1<16>
	SZO = cond(di)
	v203 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v203
	SCZO = cond(v203)
	v204 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v204
	SCZO = cond(v204)
	v205 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v205
	SCZO = cond(v205)
	v206 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v206
	SCZO = cond(v206)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	si = si + 1<16>
	SZO = cond(si)
	di = di - 1<16>
	SZO = cond(di)
	di = di - 1<16>
	SZO = cond(di)
	v207 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v207
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v208 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v208
	SCZO = cond(v208)
	v209 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v209
	SCZO = cond(v209)
	v210 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v210
	SCZO = cond(v210)
	v211 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v211
	SCZO = cond(v211)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bp = bp + 1<16>
	SZO = cond(bp)
	v212 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v212
	SCZO = cond(v212)
	v213 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v213
	SCZO = cond(v213)
	v214 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v214
	SCZO = cond(v214)
	v215 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v215
	SCZO = cond(v215)
	v216 = Mem0[ds:bx + 82<i16> + si:byte] + dl
	Mem0[ds:bx + 82<i16> + si:byte] = v216
	SCZO = cond(v216)
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si - 1<16>
	SZO = cond(si)
	di = di - 1<16>
	SZO = cond(di)
	v217 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v217
	SCZO = cond(v217)
	v218 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v218
	SCZO = cond(v218)
	v219 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v219
	SCZO = cond(v219)
	v220 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v220
	SCZO = cond(v220)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	v221 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v221
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	v222 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v222
	v223 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v223
	SCZO = cond(v223)
	v224 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v224
	SCZO = cond(v224)
	v225 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v225
	SCZO = cond(v225)
	v226 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v226
	SCZO = cond(v226)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	cx = cx + 1<16>
	SZO = cond(cx)
	di = di + 1<16>
	SZO = cond(di)
	bp = bp + 1<16>
	SZO = cond(bp)
	dx = dx + 1<16>
	SZO = cond(dx)
	bp = bp + 1<16>
	SZO = cond(bp)
	di = di + 1<16>
	SZO = cond(di)
	v227 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v227
	SCZO = cond(v227)
	v228 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v228
	SCZO = cond(v228)
	v229 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v229
	SCZO = cond(v229)
	v230 = Mem0[ss:bp + 69<i16> + si:byte] + dl
	Mem0[ss:bp + 69<i16> + si:byte] = v230
	SCZO = cond(v230)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	ax = ax - 1<16>
	SZO = cond(ax)
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp + 1<16>
	SZO = cond(sp)
	v231 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v231
	SCZO = cond(v231)
	v232 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v232
	SCZO = cond(v232)
	v233 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v233
	SCZO = cond(v233)
	v234 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v234
	SCZO = cond(v234)
	v235 = Mem0[ss:bp + 69<i16> + si:byte] + dl
	Mem0[ss:bp + 69<i16> + si:byte] = v235
	SCZO = cond(v235)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	si = si + 1<16>
	SZO = cond(si)
	di = di - 1<16>
	SZO = cond(di)
	di = di - 1<16>
	SZO = cond(di)
	v236 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v236
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v237 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v237
	SCZO = cond(v237)
	v238 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v238
	SCZO = cond(v238)
	v239 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v239
	SCZO = cond(v239)
	v240 = Mem0[ds:bx + 83<i16> + di:byte] + cl
	Mem0[ds:bx + 83<i16> + di:byte] = v240
	SCZO = cond(v240)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v241 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v241
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v242 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v242
	SCZO = cond(v242)
	v243 = Mem0[ds:bx + di:byte] + al
	Mem0[ds:bx + di:byte] = v243
	SCZO = cond(v243)
	v245 = Mem0[ds:si + 0x5048<16>:byte] + ah
	Mem0[ds:si + 0x5048<16>:byte] = v245
	SCZO = cond(v245)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v246 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v246
	di = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	di = di - 1<16>
	SZO = cond(di)
	v247 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v247
	SCZO = cond(v247)
	v248 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v248
	SCZO = cond(v248)
	Mem0[ds:0x500F<16>:byte] = al
	cx = cx + 1<16>
	SZO = cond(cx)
	di = di + 1<16>
	SZO = cond(di)
	bp = bp + 1<16>
	SZO = cond(bp)
	di = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v249 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v249
	SCZO = cond(v249)
	v250 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v250
	SCZO = cond(v250)
	v251 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v251
	SCZO = cond(v251)
	cx = bx
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bp = bp + 1<16>
	SZO = cond(bp)
	v252 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v252
	SCZO = cond(v252)
	v253 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v253
	SCZO = cond(v253)
	v254 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v254
	SCZO = cond(v254)
	v255 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v255
	SCZO = cond(v255)
	v256 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v256
	SCZO = cond(v256)
	v257 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v257
	SCZO = cond(v257)
	bx = bx - 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v258 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v258
	SCZO = cond(v258)
	v259 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v259
	SCZO = cond(v259)
	v260 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v260
	SCZO = cond(v260)
	v261 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v261
	SCZO = cond(v261)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	di = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v262 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v262
	SCZO = cond(v262)
	v263 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v263
	SCZO = cond(v263)
	v264 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v264
	SCZO = cond(v264)
	v265 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v265
	SCZO = cond(v265)
	v266 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v266
	SCZO = cond(v266)
	v267 = Mem0[ss:bp + 69<i16> + si:byte] + dl
	Mem0[ss:bp + 69<i16> + si:byte] = v267
	SCZO = cond(v267)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v268 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v268
	SCZO = cond(v268)
	v269 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v269
	SCZO = cond(v269)
	v270 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v270
	SCZO = cond(v270)
	v271 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v271
	SCZO = cond(v271)
	v272 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v272
	SCZO = cond(v272)
	v273 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v273
	SCZO = cond(v273)
	v274 = Mem0[ds:bx + 72<i16> + si:byte] + dl
	Mem0[ds:bx + 72<i16> + si:byte] = v274
	SCZO = cond(v274)
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp + 1<16>
	SZO = cond(sp)
	v275 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v275
	SCZO = cond(v275)
	v276 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v276
	SCZO = cond(v276)
	v277 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v277
	SCZO = cond(v277)
	v278 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v278
	SCZO = cond(v278)
	dl = dl + cl
	SCZO = cond(dl)
	xmm0 = __xorp<word32[4]>(xmm0, Mem0[ds:si:(arr word32 4)])
	v280 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v280
	SCZO = cond(v280)
	v281 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v281
	SCZO = cond(v281)
	v282 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v282
	SCZO = cond(v282)
	v283 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v283
	SCZO = cond(v283)
	v284 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v284
	SCZO = cond(v284)
	v285 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v285
	SCZO = cond(v285)
	v286 = Mem0[ds:si + 73<i16>:byte] + dl
	Mem0[ds:si + 73<i16>:byte] = v286
	SCZO = cond(v286)
	v287 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v287
	v288 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v288
	SCZO = cond(v288)
	v289 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v289
	SCZO = cond(v289)
	v290 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v290
	SCZO = cond(v290)
	v291 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v291
	SCZO = cond(v291)
	v292 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v292
	SCZO = cond(v292)
	v293 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v293
	SCZO = cond(v293)
	v294 = Mem0[ds:bx + 49<i16>:byte] + bl
	Mem0[ds:bx + 49<i16>:byte] = v294
	SCZO = cond(v294)
	v295 = Mem0[ds:bx + si:byte] ^ al
	Mem0[ds:bx + si:byte] = v295
	SZ = cond(Mem0[ds:bx + si:byte])
	O = false
	C = false
	v296 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v296
	SCZO = cond(v296)
	v297 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v297
	SCZO = cond(v297)
	v298 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v298
	SCZO = cond(v298)
	v299 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v299
	SCZO = cond(v299)
	v300 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v300
	SCZO = cond(v300)
	v301 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v301
	SCZO = cond(v301)
	di = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	di = di - 1<16>
	SZO = cond(di)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v302 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v302
	SCZO = cond(v302)
	v303 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v303
	SCZO = cond(v303)
	v304 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v304
	SCZO = cond(v304)
	v305 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v305
	SCZO = cond(v305)
	v306 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v306
	SCZO = cond(v306)
	di = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si + 1<16>
	SZO = cond(si)
	v307 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v307
	v308 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v308
	SCZO = cond(v308)
	v309 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v309
	SCZO = cond(v309)
	v310 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v310
	SCZO = cond(v310)
	v311 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v311
	SCZO = cond(v311)
	v312 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v312
	SCZO = cond(v312)
	di = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 1<16>
	SZO = cond(sp)
	si = si + 1<16>
	SZO = cond(si)
	dh = dh ^ Mem0[ds:bx + di:byte]
	SZ = cond(dh)
	O = false
	C = false
	v314 = Mem0[ss:bx + si:byte] + al
	Mem0[ss:bx + si:byte] = v314
	SCZO = cond(v314)
	v315 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v315
	SCZO = cond(v315)
	v316 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v316
	SCZO = cond(v316)
	v317 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v317
	SCZO = cond(v317)
	v318 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v318
	SCZO = cond(v318)
	di = di + 1<16>
	SZO = cond(di)
	bp = bp + 1<16>
	SZO = cond(bp)
	v319 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v319
	si = si + 1<16>
	SZO = cond(si)
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	v320 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v320
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v321 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v321
	SCZO = cond(v321)
	v322 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v322
	SCZO = cond(v322)
	bl = bl + bl
	SCZO = cond(bl)
	v323 = Mem0[ds:si + 89<i16>:word128]
	xmm2 = __rsqrtp<real32[4]>(v323)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	bp = bp + 1<16>
	SZO = cond(bp)
	v324 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v324
	SCZO = cond(v324)
	v325 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v325
	SCZO = cond(v325)
	v326 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v326
	SCZO = cond(v326)
	v327 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v327
	SCZO = cond(v327)
	v328 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v328
	SCZO = cond(v328)
	v329 = Mem0[ss:bp + 67<i16> + di:byte] + dl
	Mem0[ss:bp + 67<i16> + di:byte] = v329
	SCZO = cond(v329)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 1<16>
	SZO = cond(sp)
	v330 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v330
	SCZO = cond(v330)
	v331 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v331
	SCZO = cond(v331)
	v332 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v332
	SCZO = cond(v332)
	v333 = Mem0[ss:bp + 68<i16> + si:byte] + dl
	Mem0[ss:bp + 68<i16> + si:byte] = v333
	SCZO = cond(v333)
	cx = cx + 1<16>
	SZO = cond(cx)
	v334 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v334
	bp = bp + 1<16>
	SZO = cond(bp)
	al = al ^ Mem0[ds:bx + si:byte]
	SZ = cond(al)
	O = false
	C = false
	v335 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v335
	SCZO = cond(v335)
	v336 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v336
	SCZO = cond(v336)
	v337 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v337
	SCZO = cond(v337)
	v338 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v338
	SCZO = cond(v338)
	v339 = Mem0[ss:bp + 68<i16> + si:byte] + dl
	Mem0[ss:bp + 68<i16> + si:byte] = v339
	SCZO = cond(v339)
	cx = cx + 1<16>
	SZO = cond(cx)
	v340 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v340
	bp = bp + 1<16>
	SZO = cond(bp)
	v341 = Mem0[ds:bx + si:word16] ^ ax
	Mem0[ds:bx + si:word16] = v341
	SZ = cond(Mem0[ds:bx + si:word16])
	O = false
	C = false
	v342 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v342
	SCZO = cond(v342)
	v343 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v343
	SCZO = cond(v343)
	v344 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v344
	SCZO = cond(v344)
	v345 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v345
	SCZO = cond(v345)
	v346 = Mem0[ss:bp + 82<i16> + si:byte] + dl
	Mem0[ss:bp + 82<i16> + si:byte] = v346
	SCZO = cond(v346)
	v347 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v347
	bx = bx - 1<16>
	SZO = cond(bx)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v348 = Mem0[ds:bx + si:word16] ^ ax
	Mem0[ds:bx + si:word16] = v348
	SZ = cond(Mem0[ds:bx + si:word16])
	O = false
	C = false
	v349 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v349
	SCZO = cond(v349)
	v350 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v350
	SCZO = cond(v350)
	v351 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v351
	SCZO = cond(v351)
	v352 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v352
	SCZO = cond(v352)
	v353 = Mem0[ss:bp + 82<i16> + si:byte] + dl
	Mem0[ss:bp + 82<i16> + si:byte] = v353
	SCZO = cond(v353)
	v354 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v354
	bx = bx - 1<16>
	SZO = cond(bx)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	al = al ^ Mem0[ds:bx + si:byte]
	SZ = cond(al)
	O = false
	C = false
	v355 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v355
	SCZO = cond(v355)
	v356 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v356
	SCZO = cond(v356)
	v357 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v357
	SCZO = cond(v357)
	v358 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v358
	SCZO = cond(v358)
	v359 = Mem0[ss:bp + 82<i16> + si:byte] + dl
	Mem0[ss:bp + 82<i16> + si:byte] = v359
	SCZO = cond(v359)
	v360 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v360
	si = si - 1<16>
	SZO = cond(si)
	di = di - 1<16>
	SZO = cond(di)
	v361 = Mem0[ds:bx + si:word16] ^ ax
	Mem0[ds:bx + si:word16] = v361
	SZ = cond(Mem0[ds:bx + si:word16])
	O = false
	C = false
	v362 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v362
	SCZO = cond(v362)
	v363 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v363
	SCZO = cond(v363)
	v364 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v364
	SCZO = cond(v364)
	v365 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v365
	SCZO = cond(v365)
	v366 = Mem0[ss:bp + 82<i16> + si:byte] + dl
	Mem0[ss:bp + 82<i16> + si:byte] = v366
	SCZO = cond(v366)
	v367 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v367
	si = si - 1<16>
	SZO = cond(si)
	di = di - 1<16>
	SZO = cond(di)
	al = al ^ Mem0[ds:bx + si:byte]
	SZ = cond(al)
	O = false
	C = false
	v368 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v368
	SCZO = cond(v368)
	v369 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v369
	SCZO = cond(v369)
	v370 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v370
	SCZO = cond(v370)
	v371 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v371
	SCZO = cond(v371)
	v372 = Mem0[ss:bp + 78<i16> + si:byte] + dl
	Mem0[ss:bp + 78<i16> + si:byte] = v372
	SCZO = cond(v372)
	cx = cx + 1<16>
	SZO = cond(cx)
	bp = bp - 1<16>
	SZO = cond(bp)
	bp = bp + 1<16>
	SZO = cond(bp)
	v373 = Mem0[ds:bx + si:word16] ^ ax
	Mem0[ds:bx + si:word16] = v373
	SZ = cond(Mem0[ds:bx + si:word16])
	O = false
	C = false
	v374 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v374
	SCZO = cond(v374)
	v375 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v375
	SCZO = cond(v375)
	v376 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v376
	SCZO = cond(v376)
	v377 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v377
	SCZO = cond(v377)
	v378 = Mem0[ss:bp + 78<i16> + si:byte] + dl
	Mem0[ss:bp + 78<i16> + si:byte] = v378
	SCZO = cond(v378)
	cx = cx + 1<16>
	SZO = cond(cx)
	bp = bp - 1<16>
	SZO = cond(bp)
	bp = bp + 1<16>
	SZO = cond(bp)
	al = al ^ Mem0[ds:bx + si:byte]
	SZ = cond(al)
	O = false
	C = false
	v379 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v379
	SCZO = cond(v379)
	v380 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v380
	SCZO = cond(v380)
	v381 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v381
	SCZO = cond(v381)
	v382 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v382
	SCZO = cond(v382)
	v383 = Mem0[ds:bx + 75<i16>:byte] + cl
	Mem0[ds:bx + 75<i16>:byte] = v383
	SCZO = cond(v383)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	v384 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v384
	bp = bp + 1<16>
	SZO = cond(bp)
	v385 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v385
	SCZO = cond(v385)
	v386 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v386
	SCZO = cond(v386)
	v387 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v387
	SCZO = cond(v387)
	v388 = Mem0[ds:bx:byte] + dl
	Mem0[ds:bx:byte] = v388
	SCZO = cond(v388)
	v389 = Mem0[ss:bp + 68<i16> + si:byte] + dl + C
	Mem0[ss:bp + 68<i16> + si:byte] = v389
	SCZO = cond(v389)
	v390 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v390
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp + 1<16>
	SZO = cond(sp)
	v391 = Mem0[ds:bx + si:word16] ^ ax
	Mem0[ds:bx + si:word16] = v391
	SZ = cond(Mem0[ds:bx + si:word16])
	O = false
	C = false
	v392 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v392
	SCZO = cond(v392)
	v393 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v393
	SCZO = cond(v393)
	v394 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v394
	SCZO = cond(v394)
	v395 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v395
	SCZO = cond(v395)
	v396 = Mem0[ss:bp + 68<i16> + si:byte] + dl
	Mem0[ss:bp + 68<i16> + si:byte] = v396
	SCZO = cond(v396)
	v397 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v397
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp + 1<16>
	SZO = cond(sp)
	al = al ^ Mem0[ds:bx + si:byte]
	SZ = cond(al)
	O = false
	C = false
	v398 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v398
	SCZO = cond(v398)
	v399 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v399
	SCZO = cond(v399)
	v400 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v400
	SCZO = cond(v400)
	v401 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v401
	SCZO = cond(v401)
	v402 = Mem0[ss:bp + 75<i16> + si:byte] + dl
	Mem0[ss:bp + 75<i16> + si:byte] = v402
	SCZO = cond(v402)
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v403 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v403
	SCZO = cond(v403)
	v404 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v404
	SCZO = cond(v404)
	v405 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v405
	SCZO = cond(v405)
	v406 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v406
	SCZO = cond(v406)
	v407 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v407
	SCZO = cond(v407)
	v408 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v408
	SCZO = cond(v408)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	dx = dx + 1<16>
	SZO = cond(dx)
	bp = bp + 1<16>
	SZO = cond(bp)
	di = di + 1<16>
	SZO = cond(di)
	v409 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v409
	SCZO = cond(v409)
	v410 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v410
	SCZO = cond(v410)
	v411 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v411
	SCZO = cond(v411)
	v412 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v412
	SCZO = cond(v412)
	v413 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v413
	SCZO = cond(v413)
	v414 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v414
	SCZO = cond(v414)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp + 1<16>
	SZO = cond(sp)
	v415 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v415
	SCZO = cond(v415)
	v416 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v416
	SCZO = cond(v416)
	v417 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v417
	SCZO = cond(v417)
	v418 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v418
	SCZO = cond(v418)
	v419 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v419
	SCZO = cond(v419)
	v420 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v420
	SCZO = cond(v420)
	sp = sp - 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si - 1<16>
	SZO = cond(si)
	v421 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v421
	SCZO = cond(v421)
	v422 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v422
	SCZO = cond(v422)
	v423 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v423
	SCZO = cond(v423)
	v424 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v424
	SCZO = cond(v424)
	v425 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v425
	SCZO = cond(v425)
	v426 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v426
	SCZO = cond(v426)
	v427 = Mem0[ss:bp + 84<i16> + di:byte] + dl
	Mem0[ss:bp + 84<i16> + di:byte] = v427
	SCZO = cond(v427)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	bp = bp + 1<16>
	SZO = cond(bp)
	v428 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v428
	SCZO = cond(v428)
	v429 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v429
	SCZO = cond(v429)
	v430 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v430
	SCZO = cond(v430)
	v431 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v431
	SCZO = cond(v431)
	v432 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v432
	SCZO = cond(v432)
	v433 = Mem0[ss:bp + 68<i16> + di:byte] + dl
	Mem0[ss:bp + 68<i16> + di:byte] = v433
	SCZO = cond(v433)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bx = bx + 1<16>
	SZO = cond(bx)
	v434 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v434
	SCZO = cond(v434)
	v435 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v435
	SCZO = cond(v435)
	v436 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v436
	SCZO = cond(v436)
	v437 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v437
	SCZO = cond(v437)
	v438 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v438
	SCZO = cond(v438)
	v439 = Mem0[ss:bp + 95<i16>:byte] + al
	Mem0[ss:bp + 95<i16>:byte] = v439
	SCZO = cond(v439)
	sp = sp + 1<16>
	SZO = cond(sp)
	v440 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v440
	SCZO = cond(v440)
	v441 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v441
	SCZO = cond(v441)
	v442 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v442
	SCZO = cond(v442)
	v443 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v443
	SCZO = cond(v443)
	v444 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v444
	SCZO = cond(v444)
	v445 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v445
	SCZO = cond(v445)
	v446 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v446
	SCZO = cond(v446)
	bx = bx - 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v447 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v447
	SCZO = cond(v447)
	v448 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v448
	SCZO = cond(v448)
	v449 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v449
	SCZO = cond(v449)
	v450 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v450
	SCZO = cond(v450)
	v451 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v451
	SCZO = cond(v451)
	v452 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v452
	SCZO = cond(v452)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	cx = cx + 1<16>
	SZO = cond(cx)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v453 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v453
	SCZO = cond(v453)
	v454 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v454
	SCZO = cond(v454)
	v455 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v455
	SCZO = cond(v455)
	v456 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v456
	SCZO = cond(v456)
	v457 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v457
	SCZO = cond(v457)
	v458 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v458
	SCZO = cond(v458)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bx = bx + 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	v459 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v459
	SCZO = cond(v459)
	v460 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v460
	SCZO = cond(v460)
	v461 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v461
	SCZO = cond(v461)
	v462 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v462
	SCZO = cond(v462)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v463 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v463
	SCZO = cond(v463)
	v464 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v464
	SCZO = cond(v464)
	v465 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v465
	SCZO = cond(v465)
	v466 = Mem0[ds:si + 68<i16>:byte] + al
	Mem0[ds:si + 68<i16>:byte] = v466
	SCZO = cond(v466)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	bp = bp + 1<16>
	SZO = cond(bp)
	v467 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v467
	SCZO = cond(v467)
	v468 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v468
	SCZO = cond(v468)
	v469 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v469
	SCZO = cond(v469)
	v470 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v470
	SCZO = cond(v470)
	v471 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v471
	SCZO = cond(v471)
	v472 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v472
	SCZO = cond(v472)
	cx = cx + 1<16>
	SZO = cond(cx)
	bp = bp - 1<16>
	SZO = cond(bp)
	v473 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v473
	v474 = Mem0[ds:bx + si:word16] ^ ax
	Mem0[ds:bx + si:word16] = v474
	SZ = cond(Mem0[ds:bx + si:word16])
	O = false
	C = false
	v475 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v475
	SCZO = cond(v475)
	v476 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v476
	SCZO = cond(v476)
	v477 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v477
	SCZO = cond(v477)
	v478 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v478
	SCZO = cond(v478)
	v479 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v479
	SCZO = cond(v479)
	v480 = Mem0[ds:bx + 77<i16> + di:byte] + al
	Mem0[ds:bx + 77<i16> + di:byte] = v480
	SCZO = cond(v480)
	v481 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v481
	al = al ^ Mem0[ds:bx + si:byte]
	SZ = cond(al)
	O = false
	C = false
	v482 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v482
	SCZO = cond(v482)
	v483 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v483
	SCZO = cond(v483)
	v484 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v484
	SCZO = cond(v484)
	v485 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v485
	SCZO = cond(v485)
	v486 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v486
	SCZO = cond(v486)
	v487 = Mem0[ds:bx + 82<i16> + di:byte] + al
	Mem0[ds:bx + 82<i16> + di:byte] = v487
	SCZO = cond(v487)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = di
	v488 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v488
	SCZO = cond(v488)
	v489 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v489
	SCZO = cond(v489)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = 0x5210<16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v490 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v490
	v491 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v491
	SCZO = cond(v491)
	v492 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v492
	SCZO = cond(v492)
	v493 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v493
	SCZO = cond(v493)
	v494 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v494
	SCZO = cond(v494)
	v495 = Mem0[ds:bx + 82<i16> + di:byte] + al
	Mem0[ds:bx + 82<i16> + di:byte] = v495
	SCZO = cond(v495)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	si = si - 1<16>
	SZO = cond(si)
	v496 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v496
	SCZO = cond(v496)
	v497 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v497
	SCZO = cond(v497)
	branch Test(NE,Z) l3CEE_F170
	// succ:  l3CEE_F160 l3CEE_F170
l3CEE_F160:
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si - 1<16>
	SZO = cond(si)
	v499 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v499
	SCZO = cond(v499)
	v500 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v500
	SCZO = cond(v500)
	v501 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v501
	SCZO = cond(v501)
	v502 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v502
	SCZO = cond(v502)
	v503 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v503
	SCZO = cond(v503)
	v504 = Mem0[ds:si + 79<i16>:byte] + dl
	Mem0[ds:si + 79<i16>:byte] = v504
	SCZO = cond(v504)
	goto l3CEE_F172
	// succ:  l3CEE_F172
l3CEE_F170:
	v1353 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1353
	di = di - 1<16>
	SZO = cond(di)
	// succ:  l3CEE_F172
l3CEE_F172:
	v505 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v505
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v506 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v506
	SCZO = cond(v506)
	v507 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v507
	SCZO = cond(v507)
	v508 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v508
	SCZO = cond(v508)
	v509 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v509
	di = di - 1<16>
	SZO = cond(di)
	v510 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v510
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bx = bx + 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	v511 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v511
	SCZO = cond(v511)
	v512 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v512
	SCZO = cond(v512)
	v513 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v513
	SCZO = cond(v513)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v514 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v514
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v515 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v515
	SCZO = cond(v515)
	v516 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v516
	SCZO = cond(v516)
	v517 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v517
	SCZO = cond(v517)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v518 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v518
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bx = bx + 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	v519 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v519
	SCZO = cond(v519)
	v520 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v520
	SCZO = cond(v520)
	v521 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v521
	SCZO = cond(v521)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	v522 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v522
	bp = bp + 1<16>
	SZO = cond(bp)
	v523 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v523
	SCZO = cond(v523)
	v524 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v524
	SCZO = cond(v524)
	v525 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v525
	SCZO = cond(v525)
	v526 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v526
	SCZO = cond(v526)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v527 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v527
	bx = bx - 1<16>
	SZO = cond(bx)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v528 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v528
	SCZO = cond(v528)
	v529 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v529
	SCZO = cond(v529)
	v530 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v530
	SCZO = cond(v530)
	v531 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v531
	SCZO = cond(v531)
	v532 = Mem0[ds:bx + 49<i16>:byte] + bl
	Mem0[ds:bx + 49<i16>:byte] = v532
	SCZO = cond(v532)
	al = al ^ Mem0[ds:bx + si:byte]
	SZ = cond(al)
	O = false
	C = false
	v533 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v533
	SCZO = cond(v533)
	v534 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v534
	SCZO = cond(v534)
	v535 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v535
	SCZO = cond(v535)
	v536 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v536
	SCZO = cond(v536)
	v537 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v537
	SCZO = cond(v537)
	v538 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v538
	SCZO = cond(v538)
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp + 1<16>
	SZO = cond(sp)
	v539 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v539
	SCZO = cond(v539)
	v540 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v540
	SCZO = cond(v540)
	v541 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v541
	SCZO = cond(v541)
	v542 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v542
	SCZO = cond(v542)
	v543 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v543
	SCZO = cond(v543)
	v544 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v544
	SCZO = cond(v544)
	v545 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v545
	SCZO = cond(v545)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bx = bx + 1<16>
	SZO = cond(bx)
	bx = bx - 1<16>
	SZO = cond(bx)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v546 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v546
	SCZO = cond(v546)
	v547 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v547
	SCZO = cond(v547)
	v548 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v548
	SCZO = cond(v548)
	v549 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v549
	SCZO = cond(v549)
	v550 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v550
	SCZO = cond(v550)
	v551 = Mem0[ds:bx + 65<i16> + si:byte] + dl
	Mem0[ds:bx + 65<i16> + si:byte] = v551
	SCZO = cond(v551)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx - 1<16>
	SZO = cond(bx)
	v552 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v552
	SCZO = cond(v552)
	v553 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v553
	SCZO = cond(v553)
	v554 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v554
	SCZO = cond(v554)
	v555 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v555
	SCZO = cond(v555)
	v556 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v556
	SCZO = cond(v556)
	bx = bx + 1<16>
	SZO = cond(bx)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	ax = ax - 1<16>
	SZO = cond(ax)
	v557 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v557
	SCZO = cond(v557)
	v558 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v558
	SCZO = cond(v558)
	v559 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v559
	SCZO = cond(v559)
	v560 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v560
	SCZO = cond(v560)
	v561 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v561
	SCZO = cond(v561)
	v562 = Mem0[ss:bp + 79<i16> + di:word16] + ax + C
	Mem0[ss:bp + 79<i16> + di:word16] = v562
	SCZO = cond(v562)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx + 1<16>
	SZO = cond(bx)
	v563 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v563
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	si = si - 1<16>
	SZO = cond(si)
	v564 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v564
	SCZO = cond(v564)
	v565 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v565
	SCZO = cond(v565)
	dx = dx - 1<16>
	SZO = cond(dx)
	v566 = Mem0[ds:si + 79<i16>:word16] + dx + C
	Mem0[ds:si + 79<i16>:word16] = v566
	SCZO = cond(v566)
	v567 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v567
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v568 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v568
	SCZO = cond(v568)
	v569 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v569
	SCZO = cond(v569)
	v570 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v570
	SCZO = cond(v570)
	v571 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v571
	SCZO = cond(v571)
	v572 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v572
	SCZO = cond(v572)
	v573 = Mem0[ds:si + 79<i16>:byte] + dl
	Mem0[ds:si + 79<i16>:byte] = v573
	SCZO = cond(v573)
	v574 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v574
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v575 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v575
	v576 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v576
	SCZO = cond(v576)
	v577 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v577
	SCZO = cond(v577)
	v578 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v578
	SCZO = cond(v578)
	v579 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v579
	SCZO = cond(v579)
	v580 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v580
	SCZO = cond(v580)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v581 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v581
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v582 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v582
	SCZO = cond(v582)
	v583 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v583
	SCZO = cond(v583)
	v584 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v584
	SCZO = cond(v584)
	v585 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v585
	SCZO = cond(v585)
	v586 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v586
	SCZO = cond(v586)
	v587 = Mem0[ss:bp + 84<i16> + si:byte] + dl
	Mem0[ss:bp + 84<i16> + si:byte] = v587
	SCZO = cond(v587)
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v588 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v588
	v589 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v589
	SCZO = cond(v589)
	v590 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v590
	SCZO = cond(v590)
	v591 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v591
	SCZO = cond(v591)
	v592 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v592
	SCZO = cond(v592)
	v593 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v593
	SCZO = cond(v593)
	bx = bx + 1<16>
	SZO = cond(bx)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v594 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v594
	SCZO = cond(v594)
	v595 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v595
	SCZO = cond(v595)
	v596 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v596
	SCZO = cond(v596)
	v597 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v597
	SCZO = cond(v597)
	sp = bp
	bp = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	al = al + 0x50<8> + C
	SCZO = cond(al)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v598 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v598
	bp = bp + 1<16>
	SZO = cond(bp)
	v599 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v599
	SCZO = cond(v599)
	v600 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v600
	SCZO = cond(v600)
	v601 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v601
	SCZO = cond(v601)
	v602 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v602
	SCZO = cond(v602)
	v603 = Mem0[ss:bp + 76<i16> + di:byte] + al
	Mem0[ss:bp + 76<i16> + di:byte] = v603
	SCZO = cond(v603)
	bp = bp - 1<16>
	SZO = cond(bp)
	v604 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v604
	SCZO = cond(v604)
	v605 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v605
	SCZO = cond(v605)
	v606 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v606
	SCZO = cond(v606)
	v607 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v607
	SCZO = cond(v607)
	v608 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v608
	SCZO = cond(v608)
	v609 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v609
	SCZO = cond(v609)
	v610 = Mem0[ds:si + 79<i16>:byte] + cl
	Mem0[ds:si + 79<i16>:byte] = v610
	SCZO = cond(v610)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx - 1<16>
	SZO = cond(bx)
	v611 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v611
	SCZO = cond(v611)
	v612 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v612
	SCZO = cond(v612)
	v613 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v613
	SCZO = cond(v613)
	v614 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v614
	SCZO = cond(v614)
	v615 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v615
	SCZO = cond(v615)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v616 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v616
	SCZO = cond(v616)
	v617 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v617
	SCZO = cond(v617)
	v618 = Mem0[ss:bp + si:byte] - dl - C
	Mem0[ss:bp + si:byte] = v618
	SCZO = cond(v618)
	v619 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v619
	di = di - 1<16>
	SZO = cond(di)
	v620 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v620
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v621 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v621
	SCZO = cond(v621)
	v622 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v622
	SCZO = cond(v622)
	v623 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v623
	SCZO = cond(v623)
	v624 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v624
	SCZO = cond(v624)
	v625 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v625
	SCZO = cond(v625)
	v626 = Mem0[ds:si + 79<i16>:byte] + dl
	Mem0[ds:si + 79<i16>:byte] = v626
	SCZO = cond(v626)
	v627 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v627
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v628 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v628
	SCZO = cond(v628)
	v629 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v629
	SCZO = cond(v629)
	v630 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v630
	SCZO = cond(v630)
	v631 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v631
	SCZO = cond(v631)
	v632 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v632
	SCZO = cond(v632)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v633 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v633
	SCZO = cond(v633)
	v634 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v634
	SCZO = cond(v634)
	v635 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v635
	SCZO = cond(v635)
	v636 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v636
	SCZO = cond(v636)
	v637 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v637
	SCZO = cond(v637)
	v638 = Mem0[ds:bx + 69<i16> + si:byte] + dl
	Mem0[ds:bx + 69<i16> + si:byte] = v638
	SCZO = cond(v638)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v639 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v639
	v640 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v640
	SCZO = cond(v640)
	v641 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v641
	SCZO = cond(v641)
	v642 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v642
	SCZO = cond(v642)
	v643 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v643
	SCZO = cond(v643)
	v644 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v644
	SCZO = cond(v644)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v645 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v645
	SCZO = cond(v645)
	v646 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v646
	SCZO = cond(v646)
	v647 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v647
	SCZO = cond(v647)
	v648 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v648
	SCZO = cond(v648)
	v649 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v649
	SCZO = cond(v649)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	dx = dx + 1<16>
	SZO = cond(dx)
	bp = bp + 1<16>
	SZO = cond(bp)
	di = di + 1<16>
	SZO = cond(di)
	v650 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v650
	SCZO = cond(v650)
	v651 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v651
	SCZO = cond(v651)
	v652 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v652
	SCZO = cond(v652)
	v653 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v653
	SCZO = cond(v653)
	v654 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v654
	SCZO = cond(v654)
	v655 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v655
	SCZO = cond(v655)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v656 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v656
	SCZO = cond(v656)
	v657 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v657
	SCZO = cond(v657)
	v658 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v658
	SCZO = cond(v658)
	v659 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v659
	SCZO = cond(v659)
	v660 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v660
	SCZO = cond(v660)
	v661 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v661
	SCZO = cond(v661)
	bx = bx + 1<16>
	SZO = cond(bx)
	ax = ax - 1<16>
	SZO = cond(ax)
	di = di + 1<16>
	SZO = cond(di)
	v662 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v662
	SCZO = cond(v662)
	v663 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v663
	SCZO = cond(v663)
	v664 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v664
	SCZO = cond(v664)
	v665 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v665
	SCZO = cond(v665)
	v666 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v666
	SCZO = cond(v666)
	v667 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v667
	SCZO = cond(v667)
	bx = bx + 1<16>
	SZO = cond(bx)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	v668 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v668
	SCZO = cond(v668)
	v669 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v669
	SCZO = cond(v669)
	v670 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v670
	SCZO = cond(v670)
	v671 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v671
	SCZO = cond(v671)
	v672 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v672
	SCZO = cond(v672)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	v673 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v673
	di = di - 1<16>
	SZO = cond(di)
	si = si + 1<16>
	SZO = cond(si)
	si = si + 1<16>
	SZO = cond(si)
	v674 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v674
	SCZO = cond(v674)
	v675 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v675
	SCZO = cond(v675)
	v676 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v676
	SCZO = cond(v676)
	v677 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v677
	SCZO = cond(v677)
	cx = cx + 1<16>
	SZO = cond(cx)
	bp = bp - 1<16>
	SZO = cond(bp)
	v678 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v678
	ax = ax ^ Mem0[ds:bx + si:word16]
	SZ = cond(ax)
	O = false
	C = false
	v679 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v679
	SCZO = cond(v679)
	v680 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v680
	SCZO = cond(v680)
	v681 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v681
	SCZO = cond(v681)
	v682 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v682
	SCZO = cond(v682)
	v683 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v683
	SCZO = cond(v683)
	v684 = Mem0[ds:bx + 77<i16> + di:byte] + al
	Mem0[ds:bx + 77<i16> + di:byte] = v684
	SCZO = cond(v684)
	v685 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v685
	al = al ^ 0<8>
	SZ = cond(al)
	O = false
	C = false
	v686 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v686
	SCZO = cond(v686)
	v687 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v687
	SCZO = cond(v687)
	v688 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v688
	SCZO = cond(v688)
	v689 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v689
	SCZO = cond(v689)
	v690 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v690
	SCZO = cond(v690)
	v691 = Mem0[ds:bx + 86<i16>:byte] + cl
	Mem0[ds:bx + 86<i16>:byte] = v691
	SCZO = cond(v691)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = di
	v692 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v692
	SCZO = cond(v692)
	v693 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v693
	SCZO = cond(v693)
	dx = dx + Mem0[ss:bp + di:word16] + C
	SCZO = cond(dx)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	si = si - 1<16>
	SZO = cond(si)
	v694 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v694
	SCZO = cond(v694)
	v695 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v695
	SCZO = cond(v695)
	al = al & 0x13<8>
	SZ = cond(al)
	O = false
	C = false
	v696 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v696
	di = di - 1<16>
	SZO = cond(di)
	v697 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v697
	dx = dx + 1<16>
	SZO = cond(dx)
	bp = bp + 1<16>
	SZO = cond(bp)
	di = di + 1<16>
	SZO = cond(di)
	v698 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v698
	SCZO = cond(v698)
	v699 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v699
	SCZO = cond(v699)
	v700 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v700
	SCZO = cond(v700)
	v701 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v701
	SCZO = cond(v701)
	v702 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v702
	SCZO = cond(v702)
	v703 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v703
	di = di - 1<16>
	SZO = cond(di)
	v704 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v704
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v705 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v705
	SCZO = cond(v705)
	v706 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v706
	SCZO = cond(v706)
	v707 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v707
	SCZO = cond(v707)
	v708 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v708
	SCZO = cond(v708)
	v709 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v709
	SCZO = cond(v709)
	v710 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v710
	di = di - 1<16>
	SZO = cond(di)
	v711 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v711
	bx = bx + 1<16>
	SZO = cond(bx)
	ax = ax - 1<16>
	SZO = cond(ax)
	di = di + 1<16>
	SZO = cond(di)
	v712 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v712
	SCZO = cond(v712)
	v713 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v713
	SCZO = cond(v713)
	v714 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v714
	SCZO = cond(v714)
	v715 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v715
	SCZO = cond(v715)
	v716 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v716
	SCZO = cond(v716)
	v717 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v717
	di = di - 1<16>
	SZO = cond(di)
	v718 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v718
	bx = bx + 1<16>
	SZO = cond(bx)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	v719 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v719
	SCZO = cond(v719)
	v720 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v720
	SCZO = cond(v720)
	v721 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v721
	SCZO = cond(v721)
	v722 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v722
	SCZO = cond(v722)
	v723 = Mem0[ds:bx + 69<i16> + si:byte] + dl
	Mem0[ds:bx + 69<i16> + si:byte] = v723
	SCZO = cond(v723)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	dx = dx + 1<16>
	SZO = cond(dx)
	bp = bp + 1<16>
	SZO = cond(bp)
	di = di + 1<16>
	SZO = cond(di)
	v724 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v724
	SCZO = cond(v724)
	v725 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v725
	SCZO = cond(v725)
	v726 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v726
	SCZO = cond(v726)
	v727 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v727
	SCZO = cond(v727)
	v728 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v728
	SCZO = cond(v728)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v729 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v729
	SCZO = cond(v729)
	v730 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v730
	SCZO = cond(v730)
	v731 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v731
	SCZO = cond(v731)
	v732 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v732
	SCZO = cond(v732)
	v733 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v733
	SCZO = cond(v733)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bx = bx + 1<16>
	SZO = cond(bx)
	ax = ax - 1<16>
	SZO = cond(ax)
	di = di + 1<16>
	SZO = cond(di)
	v734 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v734
	SCZO = cond(v734)
	v735 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v735
	SCZO = cond(v735)
	v736 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v736
	SCZO = cond(v736)
	v737 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v737
	SCZO = cond(v737)
	v738 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v738
	SCZO = cond(v738)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bx = bx + 1<16>
	SZO = cond(bx)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	v739 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v739
	SCZO = cond(v739)
	v740 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v740
	SCZO = cond(v740)
	v741 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v741
	SCZO = cond(v741)
	v742 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v742
	SCZO = cond(v742)
	v743 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v743
	SCZO = cond(v743)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v744 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v744
	bp = bp + 1<16>
	SZO = cond(bp)
	v745 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v745
	SCZO = cond(v745)
	v746 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v746
	SCZO = cond(v746)
	v747 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v747
	SCZO = cond(v747)
	v748 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v748
	SCZO = cond(v748)
	v749 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v749
	SCZO = cond(v749)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	bx = bx + 1<16>
	SZO = cond(bx)
	si = si - 1<16>
	SZO = cond(si)
	v750 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v750
	v751 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v751
	SCZO = cond(v751)
	v752 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v752
	SCZO = cond(v752)
	v753 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v753
	SCZO = cond(v753)
	v754 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v754
	SCZO = cond(v754)
	v755 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v755
	SCZO = cond(v755)
	v756 = Mem0[ss:bp + 76<i16> + di:byte] + al
	Mem0[ss:bp + 76<i16> + di:byte] = v756
	SCZO = cond(v756)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	si = si - 1<16>
	SZO = cond(si)
	v757 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v757
	SCZO = cond(v757)
	v758 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v758
	SCZO = cond(v758)
	v759 = Mem0[ds:bx:byte] + dl
	Mem0[ds:bx:byte] = v759
	SCZO = cond(v759)
	al = al + 0x4E<8> + C
	SCZO = cond(al)
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v760 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v760
	SCZO = cond(v760)
	v761 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v761
	SCZO = cond(v761)
	v762 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v762
	SCZO = cond(v762)
	v763 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v763
	SCZO = cond(v763)
	v764 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v764
	SCZO = cond(v764)
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v765 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v765
	bp = bp + 1<16>
	SZO = cond(bp)
	v766 = Mem0[ds:bx + si:word16] ^ ax
	Mem0[ds:bx + si:word16] = v766
	SZ = cond(Mem0[ds:bx + si:word16])
	O = false
	C = false
	v767 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v767
	SCZO = cond(v767)
	v768 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v768
	SCZO = cond(v768)
	v769 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v769
	SCZO = cond(v769)
	v770 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v770
	SCZO = cond(v770)
	v771 = Mem0[ss:bp + 68<i16> + di:byte] + al
	Mem0[ss:bp + 68<i16> + di:byte] = v771
	SCZO = cond(v771)
	cx = cx + 1<16>
	SZO = cond(cx)
	v772 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v772
	bp = bp + 1<16>
	SZO = cond(bp)
	al = al ^ Mem0[ds:bx + si:byte]
	SZ = cond(al)
	O = false
	C = false
	v773 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v773
	SCZO = cond(v773)
	v774 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v774
	SCZO = cond(v774)
	v775 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v775
	SCZO = cond(v775)
	v776 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v776
	SCZO = cond(v776)
	v777 = Mem0[ss:bp + 68<i16> + di:byte] + al
	Mem0[ss:bp + 68<i16> + di:byte] = v777
	SCZO = cond(v777)
	cx = cx + 1<16>
	SZO = cond(cx)
	v778 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v778
	bp = bp + 1<16>
	SZO = cond(bp)
	ax = ax ^ Mem0[ds:bx + si:word16]
	SZ = cond(ax)
	O = false
	C = false
	v779 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v779
	SCZO = cond(v779)
	v780 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v780
	SCZO = cond(v780)
	v781 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v781
	SCZO = cond(v781)
	v782 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v782
	SCZO = cond(v782)
	v783 = Mem0[ss:bp + 68<i16> + di:byte] + al
	Mem0[ss:bp + 68<i16> + di:byte] = v783
	SCZO = cond(v783)
	v784 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v784
	v785 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v785
	SCZO = cond(v785)
	v786 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v786
	SCZO = cond(v786)
	v787 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v787
	SCZO = cond(v787)
	v788 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v788
	SCZO = cond(v788)
	v789 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v789
	SCZO = cond(v789)
	v790 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v790
	SCZO = cond(v790)
	v791 = Mem0[ss:bp + 84<i16> + di:byte] + al
	Mem0[ss:bp + 84<i16> + di:byte] = v791
	SCZO = cond(v791)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v792 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v792
	SCZO = cond(v792)
	v793 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v793
	SCZO = cond(v793)
	v794 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v794
	SCZO = cond(v794)
	v795 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v795
	SCZO = cond(v795)
	v796 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v796
	SCZO = cond(v796)
	v797 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v797
	SCZO = cond(v797)
	bx = bx + 1<16>
	SZO = cond(bx)
	dx = dx + 1<16>
	SZO = cond(dx)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	v798 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v798
	SCZO = cond(v798)
	v799 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v799
	SCZO = cond(v799)
	v800 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v800
	SCZO = cond(v800)
	v801 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v801
	SCZO = cond(v801)
	v802 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v802
	SCZO = cond(v802)
	v803 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v803
	SCZO = cond(v803)
	bx = bx + 1<16>
	SZO = cond(bx)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v804 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v804
	SCZO = cond(v804)
	v805 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v805
	SCZO = cond(v805)
	v806 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v806
	SCZO = cond(v806)
	v807 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v807
	SCZO = cond(v807)
	v808 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v808
	SCZO = cond(v808)
	v809 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v809
	SCZO = cond(v809)
	bx = bx + 1<16>
	SZO = cond(bx)
	cx = cx + 1<16>
	SZO = cond(cx)
	bp = bp - 1<16>
	SZO = cond(bp)
	v810 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v810
	v811 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v811
	SCZO = cond(v811)
	v812 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v812
	SCZO = cond(v812)
	v813 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v813
	SCZO = cond(v813)
	v814 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v814
	SCZO = cond(v814)
	v815 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v815
	SCZO = cond(v815)
	v816 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v816
	SCZO = cond(v816)
	sp = sp - 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp + 1<16>
	SZO = cond(sp)
	di = di + 1<16>
	SZO = cond(di)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bp = bp + 1<16>
	SZO = cond(bp)
	v817 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v817
	SCZO = cond(v817)
	v818 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v818
	SCZO = cond(v818)
	dx = 0x4314<16>
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	v819 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v819
	cx = cx + 1<16>
	SZO = cond(cx)
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	v820 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v820
	SCZO = cond(v820)
	v821 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v821
	SCZO = cond(v821)
	Mem0[ds:0x4E14<16>:word16] = ax
	si = si - 1<16>
	SZO = cond(si)
	v822 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v822
	SCZO = cond(v822)
	v823 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v823
	SCZO = cond(v823)
	v824 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v824
	SCZO = cond(v824)
	v825 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v825
	SCZO = cond(v825)
	v826 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v826
	SCZO = cond(v826)
	v827 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v827
	SCZO = cond(v827)
	v828 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v828
	SCZO = cond(v828)
	bx = bx + 1<16>
	SZO = cond(bx)
	v829 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v829
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v830 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v830
	SCZO = cond(v830)
	v831 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v831
	SCZO = cond(v831)
	v832 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v832
	SCZO = cond(v832)
	v833 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v833
	SCZO = cond(v833)
	v834 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v834
	SCZO = cond(v834)
	v835 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v835
	SCZO = cond(v835)
	v836 = Mem0[ss:bp + 66<i16> + di:byte] + al
	Mem0[ss:bp + 66<i16> + di:byte] = v836
	SCZO = cond(v836)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v837 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v837
	SCZO = cond(v837)
	v838 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v838
	SCZO = cond(v838)
	v839 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v839
	SCZO = cond(v839)
	v840 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v840
	SCZO = cond(v840)
	v841 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v841
	SCZO = cond(v841)
	v842 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v842
	SCZO = cond(v842)
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 1<16>
	SZO = cond(sp)
	bp = bp - 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v843 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v843
	SCZO = cond(v843)
	v844 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v844
	SCZO = cond(v844)
	v845 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v845
	SCZO = cond(v845)
	v846 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v846
	SCZO = cond(v846)
	v847 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v847
	SCZO = cond(v847)
	v848 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v848
	SCZO = cond(v848)
	si = si - 1<16>
	SZO = cond(si)
	ax = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v849 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v849
	v850 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v850
	SCZO = cond(v850)
	v851 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v851
	SCZO = cond(v851)
	v852 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v852
	SCZO = cond(v852)
	v853 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v853
	SCZO = cond(v853)
	v854 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v854
	SCZO = cond(v854)
	v855 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v855
	SCZO = cond(v855)
	bx = bx + 1<16>
	SZO = cond(bx)
	si = si - 1<16>
	SZO = cond(si)
	v856 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v856
	v857 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v857
	SCZO = cond(v857)
	v858 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v858
	SCZO = cond(v858)
	v859 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v859
	SCZO = cond(v859)
	v860 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v860
	SCZO = cond(v860)
	v861 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v861
	SCZO = cond(v861)
	v862 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v862
	SCZO = cond(v862)
	v863 = Mem0[ss:bp:byte] + cl
	Mem0[ss:bp:byte] = v863
	SCZO = cond(v863)
	v864 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v864
	SCZO = cond(v864)
	v865 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v865
	SCZO = cond(v865)
	v866 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v866
	SCZO = cond(v866)
	v867 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v867
	SCZO = cond(v867)
	v868 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v868
	SCZO = cond(v868)
	v869 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v869
	SCZO = cond(v869)
	v870 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v870
	SCZO = cond(v870)
	si = si - 1<16>
	SZO = cond(si)
	ax = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx - 1<16>
	SZO = cond(bx)
	v871 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v871
	SCZO = cond(v871)
	v872 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v872
	SCZO = cond(v872)
	v873 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v873
	SCZO = cond(v873)
	v874 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v874
	SCZO = cond(v874)
	v875 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v875
	SCZO = cond(v875)
	v876 = Mem0[ds:bx + di:byte] + cl
	Mem0[ds:bx + di:byte] = v876
	SCZO = cond(v876)
	v877 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v877
	SCZO = cond(v877)
	v878 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v878
	SCZO = cond(v878)
	v879 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v879
	SCZO = cond(v879)
	v880 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v880
	SCZO = cond(v880)
	v881 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v881
	SCZO = cond(v881)
	v882 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v882
	SCZO = cond(v882)
	v883 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v883
	SCZO = cond(v883)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp + 1<16>
	SZO = cond(sp)
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v884 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v884
	SCZO = cond(v884)
	v885 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v885
	SCZO = cond(v885)
	v886 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v886
	SCZO = cond(v886)
	ch = ch + dh
	SCZO = cond(ch)
	al = al + 0x53<8> + C
	SCZO = cond(al)
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	cx = cx + 1<16>
	SZO = cond(cx)
	bx = bx + 1<16>
	SZO = cond(bx)
	di = di - 1<16>
	SZO = cond(di)
	ax = ax - 1<16>
	SZO = cond(ax)
	v888 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v888
	SCZO = cond(v888)
	v889 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v889
	SCZO = cond(v889)
	v890 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v890
	SCZO = cond(v890)
	v891 = Mem0[ds:si:byte] + cl
	Mem0[ds:si:byte] = v891
	SCZO = cond(v891)
	ax = ax + 0x4353<16> + C
	SCZO = cond(ax)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	dx = dx + 1<16>
	SZO = cond(dx)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bx = bx - 1<16>
	SZO = cond(bx)
	v892 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v892
	SCZO = cond(v892)
	v893 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v893
	SCZO = cond(v893)
	v894 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v894
	SCZO = cond(v894)
	v895 = Mem0[ss:bp + di:byte] + ah
	Mem0[ss:bp + di:byte] = v895
	SCZO = cond(v895)
	ax = ax + 0x594D<16> + C
	SCZO = cond(ax)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	cx = cx - 1<16>
	SZO = cond(cx)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = di
	v896 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v896
	SCZO = cond(v896)
	v897 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v897
	SCZO = cond(v897)
	v898 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v898
	SCZO = cond(v898)
	v899 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v899
	SCZO = cond(v899)
	v900 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v900
	SCZO = cond(v900)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx + 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v901 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v901
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v902 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v902
	SCZO = cond(v902)
	v903 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v903
	SCZO = cond(v903)
	v904 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v904
	SCZO = cond(v904)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	dx = dx + 1<16>
	SZO = cond(dx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bp = bp + 1<16>
	SZO = cond(bp)
	v905 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v905
	SCZO = cond(v905)
	v906 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v906
	SCZO = cond(v906)
	v907 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v907
	SCZO = cond(v907)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp + 1<16>
	SZO = cond(sp)
	dx = dx + 1<16>
	SZO = cond(dx)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	v908 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v908
	SCZO = cond(v908)
	v909 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v909
	SCZO = cond(v909)
	v910 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v910
	SCZO = cond(v910)
	v911 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v911
	SCZO = cond(v911)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	bx = bx + 1<16>
	SZO = cond(bx)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	ax = ax - 1<16>
	SZO = cond(ax)
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v912 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v912
	SCZO = cond(v912)
	v913 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v913
	SCZO = cond(v913)
	v914 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v914
	SCZO = cond(v914)
	v915 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v915
	SCZO = cond(v915)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	bx = bx + 1<16>
	SZO = cond(bx)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	ax = ax - 1<16>
	SZO = cond(ax)
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp + 1<16>
	SZO = cond(sp)
	v916 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v916
	SCZO = cond(v916)
	v917 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v917
	SCZO = cond(v917)
	v918 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v918
	SCZO = cond(v918)
	v919 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v919
	SCZO = cond(v919)
	bx = bx + 1<16>
	SZO = cond(bx)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v920 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v920
	SCZO = cond(v920)
	v921 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v921
	SCZO = cond(v921)
	v922 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v922
	SCZO = cond(v922)
	v923 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v923
	SCZO = cond(v923)
	v924 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v924
	SCZO = cond(v924)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v925 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v925
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v926 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v926
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v927 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v927
	SCZO = cond(v927)
	v928 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v928
	SCZO = cond(v928)
	v929 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v929
	SCZO = cond(v929)
	v930 = Mem0[ds:si + 67<i16>:byte] + al
	Mem0[ds:si + 67<i16>:byte] = v930
	SCZO = cond(v930)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v931 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v931
	cx = cx + 1<16>
	SZO = cond(cx)
	v932 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v932
	SCZO = cond(v932)
	v933 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v933
	SCZO = cond(v933)
	v934 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v934
	SCZO = cond(v934)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	ax = ax + 0x4F43<16> + C
	SCZO = cond(ax)
	bp = bp - 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	v935 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v935
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp + 1<16>
	SZO = cond(sp)
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v936 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v936
	SCZO = cond(v936)
	v937 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v937
	SCZO = cond(v937)
	SCZO = cond(al - Mem0[es:di:byte])
	di = di + 1<i16>
	ax = ax + 0x4542<16> + C
	SCZO = cond(ax)
	di = di + 1<16>
	SZO = cond(di)
	dx = dx + 1<16>
	SZO = cond(dx)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	v939 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v939
	SCZO = cond(v939)
	v940 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v940
	SCZO = cond(v940)
	v941 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v941
	SCZO = cond(v941)
	v942 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v942
	SCZO = cond(v942)
	v943 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v943
	SCZO = cond(v943)
	dx = dx + 1<16>
	SZO = cond(dx)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bx = bx - 1<16>
	SZO = cond(bx)
	dx = dx + 1<16>
	SZO = cond(dx)
	bp = bp + 1<16>
	SZO = cond(bp)
	di = di + 1<16>
	SZO = cond(di)
	v944 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v944
	SCZO = cond(v944)
	v945 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v945
	SCZO = cond(v945)
	v946 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v946
	SCZO = cond(v946)
	v947 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v947
	SCZO = cond(v947)
	v948 = Mem0[ss:bp + 65<i16> + si:byte] + al
	Mem0[ss:bp + 65<i16> + si:byte] = v948
	SCZO = cond(v948)
	si = si - 1<16>
	SZO = cond(si)
	bx = bx - 1<16>
	SZO = cond(bx)
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v949 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v949
	SCZO = cond(v949)
	v950 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v950
	SCZO = cond(v950)
	v951 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v951
	SCZO = cond(v951)
	v952 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v952
	SCZO = cond(v952)
	v953 = Mem0[ss:bp + 65<i16> + si:byte] + al
	Mem0[ss:bp + 65<i16> + si:byte] = v953
	SCZO = cond(v953)
	si = si - 1<16>
	SZO = cond(si)
	bx = bx - 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = di
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = di
	v954 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v954
	SCZO = cond(v954)
	v955 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v955
	SCZO = cond(v955)
	v956 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v956
	SCZO = cond(v956)
	v957 = Mem0[ss:bp + 65<i16> + di:byte] + al
	Mem0[ss:bp + 65<i16> + di:byte] = v957
	SCZO = cond(v957)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	ax = ax - 1<16>
	SZO = cond(ax)
	si = si + 1<16>
	SZO = cond(si)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v958 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v958
	SCZO = cond(v958)
	v959 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v959
	SCZO = cond(v959)
	v960 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v960
	SCZO = cond(v960)
	sp = sp + 1<16>
	SZO = cond(sp)
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v961 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v961
	cx = cx + 1<16>
	SZO = cond(cx)
	v962 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v962
	v963 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v963
	SCZO = cond(v963)
	v964 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v964
	SCZO = cond(v964)
	v965 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v965
	SCZO = cond(v965)
	v966 = Mem0[ds:di:byte] + 0x43<8> + C
	Mem0[ds:di:byte] = v966
	SCZO = cond(v966)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	ax = ax - 1<16>
	SZO = cond(ax)
	dx = dx + 1<16>
	SZO = cond(dx)
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v967 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v967
	SCZO = cond(v967)
	v968 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v968
	SCZO = cond(v968)
	v969 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v969
	SCZO = cond(v969)
	v970 = Mem0[ss:bp + 65<i16> + di:byte] + al
	Mem0[ss:bp + 65<i16> + di:byte] = v970
	SCZO = cond(v970)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	ax = ax - 1<16>
	SZO = cond(ax)
	bx = bx + 1<16>
	SZO = cond(bx)
	di = di - 1<16>
	SZO = cond(di)
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v971 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v971
	SCZO = cond(v971)
	v972 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v972
	SCZO = cond(v972)
	v973 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v973
	SCZO = cond(v973)
	v974 = Mem0[ds:bx + 69<i16>:byte] + al
	Mem0[ds:bx + 69<i16>:byte] = v974
	SCZO = cond(v974)
	v975 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v975
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx + 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v976 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v976
	v977 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v977
	SCZO = cond(v977)
	v978 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v978
	SCZO = cond(v978)
	bh = 0x15<8>
	di = di + 1<16>
	SZO = cond(di)
	bp = bp + 1<16>
	SZO = cond(bp)
	v980 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v980
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	dx = dx + 1<16>
	SZO = cond(dx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v981 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v981
	SCZO = cond(v981)
	v982 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v982
	SCZO = cond(v982)
	Mem0[ds:di:word16] = 0x4143<16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	ax = ax - 1<16>
	SZO = cond(ax)
	dx = dx + 1<16>
	SZO = cond(dx)
	di = di - 1<16>
	SZO = cond(di)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp + 1<16>
	SZO = cond(sp)
	v983 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v983
	SCZO = cond(v983)
	v984 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v984
	SCZO = cond(v984)
	v985 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v985
	SCZO = cond(v985)
	v986 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v986
	SCZO = cond(v986)
	bx = bx + 1<16>
	SZO = cond(bx)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	ax = ax - 1<16>
	SZO = cond(ax)
	cx = cx + 1<16>
	SZO = cond(cx)
	// succ:  l3CEE_F715
l3CEE_F715:
	sp = sp + 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	v987 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v987
	SCZO = cond(v987)
	v988 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v988
	SCZO = cond(v988)
	v989 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v989
	SCZO = cond(v989)
	v990 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v990
	SCZO = cond(v990)
	v991 = Mem0[ss:bp + 65<i16> + di:byte] + al
	Mem0[ss:bp + 65<i16> + di:byte] = v991
	SCZO = cond(v991)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	ax = ax - 1<16>
	SZO = cond(ax)
	di = di - 1<16>
	SZO = cond(di)
	v992 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v992
	ax = ax - 1<16>
	SZO = cond(ax)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v993 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v993
	SCZO = cond(v993)
	v994 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v994
	SCZO = cond(v994)
	v995 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v995
	SCZO = cond(v995)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v996 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v996
	v997 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v997
	SCZO = cond(v997)
	v998 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v998
	SCZO = cond(v998)
	v999 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v999
	SCZO = cond(v999)
	v1000 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1000
	SCZO = cond(v1000)
	v1001 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1001
	SCZO = cond(v1001)
	v1002 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1002
	SCZO = cond(v1002)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v1003 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1003
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	dx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	di = di - 1<16>
	SZO = cond(di)
	v1004 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1004
	SCZO = cond(v1004)
	v1005 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1005
	SCZO = cond(v1005)
	v1006 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1006
	SCZO = cond(v1006)
	v1007 = Mem0[ss:bp + 72<i16> + di:byte] + al
	Mem0[ss:bp + 72<i16> + di:byte] = v1007
	SCZO = cond(v1007)
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	si = si - 1<16>
	SZO = cond(si)
	v1008 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1008
	SCZO = cond(v1008)
	v1009 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1009
	SCZO = cond(v1009)
	v1010 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1010
	SCZO = cond(v1010)
	v1011 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1011
	SCZO = cond(v1011)
	v1012 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1012
	SCZO = cond(v1012)
	v1013 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1013
	SCZO = cond(v1013)
	v1014 = Mem0[ss:bp + 84<i16> + di:byte] + al
	Mem0[ss:bp + 84<i16> + di:byte] = v1014
	SCZO = cond(v1014)
	v1015 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1015
	SCZO = cond(v1015)
	v1016 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1016
	SCZO = cond(v1016)
	v1017 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1017
	SCZO = cond(v1017)
	v1018 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1018
	SCZO = cond(v1018)
	v1019 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1019
	SCZO = cond(v1019)
	v1020 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1020
	SCZO = cond(v1020)
	v1021 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1021
	SCZO = cond(v1021)
	v1022 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1022
	bx = bx + 1<16>
	SZO = cond(bx)
	v1023 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1023
	SCZO = cond(v1023)
	v1024 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1024
	SCZO = cond(v1024)
	v1025 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1025
	SCZO = cond(v1025)
	v1026 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1026
	SCZO = cond(v1026)
	v1027 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1027
	SCZO = cond(v1027)
	v1028 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1028
	SCZO = cond(v1028)
	v1029 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1029
	SCZO = cond(v1029)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v1030 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1030
	SCZO = cond(v1030)
	v1031 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1031
	SCZO = cond(v1031)
	v1032 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1032
	SCZO = cond(v1032)
	v1033 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1033
	SCZO = cond(v1033)
	// succ:  l3CEE_F78B
l3CEE_F78B:
	v1034 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1034
	SCZO = cond(v1034)
	v1035 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1035
	SCZO = cond(v1035)
	v1036 = Mem0[ss:bp + 67<i16> + di:byte] + dl
	Mem0[ss:bp + 67<i16> + di:byte] = v1036
	SCZO = cond(v1036)
	v1037 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1037
	SCZO = cond(v1037)
	v1038 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1038
	SCZO = cond(v1038)
	v1039 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1039
	SCZO = cond(v1039)
	v1040 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1040
	SCZO = cond(v1040)
	v1041 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1041
	SCZO = cond(v1041)
	v1042 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1042
	SCZO = cond(v1042)
	v1043 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1043
	SCZO = cond(v1043)
	di = di - 1<16>
	SZO = cond(di)
	v1044 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1044
	ax = ax - 1<16>
	SZO = cond(ax)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v1045 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1045
	SCZO = cond(v1045)
	v1046 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1046
	SCZO = cond(v1046)
	v1047 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1047
	SCZO = cond(v1047)
	v1048 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1048
	SCZO = cond(v1048)
	v1049 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1049
	SCZO = cond(v1049)
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v1050 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1050
	bp = bp - 1<16>
	SZO = cond(bp)
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si - 1<16>
	SZO = cond(si)
	v1051 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1051
	v1052 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1052
	SCZO = cond(v1052)
	v1053 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1053
	SCZO = cond(v1053)
	v1054 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1054
	SCZO = cond(v1054)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	bp = bp + 1<16>
	SZO = cond(bp)
	v1055 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1055
	v1056 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1056
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	bx = bx + 1<16>
	SZO = cond(bx)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	ax = ax - 1<16>
	SZO = cond(ax)
	v1057 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1057
	SCZO = cond(v1057)
	v1058 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1058
	SCZO = cond(v1058)
	v1059 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1059
	SCZO = cond(v1059)
	v1060 = Mem0[ss:bp + 79<i16> + di:byte] + al
	Mem0[ss:bp + 79<i16> + di:byte] = v1060
	SCZO = cond(v1060)
	bp = bp - 1<16>
	SZO = cond(bp)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	cx = cx - 1<16>
	SZO = cond(cx)
	di = di - 1<16>
	SZO = cond(di)
	si = si - 1<16>
	SZO = cond(si)
	v1061 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1061
	SCZO = cond(v1061)
	v1062 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1062
	SCZO = cond(v1062)
	v1063 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1063
	SCZO = cond(v1063)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si - 1<16>
	SZO = cond(si)
	v1064 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1064
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	v1065 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1065
	SCZO = cond(v1065)
	v1066 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1066
	SCZO = cond(v1066)
	v1067 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1067
	SCZO = cond(v1067)
	v1068 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1068
	SCZO = cond(v1068)
	v1069 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1069
	SCZO = cond(v1069)
	v1070 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1070
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	ax = ax - 1<16>
	SZO = cond(ax)
	di = di - 1<16>
	SZO = cond(di)
	si = si - 1<16>
	SZO = cond(si)
	bp = bp + 1<16>
	SZO = cond(bp)
	v1071 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1071
	SCZO = cond(v1071)
	v1072 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1072
	SCZO = cond(v1072)
	v1073 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1073
	SCZO = cond(v1073)
	v1074 = Mem0[ss:bp + 79<i16>:byte] + al
	Mem0[ss:bp + 79<i16>:byte] = v1074
	SCZO = cond(v1074)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	cx = cx - 1<16>
	SZO = cond(cx)
	v1075 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1075
	v1076 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1076
	SCZO = cond(v1076)
	v1077 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1077
	SCZO = cond(v1077)
	v1078 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1078
	SCZO = cond(v1078)
	sp = sp + 1<16>
	SZO = cond(sp)
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	si = si - 1<16>
	SZO = cond(si)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	cx = cx - 1<16>
	SZO = cond(cx)
	di = di + 1<16>
	SZO = cond(di)
	cx = cx + 1<16>
	SZO = cond(cx)
	v1079 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1079
	SCZO = cond(v1079)
	v1080 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1080
	SCZO = cond(v1080)
	__syscall<byte>(0x15<8>)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v1081 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1081
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp + 1<16>
	SZO = cond(sp)
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v1082 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1082
	SCZO = cond(v1082)
	v1083 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1083
	SCZO = cond(v1083)
	v1084 = Mem0[ds:0x415A<16>:byte] + dl
	Mem0[ds:0x415A<16>:byte] = v1084
	SCZO = cond(v1084)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp + 1<16>
	SZO = cond(sp)
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v1085 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1085
	SCZO = cond(v1085)
	v1086 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1086
	SCZO = cond(v1086)
	v1087 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1087
	SCZO = cond(v1087)
	dh = dh + ch
	SCZO = cond(dh)
	ax = ax + 0x4A<16> + C
	SCZO = cond(ax)
	v1088 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1088
	SCZO = cond(v1088)
	v1089 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1089
	SCZO = cond(v1089)
	v1090 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1090
	SCZO = cond(v1090)
	v1091 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1091
	SCZO = cond(v1091)
	v1092 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1092
	SCZO = cond(v1092)
	v1093 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1093
	SCZO = cond(v1093)
	v1094 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1094
	SCZO = cond(v1094)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	v1095 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1095
	SCZO = cond(v1095)
	v1096 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1096
	SCZO = cond(v1096)
	v1097 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1097
	SCZO = cond(v1097)
	v1098 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1098
	SCZO = cond(v1098)
	v1099 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1099
	SCZO = cond(v1099)
	v1100 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1100
	SCZO = cond(v1100)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp + 1<16>
	SZO = cond(sp)
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 1<16>
	SZO = cond(sp)
	v1101 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1101
	SCZO = cond(v1101)
	v1102 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1102
	SCZO = cond(v1102)
	v1103 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1103
	SCZO = cond(v1103)
	di = di + 1<16>
	SZO = cond(di)
	bp = bp + 1<16>
	SZO = cond(bp)
	v1104 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1104
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	v1105 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1105
	cx = cx + 1<16>
	SZO = cond(cx)
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v1106 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1106
	SCZO = cond(v1106)
	v1107 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1107
	SCZO = cond(v1107)
	cpu_debug_break()
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ss
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	dx = dx + 1<16>
	SZO = cond(dx)
	bp = bp + 1<16>
	SZO = cond(bp)
	di = di + 1<16>
	SZO = cond(di)
	si = si + 1<16>
	SZO = cond(si)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	v1108 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1108
	SCZO = cond(v1108)
	v1109 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1109
	SCZO = cond(v1109)
	v1110 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1110
	SCZO = cond(v1110)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	dx = dx + 1<16>
	SZO = cond(dx)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bx = bx - 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp + 1<16>
	SZO = cond(sp)
	v1111 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1111
	SCZO = cond(v1111)
	v1112 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1112
	SCZO = cond(v1112)
	v1113 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1113
	SCZO = cond(v1113)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp + 1<16>
	SZO = cond(sp)
	dx = dx + 1<16>
	SZO = cond(dx)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	v1114 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1114
	SCZO = cond(v1114)
	v1115 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1115
	SCZO = cond(v1115)
	v1116 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1116
	SCZO = cond(v1116)
	v1117 = Mem0[ds:bx + 82<i16> + si:byte] + dl
	Mem0[ds:bx + 82<i16> + si:byte] = v1117
	SCZO = cond(v1117)
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si + 1<16>
	SZO = cond(si)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v1118 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1118
	SCZO = cond(v1118)
	v1119 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1119
	SCZO = cond(v1119)
	v1120 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1120
	SCZO = cond(v1120)
	v1121 = Mem0[ds:bx + 75<i16>:byte] + cl
	Mem0[ds:bx + 75<i16>:byte] = v1121
	SCZO = cond(v1121)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	bp = bp + 1<16>
	SZO = cond(bp)
	bx = bx + 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v1122 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1122
	v1123 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1123
	SCZO = cond(v1123)
	v1124 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1124
	SCZO = cond(v1124)
	v1125 = Mem0[ss:bp + 0x4F16<16>:byte] + bl
	Mem0[ss:bp + 0x4F16<16>:byte] = v1125
	SCZO = cond(v1125)
	bx = bx - 1<16>
	SZO = cond(bx)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx - 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	dx = dx + 1<16>
	SZO = cond(dx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	bp = bp + 1<16>
	SZO = cond(bp)
	v1126 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1126
	SCZO = cond(v1126)
	v1127 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1127
	SCZO = cond(v1127)
	v1128 = Mem0[ds:si:word16]
	Mem0[es:di:word16] = v1128
	si = si + 2<i16>
	di = di + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ss
	di = di - 1<16>
	SZO = cond(di)
	bx = bx - 1<16>
	SZO = cond(bx)
	dx = dx + 1<16>
	SZO = cond(dx)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bx = bx - 1<16>
	SZO = cond(bx)
	v1129 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1129
	SCZO = cond(v1129)
	v1130 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1130
	SCZO = cond(v1130)
	v1131 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1131
	SCZO = cond(v1131)
	v1132 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1132
	SCZO = cond(v1132)
	cl = 0x16<8>
	di = di - 1<16>
	SZO = cond(di)
	bx = bx - 1<16>
	SZO = cond(bx)
	cx = cx + 1<16>
	SZO = cond(cx)
	bx = bx + 1<16>
	SZO = cond(bx)
	di = di - 1<16>
	SZO = cond(di)
	ax = ax - 1<16>
	SZO = cond(ax)
	v1133 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1133
	SCZO = cond(v1133)
	v1134 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1134
	SCZO = cond(v1134)
	v1135 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1135
	SCZO = cond(v1135)
	v1136 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1136
	SCZO = cond(v1136)
	si = 0x4F16<16>
	bx = bx - 1<16>
	SZO = cond(bx)
	sp = sp + 1<16>
	SZO = cond(sp)
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v1137 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1137
	SCZO = cond(v1137)
	v1138 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1138
	SCZO = cond(v1138)
	v1139 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1139
	SCZO = cond(v1139)
	v1140 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1140
	SCZO = cond(v1140)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ss
	bx = bx - 1<16>
	SZO = cond(bx)
	v1141 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1141
	SCZO = cond(v1141)
	v1142 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1142
	SCZO = cond(v1142)
	v1143 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1143
	SCZO = cond(v1143)
	v1144 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1144
	SCZO = cond(v1144)
	v1145 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1145
	SCZO = cond(v1145)
	v1146 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1146
	SCZO = cond(v1146)
	v1147 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1147
	SCZO = cond(v1147)
	v1148 = Mem0[ss:bp + 75<i16> + di:byte] + cl
	Mem0[ss:bp + 75<i16> + di:byte] = v1148
	SCZO = cond(v1148)
	v1149 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1149
	SCZO = cond(v1149)
	v1150 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1150
	SCZO = cond(v1150)
	v1151 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1151
	SCZO = cond(v1151)
	v1152 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1152
	SCZO = cond(v1152)
	v1153 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1153
	SCZO = cond(v1153)
	v1154 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1154
	SCZO = cond(v1154)
	v1155 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1155
	SCZO = cond(v1155)
	di = di - 1<16>
	SZO = cond(di)
	bx = bx - 1<16>
	SZO = cond(bx)
	si = si + 1<16>
	SZO = cond(si)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	di = di - 1<16>
	SZO = cond(di)
	v1156 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1156
	SCZO = cond(v1156)
	v1157 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1157
	SCZO = cond(v1157)
	v1158 = Mem0[ds:si + 0x4F16<16>:byte] + ch
	Mem0[ds:si + 0x4F16<16>:byte] = v1158
	SCZO = cond(v1158)
	bx = bx - 1<16>
	SZO = cond(bx)
	dx = dx + 1<16>
	SZO = cond(dx)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bx = bx - 1<16>
	SZO = cond(bx)
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v1159 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1159
	SCZO = cond(v1159)
	v1160 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1160
	SCZO = cond(v1160)
	v1161 = Mem0[ds:bx + 0x4F16<16>:byte] + dh
	Mem0[ds:bx + 0x4F16<16>:byte] = v1161
	SCZO = cond(v1161)
	bx = bx - 1<16>
	SZO = cond(bx)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	ax = ax - 1<16>
	SZO = cond(ax)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v1162 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1162
	SCZO = cond(v1162)
	v1163 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1163
	SCZO = cond(v1163)
	Mem0[ds:0x4143<16>:byte] = 0x53<8>
	bx = bx + 1<16>
	SZO = cond(bx)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	dx = dx + 1<16>
	SZO = cond(dx)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	v1164 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1164
	SCZO = cond(v1164)
	v1165 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1165
	SCZO = cond(v1165)
	v1166 = Mem0[ds:0x5552<16>:byte] + 0x4E<8> + C
	Mem0[ds:0x5552<16>:byte] = v1166
	SCZO = cond(v1166)
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp + 1<16>
	SZO = cond(sp)
	dx = dx + 1<16>
	SZO = cond(dx)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 1<16>
	SZO = cond(sp)
	v1167 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1167
	SCZO = cond(v1167)
	v1168 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1168
	SCZO = cond(v1168)
	v1169 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1169
	SCZO = cond(v1169)
	v1170 = Mem0[ss:bp + 85<i16> + si:byte] + dl
	Mem0[ss:bp + 85<i16> + si:byte] = v1170
	SCZO = cond(v1170)
	si = si - 1<16>
	SZO = cond(si)
	dx = dx + 1<16>
	SZO = cond(dx)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bx = bx - 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp + 1<16>
	SZO = cond(sp)
	v1171 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1171
	SCZO = cond(v1171)
	v1172 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1172
	SCZO = cond(v1172)
	v1173 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1173
	SCZO = cond(v1173)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	si = si - 1<16>
	SZO = cond(si)
	si = si + 1<16>
	SZO = cond(si)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	v1174 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1174
	SCZO = cond(v1174)
	v1175 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1175
	SCZO = cond(v1175)
	v1176 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1176
	SCZO = cond(v1176)
	v1177 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v1177
	SCZO = cond(v1177)
	bx = bx + 1<16>
	SZO = cond(bx)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	ax = ax - 1<16>
	SZO = cond(ax)
	si = si + 1<16>
	SZO = cond(si)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp + 1<16>
	SZO = cond(sp)
	v1178 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1178
	SCZO = cond(v1178)
	v1179 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1179
	SCZO = cond(v1179)
	v1180 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1180
	SCZO = cond(v1180)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	dx = dx + 1<16>
	SZO = cond(dx)
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bx = bx - 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si - 1<16>
	SZO = cond(si)
	sp = sp + 1<16>
	SZO = cond(sp)
	v1181 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1181
	SCZO = cond(v1181)
	v1182 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1182
	SCZO = cond(v1182)
	v1183 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1183
	SCZO = cond(v1183)
	v1184 = Mem0[ss:bp + 67<i16> + di:byte] + dl
	Mem0[ss:bp + 67<i16> + di:byte] = v1184
	SCZO = cond(v1184)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bx = bx + 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si - 1<16>
	SZO = cond(si)
	v1185 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1185
	SCZO = cond(v1185)
	v1186 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1186
	SCZO = cond(v1186)
	v1187 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1187
	SCZO = cond(v1187)
	v1188 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1188
	SCZO = cond(v1188)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v1189 = Mem0[ds:si:byte] ^ dh
	Mem0[ds:si:byte] = v1189
	SZ = cond(Mem0[ds:si:byte])
	O = false
	C = false
	v1190 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1190
	SCZO = cond(v1190)
	v1191 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1191
	SCZO = cond(v1191)
	v1192 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1192
	SCZO = cond(v1192)
	v1193 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1193
	SCZO = cond(v1193)
	v1194 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v1194
	SCZO = cond(v1194)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v1195 = Mem0[ds:bx + si:word16] ^ si
	Mem0[ds:bx + si:word16] = v1195
	SZ = cond(Mem0[ds:bx + si:word16])
	O = false
	C = false
	v1196 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1196
	SCZO = cond(v1196)
	v1197 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1197
	SCZO = cond(v1197)
	v1198 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1198
	SCZO = cond(v1198)
	v1199 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1199
	SCZO = cond(v1199)
	v1200 = Mem0[ds:di + 89<i16>:byte] + cl
	Mem0[ds:di + 89<i16>:byte] = v1200
	SCZO = cond(v1200)
	si = si - 1<16>
	SZO = cond(si)
	bp = bp + 1<16>
	SZO = cond(bp)
	v1201 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1201
	v1202 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1202
	SCZO = cond(v1202)
	v1203 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1203
	SCZO = cond(v1203)
	v1204 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1204
	SCZO = cond(v1204)
	v1205 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1205
	SCZO = cond(v1205)
	v1206 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1206
	SCZO = cond(v1206)
	v1207 = Mem0[ds:bx + 78<i16> + di:byte] + cl
	Mem0[ds:bx + 78<i16> + di:byte] = v1207
	SCZO = cond(v1207)
	bx = bx + 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v1208 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1208
	cx = cx + 1<16>
	SZO = cond(cx)
	v1209 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1209
	SCZO = cond(v1209)
	v1210 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1210
	SCZO = cond(v1210)
	v1211 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1211
	SCZO = cond(v1211)
	dx = dx + Mem0[ds:bx:word16] + C
	SCZO = cond(dx)
	bx = bx + 1<16>
	SZO = cond(bx)
	di = di - 1<16>
	SZO = cond(di)
	bp = bp - 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	v1212 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1212
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bx = bx + 1<16>
	SZO = cond(bx)
	v1213 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1213
	SCZO = cond(v1213)
	v1214 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1214
	SCZO = cond(v1214)
	di = Mem0[ss:sp:word16]
	sp = sp + 2<16>
	si = Mem0[ss:sp:word16]
	sp = sp + 2<16>
	bp = Mem0[ss:sp:word16]
	sp = sp + 2<16>
	sp = sp + 2<16>
	bx = Mem0[ss:sp:word16]
	sp = sp + 2<16>
	dx = Mem0[ss:sp:word16]
	sp = sp + 2<16>
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<16>
	ax = Mem0[ss:sp:word16]
	sp = sp + 2<16>
	ss = Mem0[ss:sp:selector]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp + 1<16>
	SZO = cond(sp)
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v1215 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1215
	SCZO = cond(v1215)
	v1216 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1216
	SCZO = cond(v1216)
	v1217 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1217
	SCZO = cond(v1217)
	v1218 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1218
	SCZO = cond(v1218)
	v1219 = Mem0[ss:bp + 66<i16> + di:byte] + al
	Mem0[ss:bp + 66<i16> + di:byte] = v1219
	SCZO = cond(v1219)
	v1220 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1220
	SCZO = cond(v1220)
	v1221 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1221
	SCZO = cond(v1221)
	v1222 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1222
	SCZO = cond(v1222)
	v1223 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1223
	SCZO = cond(v1223)
	v1224 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1224
	SCZO = cond(v1224)
	v1225 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1225
	SCZO = cond(v1225)
	v1226 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1226
	SCZO = cond(v1226)
	bx = bx + 1<16>
	SZO = cond(bx)
	cx = cx + 1<16>
	SZO = cond(cx)
	v1227 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1227
	SCZO = cond(v1227)
	v1228 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1228
	SCZO = cond(v1228)
	v1229 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1229
	SCZO = cond(v1229)
	v1230 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1230
	SCZO = cond(v1230)
	v1231 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1231
	SCZO = cond(v1231)
	v1232 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1232
	SCZO = cond(v1232)
	v1233 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1233
	SCZO = cond(v1233)
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bx = bx + 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v1234 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1234
	cx = cx + 1<16>
	SZO = cond(cx)
	v1235 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1235
	v1236 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1236
	SCZO = cond(v1236)
	v1237 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1237
	SCZO = cond(v1237)
	v1238 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1238
	SCZO = cond(v1238)
	SCZO = cond(al - 0x17<8>)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp + 1<16>
	SZO = cond(sp)
	di = di + 1<16>
	SZO = cond(di)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v1239 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1239
	SCZO = cond(v1239)
	v1240 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1240
	SCZO = cond(v1240)
	v1241 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1241
	SCZO = cond(v1241)
	v1242 = Mem0[ds:bx + 78<i16> + di:byte] + cl
	Mem0[ds:bx + 78<i16> + di:byte] = v1242
	SCZO = cond(v1242)
	bx = bx + 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si - 1<16>
	SZO = cond(si)
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = si
	cx = cx - 1<16>
	SZO = cond(cx)
	di = di + 1<16>
	SZO = cond(di)
	cx = cx + 1<16>
	SZO = cond(cx)
	v1243 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1243
	SCZO = cond(v1243)
	v1244 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1244
	SCZO = cond(v1244)
	dx = Mem0[ds:bx:word16] *s 0x5055<16>
	SCZO = cond(dx)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v1245 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1245
	bp = bp + 1<16>
	SZO = cond(bp)
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bx = bx + 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	v1246 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1246
	SCZO = cond(v1246)
	v1247 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1247
	SCZO = cond(v1247)
	ax = CONVERT(al, int8, int16)
	ss = Mem0[ss:sp:selector]
	sp = sp + 2<i16>
	dx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	cx = cx + 1<16>
	SZO = cond(cx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bx = bx + 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	v1248 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1248
	SCZO = cond(v1248)
	v1249 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1249
	SCZO = cond(v1249)
	v1250 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1250
	SCZO = cond(v1250)
	v1251 = Mem0[ds:bx + 0x5317<16> + di:byte] + dl
	Mem0[ds:bx + 0x5317<16> + di:byte] = v1251
	SCZO = cond(v1251)
	bx = bx + 1<16>
	SZO = cond(bx)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bx = bx + 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	cx = cx + 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	v1252 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1252
	SCZO = cond(v1252)
	v1253 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1253
	SCZO = cond(v1253)
	v1254 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1254
	SCZO = cond(v1254)
	bp = bp + 1<16>
	SZO = cond(bp)
	ax = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	v1255 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1255
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	cx = cx + 1<16>
	SZO = cond(cx)
	bx = bx + 1<16>
	SZO = cond(bx)
	v1256 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1256
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bx = bx + 1<16>
	SZO = cond(bx)
	v1257 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1257
	SCZO = cond(v1257)
	v1258 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1258
	SCZO = cond(v1258)
	ax = __aam(al)
	di = di - 1<16>
	SZO = cond(di)
	bx = bx - 1<16>
	SZO = cond(bx)
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bx = bx + 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	v1259 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1259
	SCZO = cond(v1259)
	v1260 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1260
	SCZO = cond(v1260)
	v1261 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1261
	SCZO = cond(v1261)
	v1262 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1262
	SCZO = cond(v1262)
	si = 0x4F17<16>
	bx = bx - 1<16>
	SZO = cond(bx)
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bx = bx + 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp + 1<16>
	SZO = cond(sp)
	v1263 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1263
	SCZO = cond(v1263)
	v1264 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1264
	SCZO = cond(v1264)
	cl = cl + cl
	SCZO = cond(cl)
	ss = Mem0[ss:sp:selector]
	sp = sp + 2<i16>
	di = di - 1<16>
	SZO = cond(di)
	bx = bx - 1<16>
	SZO = cond(bx)
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bx = bx + 1<16>
	SZO = cond(bx)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v1265 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1265
	bp = bp + 1<16>
	SZO = cond(bp)
	v1266 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1266
	SCZO = cond(v1266)
	v1267 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1267
	SCZO = cond(v1267)
	v1268 = (Mem0[ds:bx:byte] & 1<8> << 8<8> - 1<8>) != 0<8>
	Mem0[ds:bx:byte] = __rcl<byte,byte>(Mem0[ds:bx:byte], 1<8>, C)
	C = v1268
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v1269 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1269
	bp = bp + 1<16>
	SZO = cond(bp)
	al = al ^ Mem0[ds:bx + si:byte]
	SZ = cond(al)
	O = false
	C = false
	v1270 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1270
	SCZO = cond(v1270)
	v1271 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1271
	SCZO = cond(v1271)
	v1272 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1272
	SCZO = cond(v1272)
	v1273 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1273
	SCZO = cond(v1273)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp + 1<16>
	SZO = cond(sp)
	cx = cx + 1<16>
	SZO = cond(cx)
	v1274 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1274
	bp = bp + 1<16>
	SZO = cond(bp)
	v1275 = Mem0[ds:bx + si:word16] ^ ax
	Mem0[ds:bx + si:word16] = v1275
	SZ = cond(Mem0[ds:bx + si:word16])
	O = false
	C = false
	v1276 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1276
	SCZO = cond(v1276)
	v1277 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1277
	SCZO = cond(v1277)
	v1278 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1278
	SCZO = cond(v1278)
	v1279 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1279
	SCZO = cond(v1279)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v1280 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1280
	v1281 = Mem0[ds:bx + si:word16] ^ ax
	Mem0[ds:bx + si:word16] = v1281
	SZ = cond(Mem0[ds:bx + si:word16])
	O = false
	C = false
	v1282 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1282
	SCZO = cond(v1282)
	v1283 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1283
	SCZO = cond(v1283)
	v1284 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1284
	SCZO = cond(v1284)
	v1285 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1285
	SCZO = cond(v1285)
	v1286 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1286
	SCZO = cond(v1286)
	bp = bp - 1<16>
	SZO = cond(bp)
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v1287 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v1287
	al = al ^ Mem0[ds:bx + si:byte]
	SZ = cond(al)
	O = false
	C = false
	v1288 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1288
	SCZO = cond(v1288)
	v1289 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1289
	SCZO = cond(v1289)
	v1290 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1290
	SCZO = cond(v1290)
	v1291 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1291
	SCZO = cond(v1291)
	v1292 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1292
	SCZO = cond(v1292)
	v1293 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1293
	SCZO = cond(v1293)
	v1294 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1294
	SCZO = cond(v1294)
	v1295 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1295
	SCZO = cond(v1295)
	v1296 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1296
	SCZO = cond(v1296)
	v1297 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1297
	SCZO = cond(v1297)
	v1298 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1298
	SCZO = cond(v1298)
	v1299 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1299
	SCZO = cond(v1299)
	v1300 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1300
	SCZO = cond(v1300)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	cx = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	v1301 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1301
	SCZO = cond(v1301)
	v1302 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1302
	SCZO = cond(v1302)
	v1303 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1303
	SCZO = cond(v1303)
	bh = 0x3C<8>
	bp = bp + 1<16>
	SZO = cond(bp)
	ax = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	di = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	di = di - 1<16>
	SZO = cond(di)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	v1304 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1304
	SCZO = cond(v1304)
	v1305 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1305
	SCZO = cond(v1305)
	dx = 0x4E3C<16>
	cx = cx + 1<16>
	SZO = cond(cx)
	bp = bp - 1<16>
	SZO = cond(bp)
	bp = bp + 1<16>
	SZO = cond(bp)
	v1306 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1306
	SCZO = cond(v1306)
	v1307 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1307
	SCZO = cond(v1307)
	v1308 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1308
	SCZO = cond(v1308)
	v1309 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1309
	SCZO = cond(v1309)
	v1310 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1310
	SCZO = cond(v1310)
	v1311 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1311
	SCZO = cond(v1311)
	sp = sp - 1<16>
	SZO = cond(sp)
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	bp = bp + 1<16>
	SZO = cond(bp)
	v1312 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1312
	SCZO = cond(v1312)
	v1313 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1313
	SCZO = cond(v1313)
	v1314 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1314
	SCZO = cond(v1314)
	v1315 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1315
	SCZO = cond(v1315)
	v1316 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1316
	SCZO = cond(v1316)
	v1317 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1317
	SCZO = cond(v1317)
	cx = cx - 1<16>
	SZO = cond(cx)
	si = si - 1<16>
	SZO = cond(si)
	si = si + 1<16>
	SZO = cond(si)
	di = di - 1<16>
	SZO = cond(di)
	v1318 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1318
	SCZO = cond(v1318)
	v1319 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1319
	SCZO = cond(v1319)
	v1320 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1320
	SCZO = cond(v1320)
	v1321 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1321
	SCZO = cond(v1321)
	v1322 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1322
	SCZO = cond(v1322)
	v1323 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1323
	SCZO = cond(v1323)
	bp = bp - 1<16>
	SZO = cond(bp)
	di = di - 1<16>
	SZO = cond(di)
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 1<16>
	SZO = cond(sp)
	v1324 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1324
	SCZO = cond(v1324)
	v1325 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1325
	SCZO = cond(v1325)
	v1326 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1326
	SCZO = cond(v1326)
	v1327 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1327
	SCZO = cond(v1327)
	v1328 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1328
	SCZO = cond(v1328)
	v1329 = Mem0[ds:bx + 49<i16>:byte] + bl
	Mem0[ds:bx + 49<i16>:byte] = v1329
	SCZO = cond(v1329)
	v1330 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1330
	SCZO = cond(v1330)
	v1331 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1331
	SCZO = cond(v1331)
	v1332 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1332
	SCZO = cond(v1332)
	v1333 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1333
	SCZO = cond(v1333)
	v1334 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1334
	SCZO = cond(v1334)
	v1335 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1335
	SCZO = cond(v1335)
	v1336 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1336
	SCZO = cond(v1336)
	di = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	al = al ^ Mem0[ds:bx + si:byte]
	SZ = cond(al)
	O = false
	C = false
	v1337 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1337
	SCZO = cond(v1337)
	v1338 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1338
	SCZO = cond(v1338)
	v1339 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1339
	SCZO = cond(v1339)
	v1340 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1340
	SCZO = cond(v1340)
	v1341 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1341
	SCZO = cond(v1341)
	v1342 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1342
	SCZO = cond(v1342)
	v1343 = Mem0[ds:bx + 51<i16>:byte] + bl
	Mem0[ds:bx + 51<i16>:byte] = v1343
	SCZO = cond(v1343)
	v1344 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1344
	SCZO = cond(v1344)
	v1345 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1345
	SCZO = cond(v1345)
	v1346 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1346
	SCZO = cond(v1346)
	v1347 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1347
	SCZO = cond(v1347)
	v1348 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1348
	SCZO = cond(v1348)
	v1349 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1349
	SCZO = cond(v1349)
	v1350 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1350
	SCZO = cond(v1350)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bp
	si = si - 1<16>
	SZO = cond(si)
	sp = sp + 1<16>
	SZO = cond(sp)
	bp = bp + 1<16>
	SZO = cond(bp)
	si = si + 1<16>
	SZO = cond(si)
	di = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	bp = bp + 1<16>
	SZO = cond(bp)
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = dx
	di = di - 1<16>
	SZO = cond(di)
	v1351 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1351
	SCZO = cond(v1351)
	v1352 = Mem0[ds:bx + si:byte] + al
	Mem0[ds:bx + si:byte] = v1352
	SCZO = cond(v1352)
	return
	// succ:  fn3CEE_EC3E_exit
fn3CEE_EC3E_exit:


