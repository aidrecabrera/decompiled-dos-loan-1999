// fn3CEE_B417
// Return size: 4
define fn3CEE_B417
fn3CEE_B417_entry:
	sp = fp
	Top = 0<i8>
	// succ:  l3CEE_B417
l3CEE_B417:
	v7 = Mem0[ds:si - 113<i16>:byte] + ah
	Mem0[ds:si - 113<i16>:byte] = v7
	SCZO = cond(v7)
	v12 = Mem0[ss:bp + 0x1E<16> + si:word16] + bx
	Mem0[ss:bp + 0x1E<16> + si:word16] = v12
	SCZO = cond(v12)
	v13 = sp
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = v13
	ax = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	SCZO = cond(al - Mem0[ds:bx + si:byte])
	v16 = cx
	cx = ax
	ax = v16
	v19 = Mem0[ds:bx + 0x3901<16>:word16] + dx
	Mem0[ds:bx + 0x3901<16>:word16] = v19
	SCZO = cond(v19)
	v21 = Mem0[ds:bx + 0x2E01<16>:byte] + dl
	Mem0[ds:bx + 0x2E01<16>:byte] = v21
	SCZO = cond(v21)
	v23 = Mem0[ss:bp + 0x1E<16> + si:byte] + bl
	Mem0[ss:bp + 0x1E<16> + si:byte] = v23
	SCZO = cond(v23)
	al = al | Mem0[ds:(bx + 0xAA6F<16>) + si:byte]
	SZ = cond(al)
	O = false
	C = false
	v27 = di
	di = ax
	ax = v27
	v29 = Mem0[ds:0x8600<16>:word16] + bp
	Mem0[ds:0x8600<16>:word16] = v29
	SCZO = cond(v29)
	FPUF = cond(ST[Top:real64] - Mem0[ds:di:real32])
	Top = Top + 1<i8>
	v33 = Mem0[ds:bx + 0x9264<16> + di:byte] + cl
	Mem0[ds:bx + 0x9264<16> + di:byte] = v33
	SCZO = cond(v33)
	v34 = Mem0[ss:bp + 0x1D<16>:word16] + bx
	Mem0[ss:bp + 0x1D<16>:word16] = v34
	SCZO = cond(v34)
	v35 = di
	di = ax
	ax = v35
	v36 = Mem0[ds:bx + di:word16] + di
	Mem0[ds:bx + di:word16] = v36
	SCZO = cond(v36)
	v37 = Mem0[ss:bp + 0x1E<16> + si:byte] + bl
	Mem0[ss:bp + 0x1E<16> + si:byte] = v37
	SCZO = cond(v37)
	Z = __arpl(Mem0[ss:bp + 0x1D<16> + si:word16], bx, &Mem0[ss:bp + 0x1D<16> + si:word16])
	Z = __arpl(Mem0[ds:bx - 86<i16>:word16], bx, &Mem0[ds:bx - 86<i16>:word16])
	v39 = al
	al = bl
	bl = v39
	ax = ax - 0x8900<16> - C
	SCZO = cond(ax)
	v40 = sp
	sp = ax
	ax = v40
	v41 = Mem0[ds:bx + 19<i16> + di:word16] + bx
	Mem0[ds:bx + 19<i16> + di:word16] = v41
	SCZO = cond(v41)
	v42 = Mem0[ds:si - 106<i16>:byte] + ah
	Mem0[ds:si - 106<i16>:byte] = v42
	SCZO = cond(v42)
	v43 = Mem0[ds:bx + 0x3901<16>:word16] + dx
	Mem0[ds:bx + 0x3901<16>:word16] = v43
	SCZO = cond(v43)
	v44 = Mem0[ss:bp + 0x1E<16> + si:byte] + bl
	Mem0[ss:bp + 0x1E<16> + si:byte] = v44
	SCZO = cond(v44)
	Z = __arpl(Mem0[ss:bp + 0x1DD8<16> + si:word16], bx, &Mem0[ss:bp + 0x1DD8<16> + si:word16])
	v45 = Mem0[ds:bx + 0x9864<16> + di:byte] + cl
	Mem0[ds:bx + 0x9864<16> + di:byte] = v45
	SCZO = cond(v45)
	v46 = Mem0[ds:si - 102<i16>:word16] + sp
	Mem0[ds:si - 102<i16>:word16] = v46
	SCZO = cond(v46)
	v47 = Mem0[ds:bx + 13<i16> + di:word16] + bx
	Mem0[ds:bx + 13<i16> + di:word16] = v47
	SCZO = cond(v47)
	v48 = Mem0[ds:si - 100<i16>:byte] + ah
	Mem0[ds:si - 100<i16>:byte] = v48
	SCZO = cond(v48)
	v49 = Mem0[ds:bx + 0<16>:word16] + dx
	Mem0[ds:bx + 0<16>:word16] = v49
	SCZO = cond(v49)
	FPUF = cond(ST[Top:real64] - Mem0[ds:di:real32])
	Top = Top + 1<i8>
	v50 = Mem0[ds:bx + 0x9E64<16> + di:byte] + cl
	Mem0[ds:bx + 0x9E64<16> + di:byte] = v50
	SCZO = cond(v50)
	v51 = Mem0[ds:si - 96<i16>:word16] + sp
	Mem0[ds:si - 96<i16>:word16] = v51
	SCZO = cond(v51)
	v52 = Mem0[ss:bp + 0x1D<16>:word16] + bx
	Mem0[ss:bp + 0x1D<16>:word16] = v52
	SCZO = cond(v52)
	al = 0x59<8>
	ax = ax + Mem0[ds:bx + si:word16]
	SCZO = cond(ax)
	SZP = cond(al & 1<8>)
	O = false
	C = false
	al = al ^ 0x55<8>
	SZ = cond(al)
	O = false
	C = false
	bp = sp
	bx = bx ^ bx
	SZ = cond(bx)
	O = false
	C = false
	ax = 0<16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	ax = 0x4CB2<16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = bx
	ax = 0x1D<16>
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = cs
	sp = sp - 2<i16>
	Mem0[ss:sp:word16] = ax
	call fn3BC2_0000 (retsize: 4;)
	sp = bp
	bp = Mem0[ss:sp:word16]
	sp = sp + 2<i16>
	return
	// succ:  fn3CEE_B417_exit
fn3CEE_B417_exit:


